12345UNICAD FILE HEADER DATA
  128*INCH**DATE:12/03/2019, 09:21NCL VERSION*2019.00    8     STREAM      ASCII     **WINDOWS*NT*
     1: % test_rev.pp
     2: % test revers/on, off with cutter comp
     3: CA    /ON
     4: ZSURF /NM
     5: TRACUT/NM
     6: RS    /NM
     7: MODSYS/NM
     8: machin/pworks,34
     9: arcslp/lincir,on
    10: set/lincir,.0015,all
    11: multax/on
    12: disply/on
    13: %
    14: plz=pl/0,0,1,0
    15: clr=pl/0,0,1,1
    16: pl1=pl/1,0,0,0
    17: pl2=pl/0,1,0,1
    18: PL3=pl/pa,pl2,ys,2
    19: %
    20: %includ/c:\user\allen\_mac\34.mac
    21: includ/C:\Users\Alex Soiguine\Desktop\KenProblem\61806\34.mac
    22# $$ DATE THIS FILE WAS LAST UPDATED 4-1-2019
    23# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    24# $$========= MACROS FOR MACHINE 34 - ROBO-DRILL WITH DTT TABLE
    25# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    26# $$   **stop
    27# IPV   =0
    28# FIRST1 = 0
    29#
    30# 5axis=macro/fofstx=0,fofsty=0,fofstz=0,fofstb=0,fofstc=0,$
    31# fofstn=1
    32# ttablx=fofstx
    33# ttably=fofsty
    34# ttablz=fofstz
    35# ttablb=fofstb
    36# ttablc=fofstc
    37#
    38# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    39# $$ SET UP MISC. STUFF WITH NOTES
    40# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    41# $$----------------------------------------------------------------
    42# $$ 1: Calibrate machine per factory specs.
    43# $$----------------------------------------------------------------
    44# $$ GRIDX1 IS MEASURED FROM THE CL
    45# $$ OF THE C AXIS TO MACHINE X ZERO
    46# GRIDX1=-(189.384-19.969)/25.4
    47# $$-------------------------
    48# $$ GRIDX2 IS MEASURED FROM THE CL
    49# $$ OF THE B AXIS TO MACHINE X ZERO
    50# GRIDX2=-189.384/25.4
    51# $$-------------------------
    52# $$ GRIDY1 IS MEASURED FROM THE PIVOT POINT
    53# $$ OF THE C AXIS TO MACHINE Y ZERO
    54# GRIDY1=196.370/25.4
    55# $$-------------------------
    56# $$ GRIDZ1 IS MEASURED FROM THE CL
    57# $$ OF THE C AXIS TO MACHINE Z ZERO
    58# GRIDZ1=0
    59# $$-------------------------
    60# $$ GRIDZ2 IS MEASURED FROM THE CL
    61# $$ OF THE B AXIS TO MACHINE Z ZERO
    62# GRIDZ2=484.692/25.4
    63# $$-------------------------------------------
    64# $$ ROTABL/ORIGIN,AXIS,1,0,0,0    C AXIS NEEDS X AND Y
    65# $$ ROTABL/ORIGIN,AXIS,2,0,0,0    B AXIS NEEDS X AND Z
    66# $$----------------------------------------------
    67# $$ NOTE:THE FOLLOWING DEFINES B AXIS AND C AXIS
    68# $$      AXIS 1 REQUIRES 0 FOR Z POSITION
    69# $$      AXIS 2 REQUIRES 0 FOR Y POSITION
    70# $$----------------------------------------------
    71# $$ NOTE: C AXIS NEED X AND Y
    72#       ROTABL/ORIGIN,AXIS,1,$
    73#              -GRIDX1-fofstx,$
    74#              -GRIDY1-fofsty,$
    75#              0
    76# $$------------------------------------
    77# $$ NOTE: B AXIS NEED X AND Z
    78# ROTABL/ORIGIN,AXIS,2,$
    79#               -GRIDX2-fofstx,$
    80#               0,$
    81#               -GRIDZ2-fofstz
    82# $$------------------------------------
    83# %CHECK/XAXIS,-(350/25.4),$
    84# %             (350/25.4),$
    85# %      YAXIS,-(200/25.4),$
    86# %             (200/25.4),$
    87# %      ZAXIS,-999.9999,$
    88# %             999.9999,$
    89# %      AXIS,1,-99999.,99999.,$
    90# %      AXIS,2,-99999.,99999.
    91# $$------------------------------------
    92#
    93# oset=format("%02.0f",fofstn)
    94# INSERT(-------------------------)
    95# insertG10L20P@OSET X@TTABLX Y@TTABLY Z@TTABLZ B@TTABLB C@TTABLC
    96# INSERT(-------------------------)
    97#
    98# STOP
    99# termac
   100#
   101# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   102# $$ TOOL CHANGE MACRO
   103# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   104# TLCHG = MACRO/TLNO=1,RPM1=100,DIA1=1,COR1=0,$
   105#         LAST1=0,STOP1=1,OFNO=1,CHK=0,TOLTL=.010,MSG=0
   106# TLNOV = TLNO
   107# OFNOV = OFNO
   108# DIA   = DIA1
   109# COR   = COR1
   110# HDIA  = DIA/2
   111# CDC   = TLNO
   112# CUTTER/DIA,COR,COR
   113# CUTTER/DISPLY,MOVE,ON
   114#
   115# IF    (FIRST1) TD1, TD1, TD2
   116# TD1:                        $$ TD1 section for 1st tool only
   117#     %SELCTL/TLNO,MODIFY      $$ SET INTERNALLY, OUTPUT NOTHING
   118#     FIRST1=1                $$ change value for first tool change
   119#     JUMPTO/TD5  $$ ----------  1st tool only jumps to TD5
   120# TD2:            $$ ----------- all tools except 1st tool goes here
   121#       IF(LAST1)TD3, TD3, TD8
   122# TD3:
   123#       COOLNT/OFF
   124# insertG49
   125# %INSERTG54.4P0
   126#       IF(CHK)TD5,TD5,TD4
   127# TD4:
   128#       seqno/off
   129#       AUXFUN/7,65,2,16,9613,4,8,CHK,2,1,TOLTL,-4,NOW
   130#       seqno/on
   131# TD5:
   132#       LOADTL/TLNO
   133# $$>>>>>>>>>>
   134# IF(MSG-1)MSG1B,MSG1A,MSG1B
   135# MSG1A:
   136# JUMPTO/MSG99
   137# MSG1B:
   138#
   139# IF(MSG-2)MSG2B,MSG2A,MSG2B
   140# MSG2A:
   141# JUMPTO/MSG99
   142# MSG2B:
   143#
   144# IF(MSG-3)MSG3B,MSG3A,MSG3B
   145# MSG3A:
   146# JUMPTO/MSG99
   147# MSG3B:
   148#
   149# IF(MSG-4)MSG4B,MSG4A,MSG4B
   150# MSG4A:
   151# JUMPTO/MSG99
   152# MSG4B:
   153#
   154# IF(MSG-5)MSG5B,MSG5A,MSG5B
   155# MSG5A:
   156# JUMPTO/MSG99
   157# MSG5B:
   158#
   159# IF(MSG-6)MSG6B,MSG6A,MSG6B
   160# MSG6A:
   161# INSERTM01
   162# JUMPTO/MSG99
   163# MSG6B:
   164#
   165# MSG99:
   166# $$>>>>>>>>>>
   167#       IF (STOP1)TD7,TD7,TD6
   168# TD6:
   169# OPSTOP
   170# TD7:
   171# $$-------------------------------
   172# $$ CHECK FOR TOOL WITH "0" RPM
   173# $$ SUCH AS PROBE
   174# $$-------------------------------
   175# If (RPM1 'EQ' 0) Then
   176# Else if(RPM1 'NE' 0) Then
   177#     SPINDL/RPM1
   178# Endif
   179# $$-------------------------------
   180#       CUTCOM/ADJUST,OFNO         $$ (1-48) or (54-59)
   181# %INSERTG54.4P1
   182#       %SELCTL/AUTO,NOW
   183#       TOOLNO/ADJUST,TLNO,NEXT
   184#       JUMPTO/TD11
   185# TD8: $$ ---------------------- below this is for last tool only
   186#       COOLNT/OFF
   187#       IF(CHK)TD10,TD10,TD9
   188# TD9:
   189#       seqno/off
   190#       AUXFUN/7,65,2,16,9613,4,8,CHK,2,1,TOLTL,-4,NOW
   191#       seqno/on
   192# TD10:
   193# insertG49
   194#       LOADTL/TLNO
   195# $$ OPSTOP
   196# $$ insertM01
   197# %INSERTM00
   198# TD11:
   199# TERMAC
   200# $$-----------------------
   201#
   202#
   203# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   204# $$ DEFINE STANDARD GEOMETRY
   205# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   206# **reset/disply
   207# VPX   =VE/1,0,0
   208# VPY   =VE/0,1,0
   209# VPZ   =VE/0,0,1
   210# VNX   =VE/-1,0,0
   211# VNY   =VE/0,-1,0
   212# VNZ   =VE/0,0,-1
   213# VNE   =VE/1,1,0
   214# VSE   =VE/1,-1,0
   215# VSW   =VE/-1,-1,0
   216# VNW   =VE/-1,1,0
   217# PLX   =PL/1,0,0,0
   218# PLY   =PL/0,1,0,0
   219# PLZ   =PL/0,0,1,0
   220# VL1   =LN/YAXIS
   221# HL1   =LN/XAXIS
   222# P0    =PT/0,0,0
   223# **set/disply
   224# $$---------------------
   225#
   226#
   227# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   228# $$ MISC. MACROS
   229# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   230# scalop =macro/stp1      $$ scallop height
   231# stp2   =hdia-(sqrt((hdia**2)-((stp1/2)**2)))
   232# $$ **stop
   233# **sh  /stp2
   234# termac
   235# $$--------------------------------------------
   236# stepov=macro/scal1     $$ stepover
   237# scal2 =(sqrt((hdia**2)-((hdia-scal1)**2)))*2
   238# $$ **stop
   239# **sh  /scal2
   240# termac
   241# $$-----------------------------------
   242# spfd  =macro/flt2,dia2,sfpm2,clpt2
   243#        rpm2=sfpm2/dia2/.2618
   244#        ipm2=clpt2*flt2*rpm2
   245# termac
   246# $$---------------
   247# CHGINS=MACRO/
   248# $$ **STOP
   249# INSERTG91G28Z0
   250# INSERTG90
   251# %INSERTG54.4P0
   252# COOLNT/OFF
   253# SPINDL/OFF
   254# INSERTM00( CHANGE INSERTS NOW )
   255# SPINDL/ON
   256# CUTCOM/ADJUST,OFNOV         $$ (1-48) or (54-59)
   257# %INSERTG54.4P1
   258# COOLNT/THRU
   259# COOLNT/FLOOD
   260# TOOLNO/ADJUST,TLNOV,NEXT
   261# FEDRAT/FD
   262# TERMAC
   263# $$********************************************
   264# mtc=macro/
   265# $$********************************************
   266# $$----------------------------------------
   267# $$ TRACUT MOTION BACK TO CENTER OF TABLE
   268# $$ USING NUMBERS TAKEN AT MACHINE
   269# $$----------------------------------------
   270# %**STOP
   271# $$ SET UP TRACUT MATRIX
   272# TMX1  =MX/(PT/0,0,0),(VE/1,0,0),(VE/0,1,0)
   273# RS    /TMX1
   274# TTCNTR=PT/-TTABLX,-TTABLY,-TTABLZ
   275# FOFVPX=PV/TTCNTR,(VE/1,0,0)
   276# FOFVPY=PV/TTCNTR,(VE/0,1,0)
   277# FOFVPZ=PV/TTCNTR,(VE/0,0,1)
   278# RS    /NM
   279# REMOVE/TMX1
   280# $$-----------
   281# MXTABL=MX/TTCNTR,FOFVPX,FOFVPY
   282# RS    /MXTABL
   283# RS    /NM
   284# MITABL=MX/INVERS,MXTABL
   285# TRACUT/MITABL
   286# termac
   287# $$---------------
   288# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   289#
   290: includ/C:\Users\Alex Soiguine\Desktop\KenProblem\61806\motion.inc
   291# $$
   292# CANON /ON
   293# $$
   294# %%*SET  /INDENT,SEP,7
   295# *RESET/APTSRC,REMARK
   296# CUTTER/DISPLY,MOVE,ON
   297# DRAFT /CUTTER,COLOR=CYAN,YELLOW
   298# OBTAIN/TOLER,TOLR
   299# DIA   =0
   300# prompt/scalar,dia,"Cutter","Current cutter diameter"
   301# $$
   302# $$ Define standard planes and vectors
   303# $$
   304# *RESET/DISPLY,POINT,VECTOR,PLANE
   305# P0    =POINT/0,0
   306# PLX   =PLANE/1,0,0,0
   307# PLY   =PLANE/0,1,0,0
   308# PLZ   =PLANE/0,0,1,0
   309# $$
   310# VPX   =VECTOR/1,0,0
   311# VPY   =VECTOR/0,1,0
   312# VPZ   =VECTOR/0,0,1
   313# VNX   =VECTOR/-1,0,0
   314# VNY   =VECTOR/0,-1,0
   315# VNZ   =VECTOR/0,0,-1
   316# $$
   317# *SET/DISPLY,POINT,VECTOR,PLANE
   318#
   319# $$
   320# $$ Macro to generate an arc entry move
   321# $$
   322# ARCENT=MACRO/IPT,ISF,IBSF,IRET=ON,IRMP=ON,ITCON=TLLFT,IEXT=0,IERAD=.15
   323# PROMPT/ARCENT,"Entry Exit","Arc Entry"
   324# PROMPT/IPT,  "Select Entry Point",POINT
   325# PROMPT/ISF,  "Select Drive Surface",PLANE,SURF
   326# PROMPT/IBSF, "Select Bottom",PLANE,SURF
   327# PROMPT/IRET, "Position From Clearance Plane",ON,OFF
   328# PROMPT/IRMP, "Axial Ramp During Entry",ON,OFF
   329# PROMPT/ITCON,"Tool Condition",TLLFT,TLRGT
   330# PROMPT/IEXT, "Enter Entry Extension"
   331# PROMPT/IERAD,"Enter Entry Radius"
   332# *RESET/DISPLY
   333# OBTAIN/THICK,PTH,DTH,CTH
   334# OBTAIN/TOLER,TOL
   335#   IF (TYPE(ISF) 'EQ' 10) THEN    $$ SURFACE
   336#     PVV1  =PNTVEC/IPT,ISF
   337#   ELSE                           $$ PLANE
   338#     PVV1  =PV/IPT,(PT/IO,(LN/(PV/IPT,PE,ISF)),ISF)
   339#     PVV1  =PV/UNIT,PVV1
   340#   ENDIF
   341# PVV2  =PNTVEC/IPT,(VECTOR/TLAXIS)
   342# PVV3  =PNTVEC/PVV2,CROSS,PVV1
   343# PLL1  =PLANE/PVV3
   344# PVTE  =PNTVEC/TE,TLAXIS
   345# DISPLY/PLL1
   346# PPPTH =PTH
   347# IF    (VOCABF(IRMP) 'EQ' VOCABF(ON)) PPPTH=PTH+(IERAD*.1)
   348# THICK /PPPTH,(IERAD*1.1)-HDIA,(IERAD*1.01)+DTH+IEXT
   349# DNTCUT
   350# IF   (VOCABF(ITCON) 'EQ' VOCABF(TLRGT)) PVV3=REVERS/PVV3
   351# ON    /ERROR,THEN,ID1,NOWARN
   352# GOTO  /IPT
   353# SRFVCT/PVV3,PVV1
   354# GO    /PLL1,IBSF,ISF
   355# JUMPTO/ID2
   356# ID1:   CONTIN
   357# GOTO  /PVTE
   358# SRFVCT/PVV3,PVV1
   359# GO    /PLL1,IBSF,ISF
   360# ID2:   CONTIN
   361# ON    /ERROR,THEN,STOP
   362# PP1   =POINT/TE
   363#   IF (VOCABF(IRET) 'EQ' VOCABF(ON)) THEN
   364#     GODLTA/CLR
   365#     RAPID
   366#     CUT
   367#     RAPID
   368#     GOTO/PP1
   369#   ELSE
   370#     CUT
   371#   ENDIF
   372# FEDRAT/FD
   373# ARCSLP/FILLET,IERAD
   374# GODLTA/0
   375# THICK /PTH,(IERAD*1.1)-HDIA,CTH
   376# GO    /PLL1,IBSF,ISF
   377# TH    /PTH,DTH,CTH
   378# INDIRV/PVV3
   379# ITCON, GOFWD/ISF,ON,PLL1
   380# ARCSLP/FILLET,0
   381# *SET  /DISPLY
   382# TERMAC
   383#
   384# $$
   385# $$ Macro to generate an arc exit move
   386# $$
   387# ARCEXT=MACRO/ISF,IRMP=ON,IRET=ON,IEXT=0,IERAD=.15
   388# PROMPT/ARCEXT,"Entry Exit","Arc Exit"
   389# PROMPT/ISF,  "Select Drive Surface",PLANE,SURF
   390# PROMPT/IRMP, "Axial Ramp During Exit",ON,OFF
   391# PROMPT/IRET, "Retract Clearance Plane",ON,OFF
   392# PROMPT/IEXT, "Enter Exit Extension"
   393# PROMPT/IERAD,"Enter Exit Radius"
   394# *RESET/DISPLY
   395# OBTAIN/TOLER,TOL
   396# OBTAIN/THICK,PTH,DTH,CTH
   397# PLL1  =PLANE/(PNTVEC/TE,FWD)
   398# PLL2  =PLANE/(PNTVEC/TE,TLAXIS)
   399# GODLTA/0
   400# ARCSLP/FILLET,IERAD
   401# THICK /PTH,DTH,(IERAD*1.05)-HDIA
   402# GOFWD /ISF,PAST,PLL1
   403# PPPTH =0
   404# IF    (VOCABF(IRMP) 'EQ' VOCABF(ON)) PPPTH=(IERAD*.1)
   405# THICK /PPPTH,(IERAD*1.1)-HDIA,IERAD+DTH+IEXT
   406# GO    /PLL1,PLL2,ISF
   407# ARCSLP/FILLET,0
   408# IF    (VOCABF(IRET) 'EQ' VOCABF(ON)) RAPID,GODLTA/CLR
   409# THICK /PTH,DTH,CTH
   410# ERASE /PLL1
   411# *SET  /DISPLY
   412# TERMAC
   413#
   414# $$
   415# $$ Macro to define a rectangular billet
   416# $$
   417# BILLET=MACRO/IPT,ILEN,IWID,IHGT,INAM=MATSF
   418# PROMPT/BILLET,"Stock Construction","Construct A Rectangular Billet"
   419# PROMPT/IPT, "Select Lower Left Corner Point",POINT
   420# PROMPT/ILEN,"Enter Length",0,9999
   421# PROMPT/IWID,"Enter Width",0,9999
   422# PROMPT/IHGT,"Enter Height",0,9999
   423# PROMPT/INAM,"Enter Array Name For Billet Geometry"
   424# $$
   425# *RESET/DISPLY
   426# REMOVE/INAM*
   427# $$
   428# LL1   =LINE/IPT,ATANGL,90
   429# LL2   =LINE/IPT,ATANGL,0
   430# LL3   =LINE/PARLEL,LL1,XLARGE,ILEN
   431# LL4   =LINE/PARLEL,LL2,YLARGE,IWID
   432# $$
   433# REDEF /LL2,XLARGE,EDGE,LL3
   434# REDEF /LL4,XLARGE,EDGE,LL3
   435# REDEF /LL3,YLARGE,EDGE,LL4
   436# REDEF /LL1,YLARGE,EDGE,LL4
   437# $$
   438# MXX1  =MATRIX/TRANSL,0,0,IHGT
   439# LL5   =CLONE/LL1,MXX1
   440# LL6   =CLONE/LL2,MXX1
   441# LL7   =CLONE/LL3,MXX1
   442# LL8   =CLONE/LL4,MXX1
   443# $$
   444# DRAFT  /MODIFY,COLOR=GREEN,SHADE=OFF,LINTYP=DASH,TRANS=50
   445# INAM(1)=SURF/LL5,LL7
   446# INAM(2)=SURF/LL1,LL3
   447# INAM(3)=SURF/LL1,LL5
   448# INAM(4)=SURF/LL2,LL6
   449# INAM(5)=SURF/LL3,LL7
   450# INAM(6)=SURF/LL4,LL8
   451# $$
   452# INAM(7)=POINT/IPT,0,0,0
   453# INAM(8)=POINT/IO,INAM(5),INAM(6),INAM(1)
   454# $$
   455# DISPLY/INAM(1),2,2
   456# DISPLY/INAM(2),2,2
   457# DISPLY/INAM(3),2,2
   458# DISPLY/INAM(4),2,2
   459# DISPLY/INAM(5),2,2
   460# DISPLY/INAM(6),2,2
   461# DISPLY/INAM(7),INAM(8)
   462# DRAFT /MODIFY,COLOR=DEFALT,SHADE=ON,LINTYP=SOLID
   463# $$
   464# *SET  /DISPLY
   465# TERMAC
   466#
   467# ERR1=MACRO
   468# PROMPT/ERR1,"None"," "
   469# **WIN/OPEN
   470# $$
   471# $$ ****************************************************************
   472# $$ Invalid bolt size, specified bolt size is not in the data base.
   473# $$ Press the <ENTER> key to terminate macro call, modify the bolt
   474# $$ size and rerun the BLDTAB macro.
   475# $$ ****************************************************************
   476# $$
   477# **PAUSE
   478# **RUN
   479# **WIN/CLOSE
   480# **RESET/CALL
   481# TERMAC
   482#
   483# $$
   484# $$ Bolts data
   485# $$
   486# $$ Inches bolts data
   487# $$  Format:
   488# $$    DATA/bolt_size,dia-counter-bore,hole-dia,counter-bore-depth
   489# $$
   490# BOLT1(1)=DATA/0.0000,0.1250,0.0730,0.0600
   491# BOLT1(2)=DATA/-1.000,0.1562,0.0890,0.0730
   492# BOLT1(3)=DATA/-2.000,0.1875,0.1065,0.0860
   493# BOLT1(4)=DATA/-3.000,0.2188,0.1200,0.0990
   494# BOLT1(5)=DATA/-4.000,0.2188,0.1360,0.1120
   495# BOLT1(6)=DATA/-5.000,0.2500,0.1540,0.1250
   496# BOLT1(7)=DATA/-6.000,0.2812,0.1695,0.1380
   497# BOLT1(8)=DATA/-8.000,0.3125,0.1935,0.1640
   498# BOLT1(9)=DATA/-10,000,0.3750,0.2210,0.1900
   499# BOLT1(10)=DATA/0.2500,0.4375,0.2812,0.2500
   500# BOLT1(11)=DATA/0.3125,0.5312,0.3438,0.3125
   501# BOLT1(12)=DATA/0.3750,0.6250,0.4062,0.3750
   502# BOLT1(13)=DATA/0.4375,0.7188,0.4688,0.4375
   503# BOLT1(14)=DATA/0.5000,0.8125,0.5312,0.5000
   504# BOLT1(15)=DATA/0.6250,1.0000,0.6562,0.6250
   505# BOLT1(16)=DATA/0.7500,1.1875,0.7812,0.7500
   506# BOLT1(17)=DATA/0.8750,1.3750,0.9062,0.8750
   507# BOLT1(18)=DATA/1.0000,1.6250,1.0312,1.0000
   508# BOLT1(19)=DATA/1.2500,2.0000,1.3125,1.2500
   509# BOLT1(20)=DATA/1.5000,2.3750,1.5625,1.5000
   510# BOLT1(21)=DATA/1.7500,2.7500,1.8125,1.7500
   511# BOLT1(22)=DATA/2.0000,3.1250,2.0625,2.0000
   512# $$
   513# $$ MM bolts data
   514# BOLT2(1)=DATA/1.6,3.50,1.60,1.95
   515# BOLT2(2)=DATA/2,4.40,2.00,2.40
   516# BOLT2(3)=DATA/2.5,5.40,2.50,3.00
   517# BOLT2(4)=DATA/3,6.50,3.00,3.70
   518# BOLT2(5)=DATA/4,8.25,4.00,4.80
   519# BOLT2(6)=DATA/5,9.75,5.00,5.80
   520# BOLT2(7)=DATA/6,11.20,6.00,6.80
   521# BOLT2(8)=DATA/8,14.50,8.00,8.80
   522# BOLT2(9)=DATA/10,17.50,10.00,10.80
   523# BOLT2(10)=DATA/12,19.50,12.00,13.00
   524# BOLT2(11)=DATA/14,22.50,14.00,15.00
   525# BOLT2(12)=DATA/16,25.50,16.00,17.00
   526# BOLT2(13)=DATA/20,31.50,20.00,21.00
   527# BOLT2(14)=DATA/24,37.50,24.00,25.00
   528# BOLT2(15)=DATA/30,47.50,30.00,31.50
   529# BOLT2(16)=DATA/36,56.50,36.00,37.50
   530# BOLT2(17)=DATA/42,66.00,42.00,44.00
   531# BOLT2(18)=DATA/48,75.00,48.00,50.00
   532#
   533# $$
   534# $$ Macro to build tooling tabs
   535# $$
   536# TABCNT=0  $$ INITILAIZE TAB COUNTER
   537# $$
   538# BLDTAB=MACRO/IPT,ISF,ITOPZ,IBOTZ,IBOLTS=0.5,ICDIA=.5,ICPL,ICTH=.25,    $
   539#              IDOWL=OFF,IDSIZ=.5,IPINL=XAXIS
   540# PROMPT/BLDTAB,"Tool Tab","Build Tabs Around Part"
   541# PROMPT/IPT,       "Select Tab locating Point",POINT
   542# PROMPT/ISF,       "Select Atttach Surface",PLANE,SURF
   543# PROMPT/ITOPZ,     "Select Tab Top Plane",PLANE
   544# PROMPT/IBOTZ,     "Select Tab Bottom Plane",PLANE
   545# PROMPT/IBOLTS,9,5,"Bolt Size, (Inch Num Bolt Size -ve)"
   546# PROMPT/ICDIA,6,4, "Enter Dia of Cutoff Tool"
   547# PROMPT/ICPL,      "Select Connector Bottom Plane",PLANE
   548# PROMPT/ICTH,      "Enter Tab Connector Thickness"
   549# PROMPT/IDOWL,     "Include Dowel Pin In Tab",ON,OFF
   550# PROMPT/IDSIZ,4,4, "Enter Dowel Pin Size"
   551# PROMPT/IPINL,     "Dowel Pin Relative Location",YAXIS,XAXIS
   552# *RESET/DISPLY
   553# $$
   554# IF    (TABCNT 'EQ' 0) TPNCNT=0
   555# TABCNT=TABCNT+1
   556# $$
   557# OBTAIN/UNITS,UNITZ
   558# IBFIN1=0
   559#   IF (UNITZ 'EQ' 1) THEN    $$ Inches sizes
   560#     BONUM1=NUM(BOLT1)
   561#     DO /100, I=1,BONUM1,1
   562#       OBTAIN/BOLT1(I),BLTS,BLT,HRAD,HDEP
   563#      IF (BLTS 'EQ' IBOLTS) THEN
   564#        IBFIN1=1
   565#        UNDO
   566#      ENDIF
   567# 100: CONTIN
   568#     IF (IBFIN1 'NE' 1) CALL/ERR1
   569#     HRAD =HRAD/2
   570#     HDEP =HDEP+0.05
   571#     OS1  =BLT/2+.25
   572#     OS2  =BLT/2+.10
   573#     OS3  =OS1+IDSIZ+.25
   574#   ELSE                     $$ Metric sizes
   575#     BONUM1=NUM(BOLT2)
   576#     DO /200, I=1,BONUM1,1
   577#       OBTAIN/BOLT2(IBOLTS),BLTS,BLT,HRAD,HDEPP
   578#       IF (BLTS 'EQ' IBOLTS) THEN
   579#         IBFIN1=1
   580#         UNDO
   581#       ENDIF
   582# 200: CONTIN
   583#     IF (IBFIN1 'NE' 1) CALL/ERR1
   584#     HRAD =HRAD/2
   585#     HDEP =HDEP+1.5
   586#     OS1   =BLT/2+.25
   587#     OS2   =BLT/2+.10
   588#     OS3   =OS1+IDSIZ+.25
   589#   ENDIF
   590# $$
   591# THGT  =DIST/ITOPZ,IBOTZ  $$ Tab height
   592# FILR  =ICDIA             $$ Tab fillet radius
   593# $$
   594# PP1   =POINT/PROJCT,IPT,ISF
   595# OBTAIN/PP1,X1,Y1
   596# ZSURF /ITOPZ
   597# PP1   =POINT/X1,Y1
   598# ZSURF /NOMORE
   599# PVV1  =PNTVEC/IPT,ISF
   600# PVVX  =PNTVEC/PP1,(VECTOR/VPZ,CROSS,PVV1)
   601# PVVY  =PNTVEC/PP1,(VECTOR/VPZ,CROSS,PVVX)
   602# MXX1  =MATRIX/PVVX,PVVY
   603# REFSYS/MXX1
   604# $$
   605# TP(TABCNT)=POINT/PP1,0,OS2+ICDIA
   606# $$
   607# $$ Build bolt down hole and counterbore.
   608# $$
   609# CC1   =CIRCLE/CENTER,TP(TABCNT),RADIUS,BLT/2
   610# CC2   =CIRCLE/CENTER,(POINT/TP(TABCNT),0,0,-HDEP),RADIUS,BLT/2
   611# CC3   =CIRCLE/CENTER,(POINT/TP(TABCNT),0,0,-HDEP),RADIUS,HRAD
   612# CC4   =CIRCLE/CENTER,(POINT/TP(TABCNT),0,0,-THGT),RADIUS,HRAD
   613# $$
   614# $$ Build tab.
   615# $$
   616# LL1   =LINE/PARLEL,(LINE/(POINT/TP(TABCNT),0,-OS2),              $
   617#                          (POINT/TP(TABCNT),0,OS1)),XSMALL,OS1
   618#   IF (VOCABF(IDOWL) 'EQ' VOCABF(OFF)) THEN
   619#     LL2   =LINE/PARLEL,(LINE/(POINT/TP(TABCNT),-OS1),            $
   620#                              (POINT/TP(TABCNT),OS1)),YLARGE,OS1
   621#     LL3   =LINE/PARLEL,(LINE/(POINT/TP(TABCNT),0,-OS2),          $
   622#                              (POINT/TP(TABCNT),0,OS1)),XLARGE,OS1
   623#   ELSE IF (VOCABF(IPINL) 'EQ' VOCABF(XAXIS)) THEN
   624#     LL2   =LINE/PARLEL,(LINE/(POINT/TP(TABCNT),-OS1),            $
   625#                              (POINT/TP(TABCNT),OS1)),YLARGE,OS1
   626#     LL3   =LINE/PARLEL,(LINE/(POINT/TP(TABCNT),0,-OS2),          $
   627#                              (POINT/TP(TABCNT),0,OS1)),XLARGE,OS3
   628#   ELSE
   629#     LL2   =LINE/PARLEL,(LINE/(POINT/TP(TABCNT),-OS1),            $
   630#                              (POINT/TP(TABCNT),OS1)),YLARGE,OS3
   631#     LL3   =LINE/PARLEL,(LINE/(POINT/TP(TABCNT),0,-OS2),          $
   632#                              (POINT/TP(TABCNT),0,OS1)),XLARGE,OS1
   633#   ENDIF
   634# LL4   =LINE/PARLEL,(LINE/(POINT/TP(TABCNT),-OS1),                $
   635#                          (POINT/TP(TABCNT),OS1)),YSMALL,OS2
   636# $$
   637# REDEF /LL1,LL2,YSMALL
   638# REDEF /LL2,LL3,XSMALL
   639# REDEF /LL3,LL2,YSMALL
   640# REDEF /LL4,LL3,XSMALL
   641# $$
   642# $$
   643# TABTHK=DIST/ITOPZ,IBOTZ
   644# $$
   645# LL5   =LINE/LL1,0,0,-TABTHK
   646# LL6   =LINE/LL2,0,0,-TABTHK
   647# LL7   =LINE/LL3,0,0,-TABTHK
   648# LL8   =LINE/LL4,0,0,-TABTHK
   649# $$
   650# $$ Build connector.
   651# $$
   652# D1    =DIST/ICPL,ITOPZ
   653# CC5   =CIRCLE/XSMALL,LL1,YLARGE,(LINE/PARLEL,LL4,YSMALL,FILR),   $
   654#               RADIUS,FILR
   655# CC6   =CIRCLE/XLARGE,LL3,YLARGE,(LINE/PARLEL,LL4,YSMALL,FILR),   $
   656#               RADIUS,FILR
   657# MOVE  /CC5,(MATRIX/TRANSL,0,0,-D1)
   658# MOVE  /CC6,(MATRIX/TRANSL,0,0,-D1)
   659# LL9   =LINE/LL4,0,0,-D1
   660# PP1   =POINT/YSMALL,ENDPT,CC5
   661# PP2   =POINT/YSMALL,ENDPT,CC6
   662# LL10  =LINE/PP1,PP2
   663# CC7   =CIRCLE/CC5,0,0,ICTH
   664# CC8   =CIRCLE/CC6,0,0,ICTH
   665# LL11  =LINE/LL9,0,0,ICTH
   666# LL12  =LINE/LL10,0,0,ICTH
   667# $$
   668# TPNCNT=TPNCNT+1
   669#   IF (VOCABF(IDOWL) 'EQ' VOCABF(ON)) THEN
   670#     IF (VOCABF(IPINL) 'EQ' VOCABF(YAXIS)) THEN
   671#       TABPPT(TPNCNT)=POINT/TP(TABCNT),0,(IDSIZ/2+OS1)
   672#     ELSE
   673#       TABPPT(TPNCNT)=POINT/TP(TABCNT),(IDSIZ/2+OS1)
   674#     ENDIF
   675#     CC9   =CIRCLE/CENTER,TABPPT(TPNCNT),RADIUS,IDSIZ/2
   676#     CC10  =CIRCLE/CC9,0,0,-TABTHK
   677#   ENDIF
   678# $$
   679# CVV1  =CURVE/COMPOS,LL3,LL4,LL1,LL2
   680# CVV2  =CURVE/COMPOS,LL5,LL6,LL7,LL8
   681# CVV3  =CURVE/COMPOS,CC5,LL9,CC6,LL10
   682# $$
   683# *SET  /DISPLY
   684# $$
   685# TABS1(TABCNT)=NSURF/CC5,CC7
   686# TABS2(TABCNT)=NSURF/LL1,LL5
   687# TABS3(TABCNT)=NSURF/LL2,LL6
   688# TABS4(TABCNT)=NSURF/LL3,LL7
   689# TABS5(TABCNT)=NSURF/CC6,CC8
   690# TABS6(TABCNT)=NSURF/LL4,LL11
   691# TABS7(TABCNT)=NSURF/LL8,LL9
   692# TABS8(TABCNT)=NSURF/LL10,LL12
   693# TABS9(TABCNT)=SURF/REDEF,OUT,CVV1,IN,CC1
   694# TABS10(TABCNT)=SURF/REDEF,OUT,CVV2,IN,CC4
   695#   IF (VOCABF(IDOWL) 'EQ' VOCABF(ON)) THEN
   696#     TABS9(TABCNT)=SURF/REDEF,OUT,CVV1,IN,CC1,CC9
   697#     TABS10(TABCNT)=SURF/REDEF,OUT,CVV2,IN,CC4,CC10
   698#     TABS16(TABCNT)=NSURF/CC9,CC10
   699#     DRAFT /MODIFY=TABS16(TABCNT),COLOR=WHITE,TRANS=75
   700#     DRAFT /MODIFY=TABPPT(TPNCNT),COLOR=WHITE
   701#     DISPLY/TABPPT(TPNCNT)
   702#   ENDIF
   703# TABS11(TABCNT)=SURF/REDEF,OUT,CVV3
   704# TABS12(TABCNT)=CLONE/TABS11(TABCNT),(MATRIX/TRANSL,0,0,ICTH)
   705# $$
   706# DRAFT /MODIFY=TABS1(TABCNT),COLOR=RED,TRANS=50
   707# DRAFT /MODIFY=TABS2(TABCNT),COLOR=RED,TRANS=50
   708# DRAFT /MODIFY=TABS3(TABCNT),COLOR=RED,TRANS=50
   709# DRAFT /MODIFY=TABS4(TABCNT),COLOR=RED,TRANS=50
   710# DRAFT /MODIFY=TABS5(TABCNT),COLOR=RED,TRANS=50
   711# DRAFT /MODIFY=TABS6(TABCNT),COLOR=RED,TRANS=50
   712# DRAFT /MODIFY=TABS7(TABCNT),COLOR=RED,TRANS=50
   713# DRAFT /MODIFY=TABS8(TABCNT),COLOR=RED,TRANS=50
   714# DRAFT /MODIFY=TABS9(TABCNT),COLOR=RED,TRANS=50
   715# DRAFT /MODIFY=TABS10(TABCNT),COLOR=RED,TRANS=50
   716# DRAFT /MODIFY=TABS11(TABCNT),COLOR=RED,TRANS=50
   717# DRAFT /MODIFY=TABS12(TABCNT),COLOR=RED,TRANS=50
   718# $$
   719# TABS13(TABCNT)=NSURF/CC1,CC2
   720# TABS14(TABCNT)=NSURF/CC2,CC3
   721# TABS15(TABCNT)=NSURF/CC3,CC4
   722# TABPT (TABCNT)=POINT/TP(TABCNT)
   723# $$
   724# DRAFT /MODIFY=TABS13(TABCNT),COLOR=WHITE,TRANS=75
   725# DRAFT /MODIFY=TABS14(TABCNT),COLOR=WHITE,TRANS=75
   726# DRAFT /MODIFY=TABS15(TABCNT),COLOR=WHITE,TRANS=75
   727# DRAFT /MODIFY=TABPT(TABCNT),COLOR=WHITE
   728# $$
   729# REFSYS/NOMORE
   730# TERMAC
   731#
   732# $$
   733# $$ Macro to cut off tooling tabs
   734# $$
   735# CUTTAB=MACRO/IASF,ITPL,IBPL,ISTPD=DIA*.25,ISTAB,IETAB
   736# PROMPT/CUTTAB,"Tool Tab","Cut Off Tooling Tabs"
   737# PROMPT/IASF,     "Select Attach Surface",PLANE,SURF
   738# PROMPT/ITPL,     "Select Top Plane",PLANE
   739# PROMPT/IBPL,     "Select Bottom Plane",PLANE
   740# PROMPT/ISTPD,    "Enter Step Down Distance"
   741# PROMPT/ISTAB,5,0,"Enter Starting Tab Number",1,99999
   742# PROMPT/IETAB,5,0,"Enter Ending Tab Number",1,99999
   743# $$
   744# $$ Determine if part is upsidedown.
   745# $$
   746# OBTAIN/THICK,PTH,DTH,CTH
   747# OBTAIN/TABS9(1),,,K1,D1
   748# OBTAIN/TABS10(1),,,K2,D2
   749# D3    =(K1*D1)
   750# D4    =(K2*D2)
   751# $$
   752# USD   =0
   753# IF    (D4 'GT' D3) USD=1
   754# $$
   755# INC   =1
   756# IF    (ISTAB 'GT' IETAB) INC=-1
   757# $$
   758#   DO /100,TCNT=ISTAB,IETAB,INCR,INC
   759# $$
   760#     CALL  /FIG,IPL1=ITPL,IPL2=IBPL,STP=ISTPD
   761# $$
   762#     PVV1  =PNTVEC/(POINT/ON,TABS4(TCNT),1,0),(POINT/ON,TABS4(TCNT),0,0)
   763#     PVV2  =PNTVEC/(POINT/ON,TABS3(TCNT),1,0),(POINT/ON,TABS3(TCNT),0,0)
   764# $$
   765#     LTAB  =SURF/TABS4(TCNT)
   766#     RTAB  =SURF/TABS2(TCNT)
   767# $$
   768#     IF (USD 'NE' 0) THEN
   769#       REVERS/PVV2
   770#       LTAB  =SURF/TABS2(TCNT)
   771#       RTAB  =SURF/TABS4(TCNT)
   772#     ENDIF
   773# $$
   774#     CVV1  =CURVE/INTOF,TABS12(TCNT),(PLANE/TABPT(TCNT),PERPTO,PVV2)
   775#     D1    =LNTH(CVV1)
   776#     D2    =(D1-DIA)/2
   777# $$
   778#     TLAXIS/TANTO,DS,COR,FAN
   779#     SRFVCT/PVV1,PVV2
   780#     THICK /0,D2+DTH,CTH
   781#     RAPID
   782#     GO    /TO,IASF,CLR,TO,LTAB
   783#     RAPID
   784#     ARCSLP/FILLET,(D2/2)*.9,TOL/3
   785# $$
   786#     DO /200,I=1,DIV
   787#       PSRF  =PLANE/PARLEL,ITPL,ZSMALL,INC*I
   788#       THICK /0,D2+DTH,CTH
   789#       GO    /TO,IASF,PSRF,TO,LTAB
   790#       TLAXIS/SAME
   791#       INDIRV/PVV2
   792#       TLRGT
   793#       GOFWD /IASF,PAST,RTAB
   794#       THICK /0,CTH,DTH
   795#       GOLFT /RTAB,TO,IASF
   796#       THICK /0,DTH,CTH
   797#       TLLFT
   798#       GOLFT /IASF,PAST,LTAB
   799# 200: CONTIN
   800#     THICK /0,D2+DTH,CTH
   801#     GO    /TO,IASF,PSRF,TO,LTAB
   802#     ARCSLP/FILLET,0
   803#     RAPID
   804#     GODLTA/CLR
   805# 100:  CONTIN
   806# THICK /PTH,DTH,CTH
   807# TERMAC
   808#
   809# $$
   810# $$ Macro to drive around tooling tabs
   811# $$
   812# DRVTAB=MACRO/ISF,ISTAB,IETAB,IRAD=TOLR*30
   813# PROMPT/DRVTAB,"Tool Tab","Drive Tooling Tabs"
   814# PROMPT/ISF,      "Select Attach Surface",PLANE,SURF
   815# PROMPT/ISTAB,5,0,"Enter Starting Tab Number",1,99999
   816# PROMPT/IETAB,5,0,"Enter Ending Tab Number",1,99999
   817# PROMPT/IRAD,     "Enter Corner Radius"
   818# $$
   819# OBTAIN/THICK,PTH,DTH,CTH
   820# $$
   821# INC   =1
   822# IF    (ISTAB 'GT' IETAB) INC=-1
   823# $$
   824#   DO /100,TCNT=ISTAB,IETAB,INCR,INC
   825#     ARCSLP/FILLET,IRAD
   826#     TLLFT
   827#     GOFWD /ISF,TABS2(TCNT),FD
   828#     GOLFT /TABS2(TCNT),PAST,TABS3(TCNT)
   829#     GORGT /TABS3(TCNT),PAST,TABS4(TCNT)
   830#     GORGT /TABS4(TCNT),ISF
   831#     THICK/PTH,DTH,CTH+IRAD*2
   832#     GOLFT /ISF,PAST,TABS4(TCNT)
   833#     THICK/PTH,DTH,CTH
   834# 100: CONTIN
   835# $$
   836# ARCSLP/FILLET,0
   837# $$
   838# TERMAC
   839#
   840#
   841# $$
   842# $$ Macro to convert a curve to a circle
   843# $$
   844# CV2CI =MACRO/ICV
   845# PROMPT/CV2CI,"Geometry","Convert Curve to A Circle"
   846# PROMPT/ICV,"Select Curve To Convert",CURVE
   847# OBTAIN/TOLER,TOL
   848# $$
   849# *RESET /DISPLY
   850# $$
   851# $$ If ICV is not a curve, no conversion.
   852# $$
   853# IF    (TYPE(ICV) 'EQ' 12) THEN
   854#   DD1   =LNTHF(ICV)
   855# $$
   856# $$ If length of curve less than (TOL*5), no conversion will be done.
   857# $$
   858#   IF (DD1 'GT' (TOL*5)) THEN
   859#     PP1   =POINT/ICV,0         $$ Point AT 0 percent along U
   860#     PP2   =POINT/ICV,DD1*.25   $$ Point AT 25 percent along U
   861#     PP3   =POINT/ICV,DD1*.5    $$ Point AT 50 percent along U
   862#     PP4   =POINT/ICV,DD1*.75   $$ Point AT 75 percent along U
   863#     PP5   =POINT/ICV,DD1       $$ Point AT 100 percent along U
   864#     VV1   =VECTOR/PP1,PP2
   865#     VV2   =VECTOR/PP2,PP3
   866#     VV3   =VECTOR/PP3,PP4
   867#     VV4   =VECTOR/PP4,PP5
   868#     RR1   =DOT(VV1,VV2)
   869#     RR2   =DOT(VV3,VV4)
   870# $$
   871# $$ If either one of the two sets of points (PP1, PP2, PP3),
   872# $$ (PP3, PP4, PP5) is along a pretty straight line, no conversion
   873# $$ will be done.
   874# $$
   875#     IF (RR1 'LT' 0.999999 'OR' RR2 'LT' 0.999999) THEN
   876#       CC1   =CIRCLE/PP1,PP2,PP3  $$ Circle through first 3 points
   877#       CC2   =CIRCLE/PP3,PP4,PP5  $$ Circle through last 3 points
   878#       RR1   =CAN(CC1,7)          $$ Radius of CC1
   879#       RR2   =CAN(CC2,7)          $$ Radius of CC2
   880#       CP1   =POINT/CENTER,CC1    $$ Center of CC1
   881#       CP2   =POINT/CENTER,CC2    $$ Center of CC2
   882#       DD1   =ABS(RR1-RR2)        $$ Radius difference
   883#       DD2   =DIST/CP1,CP2        $$ Distance between circle centers
   884# $$
   885# $$ Check if both circles are within tolerance
   886# $$ Default state:
   887# $$    Difference between two partial circular arc <= KRTOL
   888# $$    Difference between two partial circular center <= KCTOL
   889# $$    If difference more than default state, will not convert to circle.
   890# $$
   891#       KTROL =(TOL*3)
   892#       KCTOL =(TOL*3)
   893#       IF    ('NOT' (DD1 'GT' KTROL 'OR' DD2 'GT' KCTOL)) THEN
   894# $$
   895# $$ If circles are the same, REMOVE CURVE / DEFINE CIRCLE
   896# $$
   897#         REMOVE/ICV
   898# $$
   899# $$ Check if original curve a closed curve?
   900# $$ If the distance between the starting point of first circular arc
   901# $$ and the ending point of the second circular arc <= KKTOL, treat
   902# $$ it as full circle. Default KKTOL = (TOL*5)
   903# $$
   904#         KKTOL =(TOL*5)
   905#         DD1   =DIST/PP1,PP5
   906#         IF (DD1 'LT' KKTOL) THEN
   907# $$
   908# $$ If YES, define it as a 360 degree circle
   909# $$
   910#           ICV   =CIRCLE/PP1,PP2,PP4
   911#           CP1   =POINT/CENTER,ICV
   912#           RR1   =CAN(ICV,7)
   913#           RV1   =VECTOR/CAN(ICV,4),CAN(ICV,5),CAN(ICV,6)
   914#           ICV   =CIRCLE/CANON,CP1,RV1,RR1
   915#           ERASE /ICV
   916#           DRAFT /MODIFY=ICV,COLOR=YELLOW
   917#           DISPLY/ICV
   918#           REMOVE/RV1
   919#         ELSE
   920# $$
   921# $$ If not, define it as a partial circle.
   922# $$
   923#           ICV   =CIRCLE/PP1,PP3,PP5
   924#           ERASE /ICV
   925#           DRAFT /MODIFY=ICV,COLOR=YELLOW
   926#           DISPLY/ICV
   927#         ENDIF
   928#       ENDIF
   929#     ENDIF
   930#   ENDIF
   931# ENDIF
   932# *SET /DISPLY
   933# TERMAC
   934#
   935# $$
   936# $$ Macro to concert all circular curves to circles
   937# $$ Curves must be subscripted and have the name CVV
   938# $$
   939# CNVALL=MACRO
   940# PROMPT/CNVALL,"Geometry","Convert All Circular Curves To Circles"
   941# $$
   942# $$ DETERMINE IF ANY CURVES EXIST IN THE INPUT UNIBASE.
   943# $$
   944#   IF (CVV(1)) THEN
   945# $$
   946# $$ If curves exist determine the total number.
   947# $$
   948#     CNUM  =NUM(CVV)
   949# $$
   950# $$ Start the conversion.
   951# $$
   952#     DO /LAB362, II=1,CNUM
   953#       CALL/CV2CI,ICV=CVV(II)
   954# LAB362:CONTIN
   955#   ENDIF
   956# TERMAC
   957#
   958# $$
   959# $$ Macro to define outer edge curves of a trimmed surface
   960# $$
   961# DECVS =MACRO/ISF,ONAM=ECV
   962# PROMPT/DECVS,"Geometry","Define Outer Curves Of A Trimmed Surface"
   963# PROMPT/ISF,  "Select Surface",SURF
   964# PROMPT/ONAM, "Enter Name For Curve Array"
   965#   DO /100,I=1,999
   966#     ON    /ERROR,THEN,200,NOWARN
   967#     ONAM(I)=SPLINE/OUT,ISF,0,I
   968# 100: CONTIN
   969# 200: CONTIN
   970# ON    /ERROR,THEN,STOP
   971# TERMAC
   972#
   973# $$
   974# $$ Macro to define a Point-vector at center of a Cylinder
   975# $$
   976# DPVCY =MACRO/ISF,ITSF,IDIR=POSZ,ONAM=PVV
   977# PROMPT/DPVCY,"Geometry","Define A PV At Center Of A Cylinder"
   978# PROMPT/ISF, "Select Cylinder Surface",SURF
   979# PROMPT/ITSF,"Select Top Surface",SURF
   980# PROMPT/IDIR,"Select General Direction",POSX,NEGX,POSY,NEGY,POSZ,NEGZ
   981# PROMPT/ONAM,"Enter Pntvec Array Name"
   982# *RESET/DISPLY
   983# $$
   984#   IF (SRFTYP(ISF) 'NE' 5) THEN
   985# **WI
   986# $$
   987# $$ Input surface is not a Cylinder.
   988# $$ Press <ENTER> to exit macro and try again.
   989# $$
   990# **PAUSE
   991# **WINDOW/CLOSE
   992# **RESET/CALL
   993# $$
   994#   ENDIF
   995#   IF ('NOT' ONAM(1)) THEN
   996#     PVCNT1=0
   997#   ENDIF
   998# OBTAIN/ISF,X1,Y1,Z1,I1,J1,K1,,H1
   999# PP1   =POINT/X1,Y1,Z1
  1000# VV1   =VECTOR/I1,J1,K1
  1001# OBTAIN/VV1,I1,J1,K1
  1002# PP2   =POINT/PROJCT,PP1,VV1,ITSF
  1003# PVV1  =PNTVEC/PP2,VV1
  1004# $$
  1005# PVCNT1=NUM(ONAM)+1
  1006# ONAM(PVCNT1)=REVERS/PVV1,IDIR
  1007# DISPLY/ONAM(PVCNT1)
  1008# *SET   /DISPLY
  1009# TERMAC
  1010#
  1011# $$
  1012# $$ Macro for Drilling holes
  1013# $$
  1014# DRIL  =MACRO/IPT,IMOD,IDEP=0,IFED=FD,IRAP=(TOLR*100),IPECK=(DIA*.3), $
  1015#              ITHRU=OFF,IRET=OFF
  1016# PROMPT/DRIL,"Cycle","Cycle Macro"
  1017# PROMPT/IPT,  "Select A Point, Point-vec Or Pattern"
  1018# PROMPT/IMOD, "Select Cycle Mode",DRILL,THRU,DEEP,BORE,REAM
  1019# PROMPT/IDEP, "Enter Depth Of Hole",0,99999
  1020# PROMPT/IFED, "Enter Desired Feedrate"
  1021# PROMPT/IRAP, "Enter Clearance Distance"
  1022# PROMPT/IPECK,"Enter Peck Distance"
  1023# PROMPT/ITHRU,"Thru Hole",ON,OFF
  1024# PROMPT/IRET, "RETRCT Condition",ON,OFF
  1025# OBTAIN/TOLER,TOL
  1026# $$
  1027#   IF (TYPE(IPT) 'EQ' 7 'OR' TYPE(IPT) 'EQ' 24 'OR' $
  1028#     TYPE(IPT) 'EQ' 25) THEN
  1029#     D1    =IDEP
  1030#     IF (VOCABF(ITHRU) 'EQ' VOCABF(ON)) THEN
  1031# $$
  1032# $$ Add drill point to depth for DRILL, THRU, or DEEP mode.
  1033# $$
  1034#       IF (VOCABF(IMOD) 'EQ' VOCABF(THRU)   'OR'  $
  1035#         VOCABF(IMOD) 'EQ' VOCABF(DEEP)   'OR'  $
  1036#         VOCABF(IMOD) 'EQ' VOCABF(DRILL)) THEN
  1037#         D1=IDEP+(.3*DIA)
  1038#       ELSE
  1039# $$
  1040# $$ Add TOL*50 to depth for REAM, or BORE mode.
  1041#
  1042#         D1=IDEP+(TOL*50)
  1043#       ENDIF
  1044#     ENDIF
  1045# $$
  1046#     IF (VOCABF(IRET) 'EQ' VOCABF(ON)) THEN
  1047#       RETRCT/ON
  1048#     ELSE
  1049#       RETRCT/OFF
  1050#     ENDIF
  1051# $$
  1052#     IF (TYPE(IPT) 'EQ' 24) THEN
  1053#       PP1=POINT/IPT,1
  1054#     ELSE
  1055#       PP1=POINT/IPT
  1056#     ENDIF
  1057#     DNTCUT
  1058#     GOTO  /PP1
  1059#     GODLTA/CLR
  1060#     RAPID
  1061#     CUT
  1062# $$
  1063#     CYCLE /IMOD,FEDTO,D1,RAPTO,IRAP,STEP,IPECK,IPM,IFED
  1064#     GOTO  /IPT
  1065#     CYCLE /OFF
  1066# $$
  1067#     RAPID, GODLTA/CLR
  1068#   ELSE
  1069# **WIN
  1070# $$
  1071# $$   Entity picked is not a Point, Pntvec or Patern.
  1072# $$   Press <ENTER> to exit macro and try again.
  1073# $$
  1074# **PAUSE
  1075# **WIN /CLOSE
  1076# **RESET/CALL
  1077#   ENDIF
  1078# $$
  1079# TERMAC
  1080#
  1081# $$
  1082# $$ Macro to face off top of rectangular billet
  1083# $$
  1084# FACEM =MACRO/IBSF,IFSF,ICDIR,ISTGY=ZIGZAG,ISPER=.5,IRET=ON
  1085# PROMPT/FACEM,"Motion","Face Mill Rectangular Billet"
  1086# PROMPT/IBSF, "Select Surface At Top Of Billet",SURF,PLANE
  1087# PROMPT/IFSF, "Select Surface To Face To",SURF,PLANE
  1088# PROMPT/ICDIR,"Select Cut Direction",POSX,NEGX,POSY,NEGY
  1089# PROMPT/ISTGY,"Select Cut Strategy",ZIGZAG,POCKET
  1090# PROMPT/ISPER,"Enter Percentage Of Dia To Stepover"
  1091# PROMPT/IRET, "Retract At End Of Cut",ON,OFF
  1092# $$
  1093# *RESET/DISPLY
  1094# OBTAIN/TOLER,TOL
  1095# $$
  1096# $$ Defines the edges curves.
  1097# $$
  1098# CALL  /DECVS,ISF=IBSF,ONAM=ECVV
  1099#   IF (I 'EQ' 1) THEN
  1100# $$
  1101# $$ TREAT AS A NON-TRIMMED SURFACE
  1102# $$
  1103#     ECVV(1)=SPLINE/IBSF,1,0
  1104#     ECVV(2)=SPLINE/IBSF,2,0
  1105#     ECVV(3)=SPLINE/IBSF,3,0
  1106#     ECVV(4)=SPLINE/IBSF,4,0
  1107#   ELSE IF (I 'NE' 5) THEN
  1108# $$
  1109# **WI
  1110# $$
  1111# $$ Input surface does not contain 4 edge curves
  1112# $$ Re-construct as a Ruled surface
  1113# $$ Press <ENTER> to exit macro.
  1114# $$
  1115# **PAUSE
  1116# **WIN /CLOSE
  1117# **SET /DISPLY
  1118#     ERASE /ECVV*
  1119# **RESET/CALL
  1120#   ENDIF
  1121# $$
  1122# $$ Find left curve.
  1123# $$
  1124# SAVD  =9999999
  1125#   DO /10,I=1,4
  1126#     PP1   =POINT/ON,ECVV(I),0
  1127#     PP2   =POINT/ON,ECVV(I),1
  1128#     OBTAIN/PP1,X1
  1129#     OBTAIN/PP2,X2
  1130#     DD1   =X1+X2
  1131#     IF (DD1 'LT' SAVD) THEN
  1132#       SAVD=DD1
  1133#       SAVI1=I
  1134#     ENDIF
  1135# 10: CONTIN
  1136# $$
  1137# CVV1  =CURVE/ECVV(SAVI1)
  1138# $$
  1139# $$ Find bottom curve.
  1140# $$
  1141# SAVD  =9999999
  1142#   DO /20,I=1,4
  1143#     PP1   =POINT/ON,ECVV(I),0
  1144#     PP2   =POINT/ON,ECVV(I),1
  1145#     OBTAIN/PP1,,Y1
  1146#     OBTAIN/PP2,,Y2
  1147#     DD1   =Y1+Y2
  1148#     IF (DD1 'LT' SAVD) THEN
  1149#       SAVD=DD1
  1150#       SAVI1=I
  1151#     ENDIF
  1152# 20: CONTIN
  1153# $$
  1154# CVV2  =CURVE/ECVV(SAVI1)
  1155# $$
  1156# $$ Find right curve.
  1157# $$
  1158# SAVD  =-9999999
  1159#   DO /30,I=1,4
  1160#     PP1   =POINT/ON,ECVV(I),0
  1161#     PP2   =POINT/ON,ECVV(I),1
  1162#     OBTAIN/PP1,X1
  1163#     OBTAIN/PP2,X2
  1164#     DD1   =X1+X2
  1165#     IF (DD1 'GT' SAVD) THEN
  1166#       SAVD=DD1
  1167#       SAVI1=I
  1168#     ENDIF
  1169# 30: CONTIN
  1170# $$
  1171# CVV3  =CURVE/ECVV(SAVI1)
  1172# $$
  1173# $$ Find top curve.
  1174# $$
  1175# SAVD  =-09999999
  1176#   DO /40,I=1,4
  1177#     PP1   =POINT/ON,ECVV(I),0
  1178#     PP2   =POINT/ON,ECVV(I),1
  1179#     OBTAIN/PP1,,Y1
  1180#     OBTAIN/PP2,,Y2
  1181#     DD1   =Y1+Y2
  1182#     IF (DD1 'GT' SAVD) THEN
  1183#       SAVD=DD1
  1184#       SAVI1=I
  1185#     ENDIF
  1186# 40: CONTIN
  1187# $$
  1188# CVV4  =CURVE/ECVV(SAVI1)
  1189# $$
  1190#   IF (VOCABF(ICDIR) 'EQ' VOCABF(POSX)) THEN
  1191#     CVVA  =REVERS/CVV4,POSX
  1192#     CVVB  =REVERS/CVV2,POSX
  1193#   ELSE IF (VOCABF(ICDIR) 'EQ' VOCABF(NEGX)) THEN
  1194#     CVVA  =REVERS/CVV2,NEGX
  1195#     CVVB  =REVERS/CVV4,NEGX
  1196#   ELSE IF (VOCABF(ICDIR) 'EQ' VOCABF(POSY)) THEN
  1197#    CVVA  =REVERS/CVV1,POSY
  1198#     CVVB  =REVERS/CVV3,POSY
  1199#   ELSE
  1200#     CVVA  =REVERS/CVV3,NEGY
  1201#     CVVB  =REVERS/CVV1,NEGY
  1202#   ENDIF
  1203# $$
  1204# SFF1  =SURF/CVVA,CVVB
  1205# $$
  1206# $$
  1207# STO   =DIA*ISPER
  1208# $$
  1209#   IF (VOCABF(ISTGY) 'NE' VOCABF(ZIGZAG)) THEN
  1210# $$
  1211# $$ Pocket Strategy.
  1212# $$
  1213#     CVV5  =CURVE/COMPOS,CVV1,CVV2,CVV3,CVV4
  1214#     PP1   =POINT/ON,SFF1,0,.5
  1215#     PP2   =POINT/ON,SFF1,1,.5
  1216# $$
  1217#     DNTCUT
  1218#     PVV1  =PNTVEC/UNIT,(PNTVEC/PP2,PP1)
  1219#     GOTO  /PP1
  1220#     GODLTA/(PNTVEC/PVV1,TIMES,(HDIA+TOL*250))
  1221#     GODLTA/CLR
  1222#     RAPID, CUT
  1223#     RAPID
  1224#     GODLTA/IFSF
  1225#     PSIS  /IFSF
  1226# $$
  1227#     POKMOD/1,OMIT,NOWARN,0,RETRCT,ON,CLR,-1,0,CLW,IN,UP,SHARP,STO, $
  1228#            TOL,FD,FD,RAPID,-0.5,-0.5,-1.0
  1229# $$
  1230#     POCKET/IFSF,CLR,ON,CVV5,END,PP1
  1231# $$
  1232#   ELSE
  1233# $$
  1234# $$ Zigzag Strategy.
  1235# $$
  1236#     PP1    =POINT/ON,CVVA,0
  1237#     PP2    =POINT/ON,CVVA,1
  1238#     LL1    =LINE/PP1,PP2
  1239#     PP3    =POINT/ON,CVVB,0
  1240#     PP4    =POINT/ON,CVVB,1
  1241#     LL2    =LINE/PP3,PP4
  1242#     LL3    =LINE/PP1,PP3
  1243#     LL4    =LINE/PP2,PP4
  1244#     PVV1   =PNTVEC/UNIT,(PNTVEC/PP3,PP1)
  1245#     PVV1   =PNTVEC/PVV1,TIMES,STO/2
  1246#     OBTAIN /PVV1,,,,I1,J1,K1
  1247#     LL5    =CLONE/LL2,(MATRIX/TRANSL,I1,J1,K1)
  1248#     PVV2   =PNTVEC/UNIT,(PNTVEC/PP2,PP1)
  1249#     SFF1   =SURF/LL1,LL5
  1250# $$
  1251#     D1     =LNTH(LL3)
  1252#     DIV    =NINT(D1/STO)
  1253#     NUM1   =INT(DIV/2)*2 + 1
  1254#     INC    =1/NUM1
  1255# $$
  1256#     DNTCUT
  1257#     GOTO  /PP1
  1258#     GODLTA/(PNTVEC/PVV2,TIMES,(HDIA+TOL*250))
  1259#     GODLTA/CLR
  1260#     RAPID
  1261#     CUT
  1262#     RAPID
  1263#     GODLTA/IFSF
  1264#     PSIS  /IFSF
  1265# $$
  1266#     ARCSLP/FILLET,(STO/2)*.75
  1267# $$
  1268#     FEDRAT/FD
  1269#     DO /200,I=0,NUM1-1
  1270#       IP    /PP2
  1271#       CVV1  =CURVE/SFF1,1,INC*I
  1272#       CVV2  =CURVE/SFF1,1,INC*(I+1)
  1273#       CVV3  =CURVE/SFF1,1,INC*(I+2)
  1274#       TLON,  GOFWD/CVV1,PAST,LL4
  1275#       TLLFT, GORGT/LL4,ON,CVV2
  1276#       TLON,  GORGT/CVV2,PAST,LL3
  1277#       I     =I+1
  1278#       IF (I 'LT' (NUM1-1)) THEN
  1279#         TLRGT
  1280#         GOLFT /LL3,ON,CVV3
  1281#       ENDIF
  1282# 200:CONTIN
  1283#     ARCSLP/FILLET,0
  1284#     IF (VOCABF(IRET) 'EQ' VOCABF(ON)) RAPID,GODLTA/CLR
  1285# $$
  1286#   ENDIF
  1287# *SET   /DISPLY
  1288# TERMAC
  1289#
  1290# $$
  1291# $$ Lace Kellering Macro
  1292# $$
  1293# KEL1  =MACRO/IMAC=P1,ISCAL=0,ISTPO=(TOLR*100),IBPL,ITPL,IRET=ON
  1294# PROMPT/KEL1,"Motion","Lace Kellering"
  1295# PROMPT/IMAC, "Macro Containing Toolpath"
  1296# PROMPT/ISCAL,"Enter Scallop Height",0,99999
  1297# PROMPT/ISTPO,"Enter Step Over"
  1298# PROMPT/IBPL, "Select Bottom Plane",PLANE
  1299# PROMPT/ITPL, "Select Top Plane",PLANE
  1300# $$
  1301# CALL  /FIG, SCALP=ISCAL, STP=ISTPO, IPL1=ITPL, IPL2=IBPL
  1302# $$
  1303# RETD  =DATA/ON
  1304# KINC  =INC
  1305# $$
  1306#   DO /100,KCNT=1,DIV
  1307#     STH   =-(KINC*KCNT)
  1308#     PSRF  =PLANE/PARLEL,ITPL,ZLARGE,STH
  1309#     CALL  /IMAC
  1310#     RETD  =DATA/IRET
  1311# 100:  CONTIN
  1312# TERMAC
  1313#
  1314# $$
  1315# $$ Non-lace Kellering macro
  1316# $$
  1317# KEL2  =MACRO/IMAC1=P1, IMAC2=P2,ISCAL=0,ISTPO=(TOLR*100),IBPL,ITPL
  1318# PROMPT/KEL2,"Motion","Non-Lace Kellering"
  1319# PROMPT/IMAC1,"Macro Containing 1st Toolpath"
  1320# PROMPT/IMAC2,"Macro Containing 2nd Toolpath"
  1321# PROMPT/ISCAL,"Enter Scallop Height",0,99999
  1322# PROMPT/ISTPO,"Enter Step Over"
  1323# PROMPT/IBPL, "Select Bottom Plane",PLANE
  1324# PROMPT/ITPL, "Select Top Plane",PLANE
  1325# $$
  1326# OBTAIN/THICK,SPTH,SDTH,SCTH
  1327# CALL  /FIG, SCALP=ISCAL, STP=ISTPO, IPL1=ITPL, IPL2=IBPL
  1328# $$
  1329# KINC  =INC
  1330# $$
  1331#   DO /100,KCNT=0,DIV
  1332# $$
  1333#     KCNT  =KCNT+1
  1334#     STH   =-((COR/2)+KINC*KCNT)
  1335#     THICK /STH,SDTH,SCTH
  1336#     CALL  /IMAC1
  1337#     KCNT  =KCNT-1
  1338#     STH   =-((COR/2)+KINC*KCNT)
  1339#     THICK /STH,DTH,CTH
  1340#     CALL  /IMAC2
  1341#     KCNT  =KCNT+1
  1342# 100:  CONTIN
  1343# THICK /SPTH,SDTH,SCTH
  1344# TERMAC
  1345#
  1346# $$
  1347# $$ Macro to figure the number of passes required to machine
  1348# $$ between two parallel planes. Used with Kellering macros.
  1349# $$
  1350# FIG   =MACRO/IPL1, IPL2, SCALP=0, STP=(TOLR*100)
  1351# PROMPT/FIG,"None"," "
  1352# $$
  1353#   IF (SCALP 'GT' 0) THEN
  1354#     STP1  = SQRT(COR**2-(COR-SCALP)**2)*2
  1355#   ELSE
  1356#     STP1  = STP
  1357#   ENDIF
  1358# $$
  1359# D1    =DISTF(IPL1,IPL2)
  1360# DIV   =NINT(D1/STP1)
  1361# INC   =D1/DIV
  1362# PASES =DIV + 1
  1363# TERMAC
  1364#
  1365#
  1366# $$
  1367# $$ Macro to sprial pocket a Circle or Cylinder
  1368# $$
  1369# POKSPR=MACRO/ICI,IBPL,ITPL,ISTK=0,IRET=ON
  1370# PROMPT/POKSPR,"Motion","Spiral Pocket A Circular Shape"
  1371# PROMPT/ICI, "Select Circle Or Cylinder To Pocket"
  1372# PROMPT/IBPL,"Select Bottom Plane",PLANE
  1373# PROMPT/ITPL,"Select Top Plane",PLANE
  1374# PROMPT/ISTK,"Enter Excess Stock For Final Pass",0,99999
  1375# PROMPT/IRET,"Retract At End Of Cut",ON,OFF
  1376# $$
  1377# OBTAIN/THICK,PTH
  1378# OBTAIN/TOLER,TOL
  1379# THICK /0
  1380# TLAXIS/SAME
  1381# *RESET/DISPLY
  1382# INCA  =20
  1383# OBTAIN/ICI,X1,Y1,Z1,I1,J1,K1,R1
  1384# ERAD  =(DIA*.25)
  1385# IF    (ERAD 'GT' (R1-(HDIA+ISTK))) ERAD=(R1-(HDIA+ISTK))
  1386# $$
  1387# DD1   =R1-(HDIA+ISTK+ERAD)
  1388# NUM1  =NINT(DD1/(DIA*.75))
  1389# IF    (NUM1 'LE' 1) NUM1=1
  1390# REVS  =360*NUM1
  1391# NUM2  =REVS/INCA
  1392# INC   =DD1/NUM2
  1393# PP1   =POINT/X1,Y1,Z1
  1394# CC1   =CIRCLE/CENTER,PP1,RADIUS,R1-(HDIA+ISTK)
  1395# LL1   =LINE/PP1,ATANGL,0
  1396# $$
  1397#   DO /100,I=0,NUM2
  1398#     CCA   =CIRCLE/CENTER,PP1,RADIUS,ERAD+(INC*I)
  1399#     P(I+1)=POINT/CCA,ATANGL,INCA*I
  1400# 100:  CONTIN
  1401# SPCV  =SPLINE/FIT,P(1),THRU,P(NUM2+1)
  1402# $$
  1403# OBTAIN/ITPL,I1,J1,K1,D1
  1404# OBTAIN/IBPL,I2,J2,K2,D2
  1405# $$
  1406# ZT    =(D1*K1)
  1407# ZB    =(D2*K2)+PTH
  1408# PLL1  =PLANE/0,0,1,ZT+(TOL*100)
  1409# PLL2  =PLANE/0,0,1,ZB
  1410# ZSURF /CLR
  1411#   IF (DD1 'LE' (DIA*.75)) THEN
  1412#     P(1)  =POINT/CC1,ATANGL,0
  1413#     RAPID, GOTO/(POINT/P(1),0)
  1414#     RAPID, GODLTA/PLL1
  1415#     FEDRAT/FD/2
  1416#     GODLTA/ITPL
  1417#     CALL  /HEL,IPT=P(1), SZ=ZT, EZ=ZB, EANG=360
  1418#     GO    /ON,LL1,PLL2,ON,(LINE/P(1),ATANGL,90)
  1419#     INDIRV/VPY
  1420#     FEDRAT/FD
  1421#     TLON
  1422#     GOFWD/CC1,ON,2,IO,LL1
  1423#   ELSE
  1424#     RAPID, GOTO/(POINT/P(1),0)
  1425#     RAPID, GODLTA/PLL1
  1426#     FEDRAT/FD/2
  1427#     GODLTA/ITPL
  1428#     CALL  /HEL,IPT=P(1), SZ=ZT, EZ=ZB, EANG=360
  1429#     GO    /ON,LL1,PLL2,ON,(LINE/P(1),ATANGL,90)
  1430#     INDIRV/VPY
  1431#     FEDRAT/FD
  1432#     TLON
  1433#     GOFWD/SPCV[0],ON,NUM1*2,IO,LL1
  1434#     GOFWD/CC1,ON,2,INTOF,LL1
  1435#   ENDIF
  1436#   IF (ISTK 'NE' 0) THEN
  1437#     REVS  =360
  1438#     NUM2  =REVS/INCA
  1439#     INC   =ISTK/NUM2
  1440#     REFSYS/NOMORE
  1441#     PTE   =POINT/TE
  1442#     PP1   =POINT/PTE,-ERAD/2,0,0
  1443# $$
  1444#     DO /200,I=0,NUM2
  1445#       CCA   =CIRCLE/CENTER,PP1,RADIUS,ERAD/2+(INC*I)
  1446#       P(I+1)=POINT/CCA,ATANGL,INCA*I
  1447# 200:  CONTIN
  1448#     SPCV  =SPLINE/FIT,P(1),THRU,P(NUM2+1)
  1449#     NOPS,  GOFWD/SPCV[0]
  1450#     CC1   =CIRCLE/CENTER,(POINT/CENTER,CC1),RADIUS,R1-HDIA
  1451#     TLON
  1452#     GOFWD /CC1,ON,2,IO,LL1
  1453#   ENDIF
  1454# REFSYS/NOMORE
  1455# PTE   =POINT/TE
  1456# ZT    =(K1*D1)+(TOL*100)
  1457# CALL  /HEL,IPT=PTE, SZ=ZB, EZ=(ZB+(TOL*50)), EANG=45
  1458# IF    (VOCABF(IRET) 'EQ' VOCABF(ON)) RAPID,GODLTA/CLR
  1459# THICK /PTH,0
  1460# *SET  /DISPLY
  1461# TERMAC
  1462#
  1463# $$
  1464# $$ Macro to generate Helical motion used with POKSPR Macro
  1465# $$
  1466# HEL   =MACRO/IPT,SZ,EZ,EANG,IANG=5
  1467# PROMPT/HEL,"None"," "
  1468# $$
  1469# N1    =INT(EANG/IANG)
  1470# INC1  =EANG/N1
  1471# ZINC  =(EZ-SZ)/N1
  1472# $$
  1473# PP1   =POINT/IPT,-ERAD,0,0
  1474# CCA   =CIRCLE/CENTER,PP1,RADIUS,ERAD
  1475#   DO /HEL1, I=0, N1
  1476#     ZSURF /(PLANE/0,0,1,SZ+(ZINC*I))
  1477#     PP1   =POINT/CCA,ATANGL,INC1*I
  1478#     GOTO  /PP1
  1479# HEL1: CONTIN
  1480# TERMAC
  1481#
  1482# $$
  1483# $$ Macro to define Tapering offset surface
  1484# $$
  1485# TAPER =MACRO/INPTS=20,ISF,ONAM,IMOD=YL,ISO,IEO
  1486# PROMPT/TAPER,"Geometry","Macro To Define Tapering Offset Surface"
  1487# PROMPT/INPTS,3,0,"Number Of Points For Calc",20,200
  1488# PROMPT/ISF,      "Select Surface",SURF
  1489# PROMPT/ONAM,     "Enter Name Of New Surface"
  1490# PROMPT/IMOD,     "Offset Direction....",XLARGE,XSMALL,YLARGE,YSMALL, $
  1491#        ZLARGE,ZSMALL
  1492# PROMPT/ISO,4,2,  "Starting Offset",.01,1
  1493# PROMPT/IEO,4,2,  "Ending Offset",.01,1
  1494# $$
  1495# *RESET/DISPLY
  1496# TMPSF =SURF/OFFSET,ISF,IMOD,1
  1497# TINC  =IEO-ISO
  1498# NUM1  =INPTS
  1499# INC   =TINC/(NUM1-1)
  1500# $$
  1501# CVV1  =CURVE/ISF,1,0
  1502# CVV2  =CURVE/ISF,2,0
  1503# DD1   =DIST/CVV1
  1504# DD2   =DIST/CVV2
  1505# INC1  =DD1/(NUM1-1)
  1506# INC2  =DD2/(NUM1-1)
  1507# $$
  1508#   DO /10,I=0,(NUM1-1)
  1509#     PP1   =POINT/CVV1,INC1*I
  1510#     PP2   =POINT/CVV2,INC2*I
  1511#     VV1   =VECTOR/(VECTOR/PP1,TMPSF),TIMES,ISO+(INC*I)
  1512#     VV2   =VECTOR/(VECTOR/PP2,TMPSF),TIMES,ISO+(INC*I)
  1513#     OBTAIN/VV1,I1,J1,K1
  1514#     OBTAIN/VV2,I2,J2,K2
  1515#     PPP1(I+1)=POINT/PP1,I1,J1,K1
  1516#     PPP2(I+1)=POINT/PP2,I2,J2,K2
  1517# $$
  1518# 10:  CONTIN
  1519# CVV1 =CURVE/FIT,PPP1(1),THRU,PPP1(INPTS)
  1520# CVV2 =CURVE/FIT,PPP2(1),THRU,PPP2(INPTS)
  1521# $$
  1522# *SET /DISPLY
  1523# $$
  1524# ONAM =SURF/CVV1,CVV2
  1525# $$
  1526# TERMAC
  1527#
  1528# $$
  1529# $$ Rib Top: Inside fillet, outside fillet
  1530# $$
  1531# RTIFOF=MACRO/IBSF,ITSF,IPAS=2,ISCALP=0,IDIR=LEFT,IPOS=ON,IRET=ON,    $
  1532#              IFIL=OFF
  1533# PROMPT/RTIFOF,"Motion","Rib Top: Inside Fillet/Outside Fillet"
  1534# PROMPT/IBSF,      "Select Bottom Surface",SURF
  1535# PROMPT/ITSF,      "Select Top Surface",SURF
  1536# PROMPT/IPAS,3,0,  "Enter Number Of Passes",2,999
  1537# PROMPT/ISCALP,4,4,"Enter Scallop Height"
  1538# PROMPT/IDIR,1,0,  "Enter Start Side",LEFT,RIGHT
  1539# PROMPT/IPOS,      "Approach From Clearance Plane",ON,OFF
  1540# PROMPT/IRET,      "Retract To Clearance Plane",ON,OFF
  1541# PROMPT/IFIL,1,0,  "Fillet Traverse Moves",ON,OFF
  1542# $$
  1543# *RESET/DISPLY
  1544# DRAFT /MODIFY,SHADE=OFF
  1545# OBTAIN/THICK,PTH,DTH,CTH
  1546# OBTAIN/CONTCT,1CONT1
  1547# OBTAIN/TOLER,TOL
  1548# $$
  1549# CALL  /GETCV,IISF=IBSF,BCVN=BCV1,TCVN=TCV1,LCVN=LCV1,RCVN=RCV1
  1550# CALL  /GETCV,IISF=ITSF,BCVN=BCV2,TCVN=TCV2,LCVN=LCV2,RCVN=RCV2
  1551# $$
  1552# LCCV  =CURVE/COMPOS,LCV1,LCV2
  1553# RCCV  =CURVE/COMPOS,RCV1,RCV2
  1554# $$
  1555#   IF (VOCABF(IDIR) 'EQ' VOCABF(LEFT)) THEN
  1556#     IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  1557#       RSF=NSURF/LCCV,RCCV
  1558#     ELSE
  1559#       RSF=NSURF/RCCV,LCCV
  1560#     ENDIF
  1561#   ELSE IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  1562#     RSF=NSURF/RCCV,LCCV
  1563#   ELSE
  1564#     RSF=NSURF/LCCV,RCCV
  1565#   ENDIF
  1566# $$
  1567# REFSYS/MXX1
  1568# ORSF  =SURF/OFFSET,RSF,ZSMALL,(TOL*100)
  1569# REFSYS/NOMORE
  1570# $$
  1571# GOUGCK/ON,2
  1572# CONTCT/ON
  1573# CVV1  =CURVE/RSF,3,0
  1574# CVV2  =CURVE/RSF,1,0
  1575# DVEC  =PNTVEC/(POINT/CVV1,0),CVV1
  1576# CVEC  =PNTVEC/(POINT/CVV2,0),CVV2
  1577# DVEC  =REVERS/DVEC
  1578# STPL  =PLANE/DVEC
  1579# $$
  1580# SRFVCT/DVEC,CVEC
  1581# INDIRV/CVEC
  1582# IF    (VOCABF(IPOS) 'EQ' VOCABF(OFF)) DNTCUT
  1583# THICK /0,(TOL*250),0
  1584# RAPID
  1585# GO/STPL,CLR,BCV1
  1586# DNTCUT
  1587# THICK /(TOL*100),0
  1588# GODLTA/RSF
  1589# THICK /PTH,DTH,CTH
  1590#   IF (VOCABF(IPOS) 'NE' VOCABF(OFF)) THEN
  1591#     RAPID
  1592#     CUT
  1593#     GODLTA/RSF
  1594#   ELSE
  1595#     DNTCUT/NOMORE
  1596#   ENDIF
  1597# $$
  1598# PASES =IPAS
  1599# D1    =DIST/BCV1
  1600# D2    =DIST/TCV2
  1601#   IF (D1 'GE' D2) THEN
  1602#     D3    =D1
  1603#   ELSE
  1604#     D3    =D2
  1605#   ENDIF
  1606# ECR   =HDIA-COR
  1607# STPO  =SQRT(ECR**2-(ECR-ISCALP)**2) * 2
  1608# $$
  1609# IF    (ISCALP 'GT' 0) PASES = INT(D3/STPO+.5) + 1
  1610# $$
  1611# STPO  =D3/PASES
  1612# TFRAD =STPO/3
  1613# IF    (VOCABF(IFIL) 'EQ' VOCABF(ON)) ARCSLP/FILLET,TFRAD,TOL/4
  1614# $$
  1615# INC   =1/(PASES-1)
  1616# $$
  1617#   DO /100,I=0,PASES-1
  1618#     DSF   =NSURF/(SPLINE/RSF,1,INC*I,200),(SPLINE/ORSF,1,INC*I,200)
  1619#     INDIRV/CVEC
  1620#     GO    /ON,DSF,RSF,BCV1,FD
  1621#     INDIRV/CVEC
  1622#     TLON
  1623#     GOFWD/DSF,TCV2
  1624#     IF (I 'NE' (PASES-1)) THEN
  1625#       I     =I+1
  1626#       DSF   =NSURF/(SPLINE/RSF,1,INC*I,200),(SPLINE/ORSF,1,INC*I,200)
  1627#       GO    /ON,DSF,RSF,TCV2
  1628#       PVV1  =REVERS/CVEC
  1629#       INDIRV/PVV1
  1630#       GOFWD /DSF,PAST,BCV1
  1631#     ENDIF
  1632# 100:  CONTIN
  1633# $$
  1634# CONTCT/OFF
  1635# GOUGCK/OFF
  1636# ARCSLP/FILLET,0
  1637#   IF (VOCABF(IRET) 'EQ' VOCABF(ON)) THEN
  1638#     RAPID
  1639#     GODLTA/CLR
  1640#   ENDIF
  1641# DRAFT /MODIFY,SHADE=ON
  1642# *SET  /DISPLY
  1643#   IF    (1CONT1 'EQ' 1) CONTCT/ON
  1644# TERMAC
  1645#
  1646# $$
  1647#
  1648# $$ Rib Top: Inside fillet, Ramp
  1649# $$
  1650# RTIFR =MACRO/IBSF,ITSF,IPAS=2,ISCALP=0,IDIR=LEFT,IPOS=ON,IRET=ON,    $
  1651#              IFIL=OFF
  1652# PROMPT/RTIFR,"Motion","Rib Top: Inside Fillet/Ramp"
  1653# PROMPT/IBSF,      "Select Fillet Surface",SURF
  1654# PROMPT/ITSF,      "Select Top Surface",SURF
  1655# PROMPT/IDIR,1,0,  "Enter Start Side",LEFT,RIGHT
  1656# PROMPT/IPAS,3,0,  "Enter Number Of Pases",2,999
  1657# PROMPT/ISCALP,4,4,"Enter Scallop Height"
  1658# PROMPT/IPOS,      "Approach From Clearance Plane",ON,OFF
  1659# PROMPT/IRET,      "Retract To Clearance Plane",ON,OFF
  1660# PROMPT/IFIL,1,0,  "Fillet Traverse Moves",ON,OFF
  1661# $$
  1662# *RESET/DISPLY
  1663# DRAFT /MODIFY,SHADE=OFF
  1664# OBTAIN/THICK,PTH,DTH,CTH
  1665# OBTAIN/CONTCT,1CONT1
  1666# OBTAIN/TOLER,TOL
  1667# $$
  1668# CALL  /GETCV,IISF=IBSF,BCVN=BCV1,TCVN=TCV1,LCVN=LCV1,RCVN=RCV1
  1669# $$
  1670#   IF (VOCABF(IDIR) 'EQ' VOCABF(LEFT)) THEN
  1671#     IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  1672#       RSF=NSURF/LCV1,RCV1
  1673#     ELSE
  1674#       RSF=NSURF/RCV1,LCV1
  1675#     ENDIF
  1676#   ELSE IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  1677#     RSF=NSURF/LCV1,RCV1
  1678#   ELSE
  1679#     RSF=NSURF/RCV1,LCV1
  1680#   ENDIF
  1681# $$
  1682# CALL  /GETCV,IISF=ITSF,BCVN=BCV2,TCVN=TCV2,LCVN=LCV2,RCVN=RCV2
  1683# PLL1  =PLANE/(POINT/ON,TCV2,.5),PERPTO,(VECTOR/TLAXIS)
  1684# REFSYS/MXX1
  1685# ORSF  =SURF/OFFSET,RSF,ZSMALL,(TOL*100)
  1686# REFSYS/NOMORE
  1687# $$
  1688# CVV1  =CURVE/RSF,3,0
  1689# CVV2  =CURVE/RSF,1,0
  1690# DVEC  =PNTVEC/(POINT/CVV1,0),CVV1
  1691# CVEC  =PNTVEC/(POINT/CVV2,0),CVV2
  1692# DVEC  =REVERS/DVEC
  1693# STPL  =PLANE/DVEC
  1694# OBTAIN/CVEC,,,,I1,J1,K1
  1695# $$
  1696# TSF   =SURF/ITSF
  1697# $$
  1698# GOUGCK/ON,2
  1699# CONTCT/ON
  1700# $$
  1701# SRFVCT/DVEC,CVEC
  1702# INDIRV/CVEC
  1703# IF    (VOCABF(IPOS) 'EQ' VOCABF(OFF)) DNTCUT
  1704# THICK /0,(TOL*250),0
  1705# RAPID
  1706# GO/STPL,CLR,BCV1
  1707# DNTCUT
  1708# THICK /(TOL*100),0
  1709# GODLTA/RSF
  1710# THICK /PTH,DTH,CTH
  1711#   IF (VOCABF(IPOS) 'NE' VOCABF(OFF)) THEN
  1712#     RAPID
  1713#     CUT
  1714#     GODLTA/RSF,FD
  1715#   ELSE
  1716#     DNTCUT/NOMORE
  1717#   ENDIF
  1718# $$
  1719# PASES =IPAS
  1720# D1    =DIST/BCV1
  1721# D2    =DIST/TCV1
  1722#   IF (D1 'GE' D2) THEN
  1723#     D3    =D1
  1724#   ELSE
  1725#     D3    =D2
  1726#   ENDIF
  1727# ECR   =HDIA-COR
  1728# STPO  =SQRT(ECR**2-(ECR-ISCALP)**2) * 2
  1729# $$
  1730# IF    (ISCALP 'GT' 0) PASES = INT(D3/STPO+.5) + 1
  1731# $$
  1732# STPO  =D3/PASES
  1733# TFRAD =STPO/3
  1734# IF    (VOCABF(IFIL) 'EQ' VOCABF(ON)) ARCSLP/FILLET,TFRAD,TOL/4
  1735# $$
  1736# INC   =1/(PASES-1)
  1737# $$
  1738#   DO /100,I=0,PASES-1
  1739#     DSF   =NSURF/(SPLINE/RSF,1,INC*I,200),(SPLINE/ORSF,1,INC*I,200)
  1740#     GO    /BCV1,RSF,ON,DSF,FD
  1741#     INDIRV/CVEC
  1742#     TLON
  1743#     GOFWD/DSF,TCV2
  1744#     IF (I 'NE' (PASES-1)) THEN
  1745#       I     =I+1
  1746#       DSF   =NSURF/(SPLINE/RSF,1,INC*I,200),(SPLINE/ORSF,1,INC*I,200)
  1747#       GO    /TCV2,RSF,ON,DSF
  1748#       PVV1  =REVERS/CVEC
  1749#       INDIRV/PVV1
  1750#       TLON
  1751#       GOFWD /DSF,PAST,BCV1
  1752#     ENDIF
  1753# 100:  CONTIN
  1754# $$
  1755# GOUGCK/OFF
  1756# CONTCT/OFF
  1757# ARCSLP/FILLET,0
  1758#   IF (VOCABF(IRET) 'EQ' VOCABF(ON)) THEN
  1759#     RAPID
  1760#     GODLTA/CLR
  1761#   ENDIF
  1762# DRAFT /MODIFY,SHADE=ON
  1763# *SET  /DISPLY
  1764#   IF    (1CONT1 'EQ' 1) CONTCT/ON
  1765# TERMAC
  1766#
  1767# $$
  1768# $$ Rib Top: Inside fillet, Ramp, Outside fillet
  1769# $$
  1770# RTIRO =MACRO/IBSF,IMSF,ITSF,IPAS=2,ISCALP=0,IDIR=LEFT,IPOS=ON,       $
  1771#              IRET=ON,IFIL=OFF
  1772# PROMPT/RTIRO,"Motion","Rib Top: Inside Fillet/Ramp/Outside Fil."
  1773# PROMPT/IBSF,      "Select Bottom Surface",SURF
  1774# PROMPT/IMSF,      "Select Middle Surface",SURF
  1775# PROMPT/ITSF,      "Select Top Surface",SURF
  1776# PROMPT/IDIR,1,0,  "Enter Start Side",LEFT,RIGHT
  1777# PROMPT/IPAS,3,0,  "Enter Number Of Pases.............",2,999
  1778# PROMPT/ISCALP,4,4,"Enter Scallop Height.............."
  1779# PROMPT/IPOS,      "Approach From Clearance Plane",ON,OFF
  1780# PROMPT/IRET,      "Retract To Clearance Plane",ON,OFF
  1781# PROMPT/IFIL,1,0,  "Fillet Traverse Moves",ON,OFF
  1782# $$
  1783# *RESET/DISPLY
  1784# DRAFT /MODIFY,SHADE=OFF
  1785# OBTAIN/THICK,PTH,DTH,CTH
  1786# OBTAIN/CONTCT,1CONT1
  1787# OBTAIN/TOLER,TOL
  1788# $$
  1789# CALL  /GETCV,IISF=IBSF,BCVN=BCV1,TCVN=TCV1,LCVN=LCV1,RCVN=RCV1
  1790# CALL  /GETCV,IISF=IMSF,BCVN=BCV2,TCVN=TCV2,LCVN=LCV2,RCVN=RCV2
  1791# CALL  /GETCV,IISF=ITSF,BCVN=BCV3,TCVN=TCV3,LCVN=LCV3,RCVN=RCV3
  1792# $$
  1793# LCCV  =CURVE/COMPOS,LCV1,LCV2,LCV3
  1794# RCCV  =CURVE/COMPOS,RCV1,RCV2,RCV3
  1795# $$
  1796#   IF (VOCABF(IDIR) 'EQ' VOCABF(LEFT)) THEN
  1797#     IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  1798#       RSF=NSURF/LCCV,RCCV
  1799#     ELSE
  1800#      RSF=NSURF/RCCV,LCCV
  1801#     ENDIF
  1802#   ELSE IF (VOCABF(IDIR) 'EQ' VOCABF(OFF)) THEN
  1803#     RSF=NSURF/RCCV,LCCV
  1804#   ELSE
  1805#     RSF=NSURF/LCCV,RCCV
  1806#   ENDIF
  1807# $$
  1808# REFSYS/MXX1
  1809# ORSF  =SURF/OFFSET,RSF,ZSMALL,(TOL*100)
  1810# REFSYS/NOMORE
  1811# $$
  1812# GOUGCK/ON,2
  1813# CONTCT/ON
  1814# CVV1  =CURVE/RSF,3,0
  1815# CVV2  =CURVE/RSF,1,0
  1816# DVEC  =PNTVEC/(POINT/CVV1,0),CVV1
  1817# CVEC  =PNTVEC/(POINT/CVV2,0),CVV2
  1818# DVEC  =REVERS/DVEC
  1819# STPL  =PLANE/DVEC
  1820# $$
  1821# SRFVCT/DVEC,CVEC
  1822# INDIRV/CVEC
  1823# IF    (VOCABF(IPOS) 'EQ' VOCABF(OFF)) DNTCUT
  1824# THICK /0,(TOL*250),0
  1825# RAPID, GO/STPL,CLR,BCV1
  1826# DNTCUT
  1827# THICK /(TOL*100),0
  1828# GODLTA/RSF
  1829# THICK /PTH,DTH,CTH
  1830#   IF (VOCABF(IPOS) 'NE' VOCABF(OFF)) THEN
  1831#     RAPID
  1832#     CUT
  1833#     GODLTA/RSF
  1834#   ELSE
  1835#     DNTCUT/NOMORE
  1836#   ENDIF
  1837# $$
  1838# PASES =IPAS
  1839# D1    =DIST/BCV1
  1840# D2    =DIST/TCV3
  1841# IF    (D1 'GE' D2) D3=D1
  1842# IF    (D2 'GE' D1) D3=D2
  1843# ECR   =HDIA-COR
  1844# STPO  =SQRT(ECR**2-(ECR-ISCALP)**2) * 2
  1845# $$
  1846# IF    (ISCALP 'GT' 0) PASES = INT(D3/STPO+.5) + 1
  1847# $$
  1848# STPO  =D3/PASES
  1849# TFRAD =STPO/3
  1850# IF    (VOCABF(IFIL) 'EQ' VOCABF(ON)) ARCSLP/FILLET,TFRAD,TOL/4
  1851# $$
  1852# INC   =1/(PASES-1)
  1853# $$
  1854#   DO /100,I=0,PASES-1
  1855#     DSF   =NSURF/(SPLINE/RSF,1,INC*I,200),(SPLINE/ORSF,1,INC*I,200)
  1856#     INDIRV/CVEC
  1857#     GO    /ON,DSF,RSF,BCV1,FD
  1858#     INDIRV/CVEC
  1859#     TLON
  1860#     GOFWD/DSF,TCV3
  1861#     IF (I 'NE' (PASES-1)) THEN
  1862#       I     =I+1
  1863#       DSF   =NSURF/(SPLINE/RSF,1,INC*I,200),(SPLINE/ORSF,1,INC*I,200)
  1864#       INDIRV/CVEC
  1865#       GO    /ON,DSF,RSF,TCV3
  1866#       PVV1  =REVERS/CVEC
  1867#       INDIRV/PVV1
  1868#       TLON
  1869#       GOFWD/DSF,PAST,BCV1
  1870#     ENDIF
  1871# 100:  CONTIN
  1872# $$
  1873# GOUGCK/OFF
  1874# CONTCT/OFF
  1875# ARCSLP/FILLET,0
  1876# IF    (VOCABF(IRET) 'EQ' VOCABF(ON)) RAPID,GODLTA/CLR
  1877# DRAFT /MODIFY,SHADE=ON
  1878# *SET  /DISPLY
  1879#   IF    (1CONT1 'EQ' 1) CONTCT/ON
  1880# TERMAC
  1881#
  1882# $$
  1883# $$ Rib Top: Outside fillet, Ramp, Outside fillet
  1884# $$
  1885# RTORO =MACRO/IBSF,IMSF,ITSF,IPAS=2,ISCALP=0,IDIR=LEFT,IPOS=ON,$
  1886#              IRET=ON,IFIL=OFF
  1887# PROMPT/RTORO,"Motion","Rib Top:Outside Fillet/Ramp/Outside Fil."
  1888# PROMPT/IBSF,      "Select Bottom Surface",SURF
  1889# PROMPT/IMSF,      "Select Middle Surface",SURF
  1890# PROMPT/ITSF,      "Select Top Surface",SURF
  1891# PROMPT/IDIR,1,0,  "Enter Start Side",LEFT,RIGHT
  1892# PROMPT/IPAS,3,0,  "Enter Number of Passes",2,999
  1893# PROMPT/ISCALP,4,4,"Enter Scallop Height"
  1894# PROMPT/IPOS,      "Approach From Clearance Plane",ON,OFF
  1895# PROMPT/IRET,      "Retract To Clearance Plane",ON,OFF
  1896# PROMPT/IFIL,1,0,  "Fillet Traverse Moves",ON,OFF
  1897# $$
  1898# *RESET/DISPLY
  1899# DRAFT /MODIFY,SHADE=OFF
  1900# OBTAIN/THICK,PTH,DTH,CTH
  1901# OBTAIN/CONTCT,1CONT1
  1902# OBTAIN/TOLER,TOL
  1903# $$
  1904# CALL  /GETCV,IISF=IBSF,BCVN=BCV1,TCVN=TCV1,LCVN=LCV1,RCVN=RCV1
  1905# CALL  /GETCV,IISF=IMSF,BCVN=BCV2,TCVN=TCV2,LCVN=LCV2,RCVN=RCV2
  1906# CALL  /GETCV,IISF=ITSF,BCVN=BCV3,TCVN=TCV3,LCVN=LCV3,RCVN=RCV3
  1907# $$
  1908# LCCV  =CURVE/COMPOS,LCV1,LCV2,LCV3
  1909# RCCV  =CURVE/COMPOS,RCV1,RCV2,RCV3
  1910# $$
  1911#   IF (VOCABF(IDIR) 'EQ' VOCABF(LEFT)) THEN
  1912#     IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  1913#       RSF=NSURF/LCCV,RCCV
  1914#     ELSE
  1915#       RSF=NSURF/RCCV,LCCV
  1916#     ENDIF
  1917#   ELSE IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  1918#     RSF=NSURF/RCCV,LCCV
  1919#   ELSE
  1920#     RSF=NSURF/LCCV,RCCV
  1921#   ENDIF
  1922# $$
  1923# REFSYS/MXX1
  1924# ORSF  =SURF/OFFSET,RSF,ZSMALL,(TOL*100)
  1925# BSF   =SURF/BCV1,(CURVE/ORSF,3,0)
  1926# BSF   =SURF/OFFSET,BSF,ZSMALL,COR
  1927# REFSYS/NOMORE
  1928# $$
  1929# CONTCT/ON
  1930# CVV1  =CURVE/RSF,3,0
  1931# CVV2  =CURVE/RSF,1,0
  1932# DVEC  =PNTVEC/(POINT/CVV1,0),CVV1
  1933# CVEC  =PNTVEC/(POINT/ON,CVV2,.05),CVV2
  1934# DVEC  =REVERS/DVEC
  1935# PVEC  =PNTVEC/(POINT/CVV1,0),ORSF
  1936# REVERS/PVEC
  1937# STPL  =PLANE/DVEC
  1938# $$
  1939# SRFVCT/DVEC,CVEC
  1940# INDIRV/CVEC
  1941# IF    (VOCABF(IPOS) 'EQ' VOCABF(OFF)) DNTCUT
  1942# RAPID
  1943# GO/STPL,CLR,BCV1
  1944# DNTCUT
  1945# GODLTA/BSF
  1946# GODLTA/(PNTVEC/PVEC,TIMES,DIA)
  1947# INDIRV/(PNTVEC/PVEC,TIMES,-1)
  1948# GO    /STPL,BSF,RSF
  1949#   IF (VOCABF(IPOS) 'NE' VOCABF(OFF)) THEN
  1950#     RAPID
  1951#     CUT
  1952#   ELSE
  1953#     DNTCUT/NOMORE
  1954#   ENDIF
  1955# $$
  1956# CONTCT/ON
  1957# PASES =IPAS
  1958# D1    =DIST/BCV1
  1959# D2    =DIST/TCV3
  1960#   IF (D1 'GE' D2) THEN
  1961#     D3    =D1
  1962#   ELSE
  1963#     D3    =D2
  1964#   ENDIF
  1965# ECR   =HDIA-COR
  1966# STPO  =SQRT(ECR**2-(ECR-ISCALP)**2) * 2
  1967# $$
  1968# IF    (ISCALP 'GT' 0) PASES = INT(D3/STPO+.5) + 1
  1969# $$
  1970# STPO  =D3/PASES
  1971# TFRAD =STPO/3
  1972# IF    (VOCABF(IFIL) 'EQ' VOCABF(ON)) ARCSLP/FILLET,TFRAD,TOL/4
  1973# $$
  1974# INC   =1/(PASES-1)
  1975# $$
  1976#   DO /100,I=0,PASES-1
  1977#     DSF   =NSURF/(SPLINE/RSF,1,INC*I,200),(SPLINE/ORSF,1,INC*I,200)
  1978#     DNTCUT
  1979#     GD   /(PNTVEC/PVEC,TIMES,DIA)
  1980#     INDIRV/(PNTVEC/PVEC,TIMES,-1)
  1981#     GO    /RSF,BSF,ON,DSF,FD
  1982#     CUT
  1983#     INDIRV/CVEC
  1984#     PSIS  /RSF
  1985#     TLON
  1986#     GOFWD/DSF,TCV3
  1987#     IF (I 'NE' (PASES-1)) THEN
  1988#       I     =I+1
  1989#       DSF   =NSURF/(SPLINE/RSF,1,INC*I,200),(SPLINE/ORSF,1,INC*I,200)
  1990#       INDIRV/CVEC
  1991#       GO    /ON,DSF,RSF,TCV3
  1992#       PVV1  =REVERS/CVEC
  1993#       INDIRV/PVV1
  1994#       GOFWD /DSF,BSF
  1995#     ENDIF
  1996# 100:  CONTIN
  1997# $$
  1998# CONTCT/OFF
  1999# ARCSLP/FILLET,0
  2000#   IF (VOCABF(IRET) 'EQ' VOCABF(ON)) THEN
  2001#     RAPID
  2002#     GODLTA/CLR
  2003#   ENDIF
  2004# DRAFT /MODIFY,SHADE=ON
  2005# *SET  /DISPLY
  2006#   IF    (1CONT1 'EQ' 1) CONTCT/ON
  2007# TERMAC
  2008#
  2009# $$
  2010# $$ Rib Top: Outside fillet 5-axis
  2011# $$
  2012# RTOF5X=MACRO/IBSF,IPAS=2,IDIR=LEFT,IPOS=ON,IRET=ON
  2013# PROMPT/RTOF5X,"Motion","Rib Top: Outside Fillet 5-Axis"
  2014# PROMPT/IBSF,    "Select Fillet Surface",SURF
  2015# PROMPT/IPAS,3,0,"Enter Number Of Passes",2,999
  2016# PROMPT/IDIR,1,0,"Enter Start Side",LEFT,RIGHT
  2017# PROMPT/IPOS,    "Approach From Clearance Plane",ON,OFF
  2018# PROMPT/IRET,    "Retract To Clearance Plane",ON,OFF
  2019# $$
  2020# *RESET/DISPLY
  2021# DRAFT /MODIFY,SHADE=OFF
  2022# OBTAIN/THICK,PTH,DTH,CTH
  2023# OBTAIN/CONTCT,1CONT1
  2024# OBTAIN/TOLER,TOL
  2025# $$
  2026# CALL  /GETCV,IISF=IBSF,BCVN=BCV1,TCVN=TCV1,LCVN=LCV1,RCVN=RCV1
  2027# $$
  2028#   IF (VOCABF(IDIR) 'EQ' VOCABF(LEFT)) THEN
  2029#     IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  2030#       RSF=NSURF/LCV1,RCV1
  2031#     ELSE
  2032#       RSF=NSURF/RCV1,LCV1
  2033#     ENDIF
  2034#   ELSE IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  2035#     RSF=NSURF/RCV1,LCV1
  2036#   ELSE
  2037#     RSF=NSURF/LCV1,RCV1
  2038#   ENDIF
  2039# $$
  2040# REFSYS/MXX1
  2041# ORSF  =SURF/OFFSET,RSF,ZSMALL,(TOL*100)
  2042# BSF   =NSURF/BCV1,(CURVE/ORSF,3,0)
  2043# BSF   =SURF/OFFSET,BSF,ZSMALL,COR
  2044# REFSYS/NOMORE
  2045# $$
  2046# $$
  2047# CONTCT/ON
  2048# CVV1  =CURVE/RSF,3,0
  2049# CVV2  =CURVE/RSF,1,0
  2050# DVEC  =PNTVEC/(POINT/CVV1,0),CVV1
  2051# CVEC  =PNTVEC/(POINT/ON,CVV2,.5),CVV2
  2052# DVEC  =REVERS/DVEC
  2053# STPL  =PLANE/DVEC
  2054# $$
  2055# SVEC  =PNTVEC/(POINT/CVV2,0),CVV2
  2056# CVV1  =CURVE/ORSF,4,0
  2057# EVEC  =PNTVEC/(POINT/CVV1,0),RSF
  2058# $$
  2059# TLAXIS/SVEC
  2060# IF    (VOCABF(IPOS) 'EQ' VOCABF(OFF)) DNTCUT
  2061# INDIRV/CVEC
  2062# SRFVCT/DVEC,CVEC
  2063# RAPID, GO/STPL,CLR,BCV1
  2064# INDIRV/CVEC
  2065# GO    /STPL,BSF,RSF
  2066#   IF (VOCABF(IPOS) 'NE' VOCABF(OFF)) THEN
  2067#     RAPID
  2068#     CUT
  2069#   ELSE
  2070#     DNTCUT/NOMORE
  2071#   ENDIF
  2072# $$
  2073# CONTCT/ON
  2074# INC   =1/(IPAS-1)
  2075# $$
  2076#   DO /100,I=0,IPAS-1
  2077#     DSF   =NSURF/(SPLINE/RSF,1,INC*I,200),(SPLINE/ORSF,1,INC*I,200)
  2078#     SRFVCT/DVEC,CVEC
  2079#     INDIRV/CVEC
  2080#     GO    /ON,DSF,BSF,RSF,FD
  2081#     INDIRV/CVEC
  2082#     PSIS  /RSF
  2083#     TLAXIS/INTERP,EVEC
  2084#     TLON
  2085#     GOFWD/DSF,TCV1
  2086#     IF (I 'NE' (IPAS-1)) THEN
  2087#       I     =I+1
  2088#       DSF   =NSURF/(SPLINE/RSF,1,INC*I,200),(SPLINE/ORSF,1,INC*I,200)
  2089#       INDIRV/CVEC
  2090#       GO    /ON,DSF,RSF,TCV1
  2091#       PVV1  =REVERS/CVEC
  2092#       INDIRV/PVV1
  2093#       TLAXIS/INTERP,SVEC
  2094#       GOFWD /DSF,BSF
  2095#     ENDIF
  2096# 100:  CONTIN
  2097# $$
  2098# CONTCT/OFF
  2099# TLAXIS/SAME
  2100#   IF (VOCABF(IRET) 'EQ' VOCABF(ON)) THEN
  2101#     RAPID
  2102#     GODLTA/CLR
  2103#   ENDIF
  2104# DRAFT /MODIFY,SHADE=ON
  2105# *SET  /DISPLY
  2106#   IF    (1CONT1 'EQ' 1) CONTCT/ON
  2107# TERMAC
  2108#
  2109# $$
  2110# $$ Rib Top: Ramp
  2111# $$
  2112# RTRMP  =MACRO/IBSF,IPAS=2,ISCALP=0,IDIR=LEFT,IPOS=ON,IRET=ON,IFIL=OFF
  2113# PROMPT/RTRMP,"Motion","Rib Top: Ramp"
  2114# PROMPT/IBSF,      "Select Ramp Surface",SURF
  2115# PROMPT/IDIR,1,0,  "Enter Start Side",LEFT,RIGHT
  2116# PROMPT/IPAS,3,0,  "Enter Number Of Passes",2,999
  2117# PROMPT/ISCALP,4,4,"Enter Scallop Height"
  2118# PROMPT/IPOS,      "Approach From Clearance Plane",ON,OFF
  2119# PROMPT/IRET,      "Retract To Clearance Plane",ON,OFF
  2120# PROMPT/IFIL,1,0,  "Fillet Traverse Moves",ON,OFF
  2121# $$
  2122# *RESET/DISPLY
  2123# DRAFT /MODIFY,SHADE=OFF
  2124# OBTAIN/THICK,PTH,DTH,CTH
  2125# ZSURF /NOMORE
  2126# OBTAIN/TOLER,TOL
  2127# $$
  2128# CALL  /GETCV,IISF=IBSF,BCVN=BCV1,TCVN=TCV1,LCVN=LCV1,RCVN=RCV1
  2129# $$
  2130#   IF (VOCABF(IDIR) 'EQ' VOCABF(LEFT)) THEN
  2131#     IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  2132#       RSF=NSURF/LCV1,RCV1
  2133#     ELSE
  2134#       RSF=NSURF/RCV1,LCV1
  2135#     ENDIF
  2136#   ELSE IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  2137#     RSF=NSURF/RCV1,LCV1
  2138#   ELSE
  2139#     RSF=NSURF/LCV1,RCV1
  2140#   ENDIF
  2141# $$
  2142# REFSYS/MXX1
  2143# ORSF  =SURF/OFFSET,RSF,ZLARGE,COR
  2144# REFSYS/NOMORE
  2145# $$
  2146# BCV1  =SPLINE/ORSF,3,0
  2147# TCV1  =SPLINE/ORSF,4,0
  2148# $$
  2149# GOUGCK/ON,2
  2150# CVV1  =SPLINE/RSF,3,0
  2151# CVV2  =SPLINE/RSF,1,0
  2152# DVEC  =PNTVEC/(POINT/CVV1,0),CVV1
  2153# CVEC  =PNTVEC/(POINT/ON,BCV1,.5),(POINT/ON,TCV1,.5)
  2154# DVEC  =REVERS/DVEC
  2155# STPL  =PLANE/DVEC
  2156# $$
  2157# $$
  2158# DNTCUT
  2159# GOTO  /(POINT/CVEC)
  2160# THICK /0,(TOL*250),-COR
  2161# INDIRV/CVEC
  2162# SRFVCT/DVEC,CVEC
  2163# GO    /STPL,CLR,BCV1
  2164#   IF (VOCABF(IPOS) 'NE' VOCABF(OFF)) THEN
  2165#     RAPID
  2166#     CUT
  2167#   ENDIF
  2168# DNTCUT
  2169# THICK /(TOL*100),0
  2170# GODLTA/RSF
  2171#   IF (VOCABF(IPOS) 'NE' VOCABF(OFF)) THEN
  2172#     RAPID
  2173#     CUT
  2174#     GODLTA/RSF
  2175#   ELSE
  2176#     DNTCUT/NOMORE
  2177#   ENDIF
  2178# $$
  2179# PASES =IPAS
  2180# D1    =DIST/BCV1
  2181# D2    =DIST/TCV1
  2182# IF    (D1 'GE' D2) D3=D1
  2183# IF    (D2 'GE' D1) D3=D2
  2184# ECR   =HDIA-COR
  2185# IF    (ECR 'EQ' 0) ECR=COR
  2186# STPO  =SQRT(ECR**2-(ECR-ISCALP)**2) * 2
  2187# $$
  2188# IF    (ISCALP 'GT' 0) PASES = INT(D3/STPO+.5) + 1
  2189# $$
  2190# STPO  =D3/PASES
  2191# TFRAD =STPO/3
  2192# IF    (VOCABF(IFIL) 'EQ' VOCABF(ON)) ARCSLP/FILLET,TFRAD,TOL/4
  2193# $$
  2194# INC   =1/(PASES-1)
  2195# $$
  2196#   DO /100,I=0,PASES-1
  2197#     DSF   =NSURF/(SPLINE/RSF,1,INC*I,200),(SPLINE/ORSF,1,INC*I,200)
  2198#     DNTCUT
  2199#     GODLTA/(PNTVEC/CVEC,TIMES,-HDIA)
  2200#     DNTCUT/NOMORE
  2201#     THICK /PTH,0,-COR
  2202#     INDIRV/CVEC
  2203#     GO    /ON,DSF[0,0],RSF,BCV1,FD
  2204#     INDIRV/CVEC
  2205#     TLON
  2206#     GOFWD/DSF,TCV1
  2207#     IF (I 'NE' (PASES-1)) THEN
  2208#       I     =I+1
  2209#       DSF   =NSURF/(SPLINE/RSF,1,INC*I,200),(SPLINE/ORSF,1,INC*I,200)
  2210#       ON    /ERROR,THEN,ID1,NOWARN
  2211#       INDIRV/CVEC
  2212#       GO    /ON,DSF,RSF,TCV1
  2213#       JUMPTO/ID2
  2214# ID1:
  2215#       GO    /ON,DSF,(PLANE/(PNTVEC/TE,TLAXIS)),TCV1
  2216# ID2:
  2217#       ON    /ERROR,THEN,STOP
  2218#       INDIRV/(PNTVEC/CVEC,TIMES,-1)
  2219#       GOFWD /DSF,PAST,BCV1
  2220#     ENDIF
  2221# 100:  CONTIN
  2222# $$
  2223# GOUGCK/OFF
  2224# ARCSLP/FILLET,0
  2225#   IF (VOCABF(IRET) 'EQ' VOCABF(ON)) THEN
  2226#     RAPID
  2227#     GODLTA/CLR
  2228#   ENDIF
  2229# DRAFT /MODIFY,SHADE=ON
  2230# THICK /PTH,DTH,CTH
  2231# *SET  /DISPLY
  2232# TERMAC
  2233#
  2234# $$
  2235# $$ Macro to re-order curves for rib top macros
  2236# $$
  2237# getcv =macro/iisf,bcvn,tcvn,lcvn,rcvn
  2238# $$
  2239# $$ Define the edge curves
  2240# $$
  2241# call  /decvs,isf=iisf,onam=ecvv
  2242# if    (i 'eq' 1) jumpto/id1
  2243# if    (i 'eq' 5) jumpto/id2
  2244# $$
  2245# **wi
  2246# $$
  2247# $$ Input surface does not contain 4 edge curves
  2248# $$ Re-construct as a ruled surface
  2249# $$ Press <ENTER> to exit macro.
  2250# **pause
  2251# **win /close
  2252# **set /disply
  2253# erase /ecvv*
  2254# **reset/call
  2255# $$
  2256# id1:
  2257# $$
  2258# $$ Treat as a non-trimmed surface
  2259# $$
  2260# ecvv(1)=spline/iisf,1,0,200
  2261# ecvv(2)=spline/iisf,2,0,200
  2262# ecvv(3)=spline/iisf,3,0,200
  2263# ecvv(4)=spline/iisf,4,0,200
  2264# $$
  2265# id2:
  2266# $$
  2267# pp1   =pt/on,ecvv(1),0
  2268# pp2   =pt/on,ecvv(1),1
  2269# pvv1  =pv/pp1,pp2
  2270# pvv2  =pv/pp1,(ve/ta)
  2271# pvv3  =pv/pvv2,cross,pvv1
  2272# pvv4  =pv/pvv2,cross,pvv3
  2273# mxx1  =mx/pvv3,pvv4
  2274# $$
  2275# refsys/mxx1
  2276# $$
  2277# $$ Find bottom curve
  2278# $$
  2279# savd  =9999999
  2280# do    /10,i=1,4
  2281# pp1   =pt/on,ecvv(i),0
  2282# pp2   =pt/on,ecvv(i),1
  2283# obtain/pp1,,,z1
  2284# obtain/pp2,,,z2
  2285# dd1   =z1+z2
  2286# if    (dd1 'lt' savd) savd=dd1 ; savi1=i
  2287# 10: contin
  2288# $$
  2289# bcvn  =spline/ecvv(savi1)
  2290# $$
  2291# $$ Find top curve
  2292# $$
  2293# savd  =-999999
  2294# do    /20,i=1,4
  2295# pp1   =pt/on,ecvv(i),0
  2296# pp2   =pt/on,ecvv(i),1
  2297# obtain/pp1,,,z1
  2298# obtain/pp2,,,z2
  2299# dd1   =z1+z2
  2300# if    (dd1 'gt' savd) savd=dd1 ; savi2=i
  2301# 20: contin
  2302# $$
  2303# tcvn  =spline/ecvv(savi2)
  2304# $$
  2305# $$
  2306# $$ Find remaining curves
  2307# a     =0
  2308# b     =0
  2309# $$
  2310# if (savi1 'eq' 1 'or' savi2 'eq' 1) a=1
  2311# if (savi1 'eq' 2 'or' savi2 'eq' 2) b=2
  2312# if (a 'eq' 1 'and' b 'eq' 2) savi3=3 ; savi4=4
  2313# $$
  2314# if (savi1 'eq' 1 'or' savi2 'eq' 1) a=1
  2315# if (savi1 'eq' 3 'or' savi2 'eq' 3) b=3
  2316# if (a 'eq' 1 'and' b 'eq' 3) savi3=2 ; savi4=4
  2317# $$
  2318# if (savi1 'eq' 1 'or' savi2 'eq' 1) a=1
  2319# if (savi1 'eq' 4 'or' savi2 'eq' 4) b=4
  2320# if (a 'eq' 1 'and' b 'eq' 4) savi3=2 ; savi4=3
  2321# $$
  2322# if (savi1 'eq' 2 'or' savi2 'eq' 2) a=2
  2323# if (savi1 'eq' 3 'or' savi2 'eq' 3) b=3
  2324# if (a 'eq' 2 'and' b 'eq' 3) savi3=1 ; savi4=4
  2325# $$
  2326# if (savi1 'eq' 2 'or' savi2 'eq' 2) a=2
  2327# if (savi1 'eq' 4 'or' savi2 'eq' 4) b=4
  2328# if (a 'eq' 2 'and' b 'eq' 4) savi3=1 ; savi4=3
  2329# $$
  2330# if (savi1 'eq' 3 'or' savi2 'eq' 3) a=3
  2331# if (savi1 'eq' 4 'or' savi2 'eq' 4) b=4
  2332# if (a 'eq' 3 'and' b 'eq' 4) savi3=1 ; savi4=2
  2333# $$
  2334# $$ Determine left and right curves and cut direction
  2335# $$
  2336# pp1   =pt/on,bcvn,.5
  2337# pp2   =pt/on,tcvn,.5
  2338# obtain/pp1,x1,y1
  2339# obtain/pp2,x2,y2
  2340# pp1   =pt/x1,y1,z1
  2341# pp2   =pt/x2,y2,z1
  2342# pvv1  =pv/unit,(pv/pp1,pp2)
  2343# obtain/pvv1,,,,i1,j1
  2344# $$
  2345# if    (abs(i1) 'gt' abs(j1) 'and' i1 'gt' 0) cdir = data/posx
  2346# if    (abs(i1) 'gt' abs(j1) 'and' i1 'lt' 0) cdir = data/negx
  2347# if    (abs(j1) 'gt' abs(i1) 'and' j1 'gt' 0) cdir = data/posy
  2348# if    (abs(j1) 'gt' abs(i1) 'and' j1 'lt' 0) cdir = data/negy
  2349# $$
  2350# revers/ecvv(savi3),cdir
  2351# revers/ecvv(savi4),cdir
  2352# pp1   =pt/on,ecvv(savi3),0
  2353# pp2   =pt/on,ecvv(savi4),0
  2354# $$
  2355# pvv2  =pv/unit,(pv/pp1,pp2)
  2356# pvv3  =pv/unit,(pv/pvv1,cross,pvv2)
  2357# obtain/pvv3,,,,,,k1
  2358# $$
  2359# if (k1 'gt' 0) rename/ecvv(savi3),rcvn;rename/ecvv(savi4),lcvn
  2360# if (k1 'lt' 0) rename/ecvv(savi4),rcvn;rename/ecvv(savi3),lcvn
  2361# $$
  2362# refsys/nm
  2363# erase /ecvv*
  2364# termac
  2365#
  2366# $$
  2367# $$ Macro to whittle away material in a corner left by a previous
  2368# $$ cutter.
  2369# $$
  2370# WITL  =MACRO/IPT,IRSF,ILSF,IBPL,ITPL,ITMOD=SAME,ISTPO=0,ISTPD=-1,$
  2371#             ISTR=DOWN,IRET=OFF,ISDIA=SDIA,ICRAD=CRAD
  2372# PROMPT/WITL,"MOTION","Whittle Away Material From Corner"
  2373# PROMPT/IPT,      "Select A Point Near The Corner",PT
  2374# PROMPT/IRSF,     "Select Right Surface",PLANE,SURF,CURVE,LINE,CIRCLE
  2375# PROMPT/ILSF,     "Select Left Surface",PLANE,SURF,CURVE,LINE,CIRCLE
  2376# PROMPT/IBPL,     "Select Bottom Plane",PLANE
  2377# PROMPT/ITPL,     "Select Top Plane",PLANE
  2378# PROMPT/ITMOD,    "Select Tool Axis Mode",SAME,FAN
  2379# PROMPT/ISTPO,    "Enter Step Over Distance"
  2380# PROMPT/ISTPD,    "Depth Of Cut (+) Or # Of Levels(-)"
  2381# PROMPT/ISTR,     "Starting Location",UP,DOWN
  2382# PROMPT/IRET,     "Retract ON/OFF",ON,OFF
  2383# PROMPT/ISDIA,    "Enter Start Diameter"
  2384# PROMPT/ICRAD,    "Enter Desired Corner Fillet Radius"
  2385# *RESET/DISPLY
  2386# OBTAIN/THICK,PTH,DTH,CTH
  2387# OBTAIN/TOLER,TOL
  2388# ZSURF /NOMORE
  2389# $$
  2390#   IF (TYPE(IPT) 'NE' 7) THEN
  2391# **WIN
  2392# $$
  2393# $$  Entity picked is not a point.
  2394# $$  Press <ENTER> to exit macro.
  2395# $$
  2396# **PAUSE
  2397# **WIN /CLOSE
  2398# **RESET/CALL
  2399#   ENDIF
  2400#   IF (VOCABF(ITMOD) 'EQ' VOCABF(SAME)) THEN
  2401#     IF (TYPE(IRSF) 'GE' 9 'AND' TYPE(IRSF) 'LE' 13) THEN
  2402#       IF ('NOT' (TYPE(ILSF) 'GE' 9 'AND' TYPE(ILSF) 'LE' 13)) THEN
  2403# **WIN
  2404# $$
  2405# $$  Left side entity picked is not a correct type.
  2406# $$  Press <ENTER> to exit macro.
  2407# $$
  2408# **PAUSE
  2409# **WIN /CLOSE
  2410# **RESET/CALL
  2411#       ENDIF
  2412#     ELSE
  2413# **WIN
  2414# $$
  2415# $$  Right side entity picked is not a correct type.
  2416# $$  Press <ENTER> to exit macro.
  2417# $$
  2418# **PAUSE
  2419# **WIN /CLOSE
  2420# **RESET/CALL
  2421#     ENDIF
  2422#   ELSE IF (TYPE(IRSF) 'EQ' 10 'OR' TYPE(IRSF) 'EQ' 13) THEN
  2423#     IF ('NOT' (TYPE(ILSF) 'EQ' 10 'OR' TYPE(ILSF) 'EQ' 13) THEN
  2424# **WIN
  2425# $$
  2426# $$  Left side entity picked is not a correct type.
  2427# $$  Press <ENTER> to exit macro.
  2428# $$
  2429# **PAUSE
  2430# **WIN /CLOSE
  2431# **RESET/CALL
  2432#     ENDIF
  2433#   ELSE
  2434# **WIN
  2435# $$
  2436# $$  Right side entity picked is not a correct type.
  2437# $$  Press <ENTER> to exit macro.
  2438# $$
  2439# **PAUSE
  2440# **WIN /CLOSE
  2441# **RESET/CALL
  2442#   ENDIF
  2443#   DNTCUT
  2444#   PVTE  =PNTVEC/TE,TLAXIS
  2445#   PVFW  =PNTVEC/TE,FWD
  2446#   GOTO  /IPT
  2447#   DNTCUT/NOMORE
  2448#   IF (ICRAD 'LT' HDIA) THEN
  2449# **WIN
  2450# $$
  2451# $$  Corner radius specified is smaller than cutter radius.
  2452# $$  Change the corner fillet radius and try again.
  2453# $$  Press <ENTER> to exit macro.
  2454# $$
  2455# **PAUSE
  2456# **WIN /CLOSE
  2457# **RESET/CALL
  2458#  ENDIF
  2459# ATEMP =ISDIA-ICRAD*2
  2460#   IF (ATEMP 'LT' 0) THEN
  2461# **WIN
  2462# $$
  2463# $$  Corner radius specified is too big.
  2464# $$  Change the corner fillet radius and try again.
  2465# $$  Press <ENTER> to exit macro.
  2466# $$
  2467# **PAUSE
  2468# **RUN
  2469# **WIN  /CLOSE
  2470# **RESET/CALL
  2471# ELSE IF (ATEMP 'EQ' 0) THEN
  2472# **WIN
  2473# $$
  2474# $$  Corner radius is already at specification.
  2475# $$  Press <ENTER> to exit macro.
  2476# $$
  2477# **PAUSE
  2478# **RUN
  2479# **WIN  /CLOSE
  2480# **RESET/CALL
  2481#   ENDIF
  2482#   IF (ISDIA-ICRAD*2-(TOL*15) 'LE' 0) THEN
  2483#     STDIA1=ISDIA+(TOL*15)
  2484#   ELSE
  2485#     STDIA1=ISDIA
  2486#   ENDIF
  2487# $$
  2488# IF    (ICRAD-HDIA 'LT' TOL) ICRAD=HDIA
  2489# CRF1  =ICRAD-HDIA
  2490# IF    (CRF1 'LT' 0) CRF1 =0
  2491# DIAS  =STDIA1+(DTH*2)
  2492# DIAE  =DIA+((DTH+CRF1)*2)
  2493# $$
  2494# SPTT  =POINT/TE
  2495# DNTCUT
  2496# OBTAIN/TOLER,TOL
  2497# CUTTER/PSEUDO,DIAS,COR,HGT+(TOL*2)
  2498# GO    /TO,IRSF,IBPL,TO,ILSF
  2499# PP1   =POINT/TE
  2500# GODLTA/ITPL
  2501# DEPTO1=DIST/PP1,ITPL
  2502#   IF (ISTPD 'LT' 0) THEN
  2503#     NUM2=INT(ABS(ISTPD))
  2504#   ELSE IF (ISTPD 'EQ' 0) THEN
  2505#     NUM2 = 1
  2506#   ELSE IF (ISTPD 'LT' DEPTO1) THEN
  2507#     NUM2=NINT(DEPTO1/ISTPD+.5)
  2508#   ELSE
  2509#     NUM2=1
  2510#   ENDIF
  2511#   DINC=DEPTO1/NUM2
  2512# $$
  2513# PFLAG =1
  2514# $$
  2515#   DO /100, J=(NUM2-1),0,-1
  2516#     IF (VOCABF(ITMOD) 'EQ' VOCABF(FAN)) TLAXIS/TANTO,DS,COR,FAN
  2517#     WIDPTH=DINC*J+PTH
  2518#     THICK /WIDPTH,DTH
  2519#     DNTCUT
  2520#     GOTO  /SPTT
  2521#     DIV   =5
  2522#     INC   =(DIAS-DIAE)/(DIV-1)
  2523#     DO /200,I=0,DIV-1
  2524#       DIAC  =DIAS-(INC*I)
  2525#       CUTTER/PSEUDO,DIAC,COR,HGT+(TOL*2)
  2526#       GOTO  /SPTT
  2527#       GO    /TO,IRSF,IBPL,TO,ILSF
  2528#       KPT(I+1)=POINT/TE
  2529# 200: CONTIN
  2530#     KCV   =CURVE/FIT,KPT(1),THRU,KPT(DIV)
  2531#     D1    =DIST/KCV
  2532#     D1    =(D1-(DIAS/2))+(DIAE/2)
  2533#     IF (ISTPO 'LE' 0 'OR' ISTPO 'GT' DIA) THEN
  2534#       NUM1  =NINT(D1/(DIA*.1))
  2535#     ELSE
  2536#       NUM1  =NINT(D1/ISTPO)
  2537#     ENDIF
  2538#     IF    (NUM1 'LT' 1) NUM1 = 1
  2539#     PASES =NUM1+1
  2540#     D2    =DIAS-DIAE
  2541#     INC   =D2/NUM1
  2542#    CALL  /GETCI
  2543# $$
  2544#     CUTTER/PSEUDO,DIA,COR,HGT,CANG
  2545#     THICK /WIDPTH,DTH
  2546#     IF (VOCABF(ISTR) 'EQ' VOCABF(UP)) THEN
  2547#       DNTCUT
  2548#       TLAXIS/VTA(1)
  2549#       GOTO  /(POINT/CENTER,WIC(1))
  2550#       MIDVE =VECTOR/UNIT,(VECTOR/(POINT/CENTER,WIC(2)),$
  2551#                                  (POINT/CENTER,WIC(1)))
  2552#       GODLTA/(VECTOR/MIDVE,TIMES,(TOL*10))
  2553#       MIDLN =LINE/(POINT/CENTER,WIC(2)),(POINT/CENTER,WIC(1))
  2554#       GO    /ON,MIDLN,IBPL,TO,WIC(1)
  2555#       PP1   =POINT/TE
  2556#       IF (PFLAG 'EQ' 1) THEN
  2557#         GODLTA/CLR
  2558#         STPL=PLANE/ITPL
  2559#       ELSE
  2560#         GODLTA/NTPL
  2561#       ENDIF
  2562#       NTPL  =PLANE/STPL
  2563#       STPL  =PLANE/PP1,PERPTO,VTA(1)
  2564#       PFLAG =0
  2565#       RAPID
  2566#       CUT
  2567#       FEDRAT/AT,(TOL*100),FD/2,ONCE
  2568#       RAPID
  2569#       GOTO  /PP1
  2570#       PSIS  /IBPL
  2571#       INDIRV/(VECTOR/VTA(1),CROSS,MIDVE)
  2572#       TLLFT
  2573#       GOFWD /WIC(1),ON,RPL(1),FD
  2574# $$
  2575#       IF (CRF1 'EQ' 0) PASES=PASES-1
  2576#       DO /300,I=2,PASES
  2577#         A     =I-1
  2578#         TLAXIS/VTA(A)
  2579#         MIDLN =LINE/(POINT/CENTER,WIC(A)),(POINT/CENTER,WIC(I))
  2580#         GOFWD/IRSF,ON,RPL(I)
  2581#         GOFWD/WIC(I),ON,LPL(I)
  2582#         GOFWD/ILSF,ON,LPL(A)
  2583#         GOFWD/WIC(A),ON,MIDLN
  2584#         IF (I 'EQ' PASES) UNDO
  2585#         GOFWD/WIC(A),ON,RPL(A)
  2586# 300: CONTIN
  2587#       IF (CRF1 'LE' 0) THEN
  2588#         GOFWD/WIC(A),ON,RPL(A)
  2589#         GOFWD/IRSF,ON,RPL(PASES+1)
  2590#         GOLFT/ILSF,ON,LPL(PASES)
  2591#         GOFWD/WIC(PASES),ON,MIDLN
  2592#       ENDIF
  2593#     ELSE
  2594# $$
  2595# $$ Start with tool down at current tool location.
  2596# $$
  2597#       DNTCUT
  2598#       GOTO  /PVTE
  2599#       DNTCUT/NOMORE
  2600#       INDIRV/PVFW
  2601#       PSIS  /IBPL
  2602#       IF    (VOCABF(ITMOD) 'EQ' VOCABF(FAN)) TA/TANTO,DS,COR,FAN
  2603#       TLLFT
  2604#       FEDRAT/FD
  2605#       IF    (CRF1 'EQ' 0) PASES=PASES-1
  2606#       DO /400,I=2,PASES
  2607#         A     =I-1
  2608#         TLAXIS/VTA(A)
  2609#         MIDLN =LINE/(POINT/CENTER,WIC(A)),(POINT/CENTER,WIC(I))
  2610#         GOFWD/IRSF,ON,RPL(I)
  2611#         GOFWD/WIC(I),ON,LPL(I)
  2612#         GOFWD/ILSF,ON,LPL(A)
  2613#         IF (I 'EQ' PASES) UNDO
  2614#         GOFWD/WIC(A),ON,MIDLN
  2615#         GOFWD/WIC(A),ON,RPL(A)
  2616# 400: CONTIN
  2617#       IF (CRF1 'LE' 0) THEN
  2618#         GOFWD/WIC(A),ON,MIDLN
  2619#         GOFWD/WIC(A),ON,RPL(A)
  2620#         GOFWD/IRSF,ON,RPL(PASES+1)
  2621#         GOLFT/ILSF,ON,LPL(PASES)
  2622#       ENDIF
  2623#     ENDIF
  2624# $$
  2625# 100: CONTIN
  2626# THICK /PTH,DTH
  2627#   IF (VOCABF(IRET) 'EQ' VOCABF(ON)) THEN
  2628#     RAPID
  2629#     GODLTA/CLR
  2630#   ENDIF
  2631# $$
  2632# *SET  /DISPLY
  2633# TERMAC
  2634#
  2635#
  2636# $$
  2637# $$ Macro used with WITL macro
  2638# $$
  2639# GETCI =MACRO/PSF=IBPL,RSF1=IRSF,LSF1=ILSF
  2640# PROMPT/GETCI,"None"," "
  2641#   DO /10,I=0,NUM1
  2642#     A     =I+1
  2643#     OBTAIN/TOLER,TOL
  2644#     CUTTER/PSEUDO,(DIAS-(INC*I)),COR,HGT+(TOL*2)
  2645#     OBTAIN/CUTTER,RAD
  2646#     RAD   =RAD/2
  2647#     GOTO  /SPTT
  2648#     THICK /WIDPTH,0,INC
  2649#     GO    /TO,RSF1,PSF,TO,LSF1
  2650#     THICK /WIDPTH,0
  2651#     TLLFT
  2652#     GOFWD /RSF1,TO,LSF1
  2653#     VV1   =VECTOR/FWD
  2654#     PP1   =POINT/TE
  2655#     VTA(A)=VECTOR/TLAXIS
  2656#     WIC(A)=CIRCLE/CANON,PP1,VTA(A),RAD
  2657#     OBTAIN/(VECTOR/VV1,CROSS,VTA(A)),I1,J1,K1
  2658#     OBTAIN/VTA(A),I2,J2,K2
  2659#     PP1A  =POINT/PP1,I1,J1,K1
  2660#     PP1B  =POINT/PP1,I2,J2,K2
  2661#     RPL(A)=PLANE/PP1,PP1A,PP1B
  2662#     GOTO  /SPTT
  2663#     THICK /WIDPTH,0,INC
  2664#     GO    /TO,LSF1,PSF,TO,RSF1
  2665#     THICK /WIDPTH,0
  2666#     TLRGT
  2667#     GORGT /LSF1,TO,RSF1
  2668#     PP1   =POINT/TE
  2669#     VV1   =VECTOR/FWD
  2670#     OBTAIN/(VECTOR/VV1,CROSS,VTA(A)),I1,J1,K1
  2671#     OBTAIN/VTA(A),I2,J2,K2
  2672#     PP1A  =POINT/PP1,I1,J1,K1
  2673#     PP1B  =POINT/PP1,I2,J2,K2
  2674#     LPL(A)=PLANE/PP1,PP1A,PP1B
  2675# 10: CONTIN
  2676# TERMAC
  2677#
  2678# $$
  2679# $$ Macro to establish a new working coordinate system
  2680# $$
  2681# WORKPL=MACRO/IMX,ITPL,ICLR=(TOLR*1000)
  2682# PROMPT/WORKPL,"Geometry","Define New Work Plane"
  2683# PROMPT/IMX, "Enter Name Of New Coordinate System"
  2684# PROMPT/ITPL,"Select Plane At Top Of Part",PLANE
  2685# PROMPT/ICLR,"Enter Clearance Distance From Top"
  2686# MODSYS/IMX
  2687# DISPLY/IMX
  2688# $$
  2689# *RESET/DISPLY,POINT,VECTOR,PLANE
  2690# P0    =POINT/0,0
  2691# PLX   =PLANE/1,0,0,0
  2692# PLY   =PLANE/0,1,0,0
  2693# PLZ   =PLANE/0,0,1,0
  2694# $$
  2695# VPX   =VECTOR/1,0,0
  2696# VPY   =VECTOR/0,1,0
  2697# VPZ   =VECTOR/0,0,1
  2698# VNX   =VECTOR/-1,0,0
  2699# VNY   =VECTOR/0,-1,0
  2700# VNZ   =VECTOR/0,0,-1
  2701# $$
  2702# CLR   =PLANE/PARLEL,ITPL,ZLARGE,ICLR
  2703# *SET/DISPLY,POINT,VECTOR,PLANE
  2704# $$
  2705# TERMAC
  2706#
  2707#
  2708# $$
  2709# $$ Calculates RPM's and Feedrates.
  2710# $$
  2711# FEDSP =MACRO/ISSPD=0,INTH=2,ICHPL=.005
  2712# PROMPT/FEDSP,"Miscellaneous","Calculate RPM And Feedrate"
  2713# PROMPT/ISSPD,   "Surface Feet Per Min",0.1,9999
  2714# PROMPT/INTH,4,0,"Number Of Teeth",1,9999
  2715# PROMPT/ICHPL,   "Chip Load Per Tooth"
  2716# $$
  2717# RPMS = NINT((12*ISSPD)/(3.1416*DIA))
  2718# IF   (RPMS 'GT' MRPM) RPMS=MRPM
  2719# FD   = NINT(RPMS * ICHPL * INTH)
  2720# TERMAC
  2721#
  2722# $$
  2723# $$ Macro calculates depth for C'drill to go and leaves a 0.01
  2724# $$ chamfer on hole. Creates "DPTH" scalar for CYCLE statement.
  2725# $$
  2726# CDRIL =MACRO/IDIA,ISIZE
  2727# PROMPT/CDRIL,"Cycle","Center Drill Depth Calculation"
  2728# prompt /IDIA,"Enter Desired Hole Diameter"
  2729# prompt /ISIZE,"Enter Center Drill Size #",1,8
  2730# %
  2731# % SHANK SIZE;  TIP SIZE   ; TIP LENGTH  ; ANG. LENGTH
  2732# %
  2733# SIZA(1)=.125;SIZB(1)=.0469;SIZC(1)=.0609;SIZD(1)=.0675 $$  #1
  2734# SIZA(2)=.187;SIZB(2)=.0781;SIZC(2)=.1011;SIZD(3)=.0947 $$  #2
  2735# SIZA(3)=.250;SIZB(3)=.1093;SIZC(3)=.1423;SIZD(3)=.1217 $$  #3
  2736# SIZA(4)=.312;SIZB(4)=.1250;SIZC(4)=.1630;SIZD(4)=.1622 $$  #4
  2737# SIZA(5)=.437;SIZB(5)=.1875;SIZC(5)=.2435;SIZD(5)=.2165 $$  #5
  2738# SIZA(6)=.500;SIZB(6)=.2187;SIZC(6)=.2847;SIZD(6)=.2435 $$  #6
  2739# SIZA(7)=.625;SIZB(7)=.2500;SIZC(7)=.3250;SIZD(7)=.3247 $$  #7
  2740# SIZA(8)=.750;SIZB(8)=.3125;SIZC(8)=.4065;SIZD(8)=.3787 $$  #8
  2741# $$
  2742# CDIA = IDIA + .020  $$ HOLE DIA PLUS .020
  2743# $$
  2744# DPTH = ((CDIA-SIZB(ISIZE))/1.1547)+SIZC(ISIZE)
  2745# $$
  2746# TERMAC
  2747#
  2748# $$
  2749# $$ Macro for drilling holes (Old style CYCLE statements)
  2750# $$
  2751# DRIL  =MACRO/IPT,IMOD,IDEP=0,IFED=FD,IRAP=(TOLR*100),IPECK=HDIA,$
  2752#              ITHRU=OFF,IRET=OFF,IPOSS=ON,IRETT=ON
  2753# PROMPT/DRIL,"Cycle","Cycle Macro"
  2754# PROMPT/IPT,  "Pick A point, Point-Vec or Pattern",POINT,PNTVEC,PATERN
  2755# PROMPT/IMOD, "Cycle Mode",DRILL,FACE,THRU,DEEP,BORE,REAM,TAP
  2756# PROMPT/IDEP, "Depth Of Hole"
  2757# PROMPT/IFED, "Feedrate"
  2758# PROMPT/IRAP, "Rapid To Distance"
  2759# PROMPT/IPECK,"Peck Distance"
  2760# PROMPT/ITHRU,"Through Hole",ON,OFF
  2761# PROMPT/IRET, "RETRCT Condition",ON,OFF
  2762# PROMPT/IPOSS,"Position From CLR At First Point",ON,OFF
  2763# PROMPT/IRETT,"Retract To CLR After Final Point",ON,OFF
  2764# OBTAIN/TOLER,TOL
  2765# $$
  2766#   IF ((TYPE(IPT) 'EQ' 7) 'OR' (TYPE(IPT) 'EQ' 24) 'OR'  $
  2767#       (TYPE(IPT) 'EQ' 25)) THEN
  2768#     D1    =IDEP
  2769# $$
  2770#     IF (VOCABF(ITHRU) 'EQ' VOCABF(ON)) THEN
  2771#       IF ((VOCABF(IMOD) 'EQ' VOCABF(THRU)) 'OR'   $
  2772#           (VOCABF(IMOD) 'EQ' VOCABF(DRILL))) THEN
  2773# $$
  2774# $$ ADD DRILL POINT TO DEPTH FOR DRILL AND THRU MODE
  2775# $$
  2776#         D1=IDEP+(.3*DIA)
  2777#       ELSE IF ((VOCABF(IMOD) 'EQ' VOCABF(REAM)) 'OR'  $
  2778#                (VOCABF(IMOD) 'EQ' VOCABF(BORE))) THEN
  2779# $$
  2780# $$ ADD TOL*50 TO DEPTH FOR REAM, BORE MODE
  2781# $$
  2782#         D1=IDEP+(TOL*50)
  2783#       ENDIF
  2784#     ENDIF
  2785#     IF (VOCABF(IRET) 'EQ' VOCABF(ON)) THEN
  2786#       RETRCT/ON
  2787#     ELSE
  2788#       RETRCT/OFF
  2789#     ENDIF
  2790# $$
  2791#     IF (TYPE(IPT) 'EQ' 24) THEN
  2792#       PP1=POINT/IPT,1
  2793#     ELSE
  2794#       PP1=POINT/IPT
  2795#     ENDIF
  2796# $$
  2797#     IF (VOCABF(IPOSS) 'EQ' VOCABF(ON)) THEN
  2798#       DNTCUT
  2799#       GOTO  /PP1
  2800#       GODLTA/CLR
  2801#       RAPID
  2802#       CUT
  2803#     ENDIF
  2804# $$
  2805#     IF ((VOCABF(IMOD) 'EQ' VOCABF(THRU)) 'OR'  $
  2806#         (VOCABF(IMOD) 'EQ' VOCABF(DEEP))) THEN
  2807#       CYCLE/IMOD,D1,IPECK,IFED,IPM,IRAP
  2808#     ELSE
  2809#       CYCLE/IMOD,D1,IFED,IPM,IRAP
  2810#     ENDIF
  2811#     GOTO  /IPT
  2812#     CYCLE /OFF
  2813# $$
  2814#     IF (VOCABF(IRETT) 'EQ' VOCABF(ON)) THEN
  2815#       RAPID
  2816#       GODLTA/CLR
  2817#     ENDIF
  2818#   ELSE
  2819# **WIN
  2820# $$
  2821# $$   Entity input is not a Point, Pntvec or Patern.
  2822# $$   Press <ENTER> to exit macro and try again.
  2823# $$
  2824# **PAUSE
  2825# **WIN /CLOSE
  2826# **RESET/CALL
  2827#   ENDIF
  2828# $$
  2829# TERMAC
  2830#
  2831# $$
  2832# $$ Rib Top: Inside fillet.
  2833# $$
  2834# RTIF  =MACRO/IBSF,IPAS=2,ISCALP=0,IDIR=LEFT,IPOS=ON,IRET=ON,$
  2835#              IFIL=OFF,IPMOD=OFF
  2836# PROMPT/RTIF,"Motion","Rib Top: Inside Fillet"
  2837# PROMPT/IBSF,      "Select Fillet Surface",SURF
  2838# PROMPT/IDIR,1,0,  "Enter Start Side",left,right
  2839# PROMPT/IPAS,3,0,  "Enter Number Of Passes",2,999
  2840# PROMPT/ISCALP,4,4,"Enter Scallop Height"
  2841# PROMPT/IPOS,      "Approach From Clearance Plane",ON,OFF
  2842# PROMPT/IRET,      "Retract To Clearance Plane",ON,OFF
  2843# PROMPT/IFIL,1,0,  "Fillet Traverse Moves",ON,OFF
  2844# PROMPT/IPMOD,     "Positioning Mode ON/OFF Of Part",OFF,ON
  2845# $$
  2846# *RESET/DISPLY
  2847# DRAFT /MODIFY,SHADE=OFF
  2848# OBTAIN/THICK,PTH,DTH,CTH
  2849# OBTAIN/TOLER,TOL
  2850# $$
  2851# CALL  /GETCV,IISF=IBSF,BCVN=BCV1,TCVN=TCV1,LCVN=LCV1,RCVN=RCV1
  2852#   IF (VOCABF(IDIR) 'EQ' VOCABF(RIGHT)) THEN
  2853#     IF ((VOCABF(IPOS)  'EQ' VOCABF(OFF)) 'OR'   $
  2854#         (VOCABF(IPMOD) 'EQ' VOCABF(ON))) THEN
  2855#       ODIR=-1
  2856#       RSF =NSURF/RCV1,LCV1
  2857#     ELSE
  2858#       ODIR=1
  2859#       RSF =NSURF/LCV1,RCV1
  2860#     ENDIF
  2861#   ELSE
  2862#     IF ((VOCABF(IPOS)  'EQ' VOCABF(OFF)) 'OR' $
  2863#        (VOCABF(IPMOD) 'EQ' VOCABF(ON))) THEN
  2864#       ODIR=1
  2865#       RSF =NSURF/LCV1,RCV1
  2866#     ELSE
  2867#       ODIR=-1
  2868#       RSF =NSURF/RCV1,LCV1
  2869#     ENDIF
  2870#   ENDIF
  2871# ORSF  =SURF/OFFSET,RSF,(VE/TA),COR+PTH
  2872# $$
  2873# CVV1  =SPLINE/RSF,3,0
  2874# CVV2  =SPLINE/RSF,1,0
  2875# PP1   =POINT/ON,CVV1,0
  2876# DVEC  =PNTVEC/PP1,CVV1
  2877# CVEC  =PNTVEC/(POINT/ON,BCV1,.5),(POINT/ON,TCV1,0)
  2878# TVEC  =PNTVEC/PP1,(VECTOR/TLAXIS)
  2879# PVV1  =PNTVEC/UNIT,(PNTVEC/DVEC,CROSS,TVEC)
  2880# OVEC  =PNTVEC/PVV1,TIMES,(HDIA-COR)*ODIR
  2881# DVEC  =REVERS/DVEC
  2882# STPL  =PLANE/DVEC
  2883# $$
  2884# PASES =IPAS
  2885# D1    =DIST/BCV1
  2886# D2    =DIST/TCV1
  2887# IF    (D1 'GE' D2) D3=D1
  2888# IF    (D2 'GE' D1) D3=D2
  2889# ECR   =HDIA-COR
  2890# IF    (ECR 'EQ' 0) ECR=COR
  2891# STPO  =SQRT(ECR**2-(ECR-ISCALP)**2) * 2
  2892# $$
  2893# IF    (ISCALP 'GT' 0) PASES = INT(D3/STPO+.5) + 1
  2894# $$
  2895# STPO  =D3/PASES
  2896# INC   =1/(PASES-1)
  2897# OBTAIN/OVEC,,,,DX,DY,DZ
  2898# MXX1  =MX/TRANSL,DX,DY,DZ
  2899# OBTAIN/(PV/TVEC,TIMES,-1),,,,DX,DY,DZ
  2900# MXX2  =MX/TRANSL,DX*COR,DY*COR,DZ*COR
  2901# MXX3  =MX/MXX2,MXX1
  2902# IF ((HDIA-COR) 'EQ' 0) RENAME/MXX2,MXX3
  2903# $$
  2904# DNTCUT
  2905# DCV   =SPLINE/ORSF,1,0,200
  2906# MOVE  /DCV,MXX3
  2907# PP1   =POINT/ON,DCV,0
  2908# GOTO  /PP1
  2909#  IF (VOCABF(IPOS) 'EQ' VOCABF(ON)) THEN
  2910#    IF (VOCABF(IPMOD) 'EQ' VOCABF(OFF)) THEN
  2911#      SRFVCT/DVEC,CVEC
  2912#      THICK/0,(TOL*250),0
  2913#      GO/STPL,CLR,ON,   $
  2914#         (PLANE/(POINT/TE),PERPTO,STPL,(PLANE/PP1,PERPTO,TVEC))
  2915#      RAPID,CUT
  2916#      THICK/PTH+TOL*100,0
  2917#      RAPID
  2918#      GODLTA/RSF
  2919#      THICK/PTH,0
  2920#      GODLTA/RSF,FD
  2921#    ELSE
  2922#      GODLTA/CLR
  2923#      RAPID,CUT
  2924#      RAPID,GOTO/PP1
  2925#    ENDIF
  2926#   ENDIF
  2927# THICK /0
  2928# DNTCUT/NOMORE
  2929# FEDRAT/FD
  2930# TLON
  2931# TFRAD =STPO/3
  2932# IF    (VOCABF(IFIL) 'EQ' VOCABF(ON)) ARCSLP/FILLET,TFRAD,TOL/4
  2933# $$
  2934#   DO /100,I=0,PASES-1
  2935#     DCV   =SPLINE/ORSF,1,INC*I,200
  2936#     MOVE  /DCV,MXX3
  2937#     GOTO  /(POINT/ON,DCV,0)
  2938#     NOPS
  2939#     GOFWD /DCV
  2940#     IF (I 'NE' (PASES-1)) THEN
  2941#       I     =I+1
  2942#       DCV   =SPLINE/ORSF,1,INC*I,200
  2943#       MOVE  /DCV,MXX3
  2944#       REVERS/DCV
  2945#       GOTO  /(POINT/ON,DCV,0)
  2946#       NOPS
  2947#       GOFWD/DCV
  2948#     ENDIF
  2949# 100:  CONTIN
  2950# $$
  2951# ARCSLP/FILLET,0
  2952#   IF (VOCABF(IRET) 'EQ' VOCABF(ON)) THEN
  2953#     RAPID
  2954#     GODLTA/CLR
  2955#   ENDIF
  2956# DRAFT /MODIFY,SHADE=ON
  2957# *SET  /DISPLY
  2958# TERMAC
  2959#
  2960# $$
  2961# $$ Rib Top: Outside fillet
  2962# $$
  2963# RTOF  =MACRO/IBSF,IPAS=2,ISCALP=0,IDIR=LEFT,IPOS=ON,IRET=ON,IFIL=OFF
  2964# PROMPT/RTOF,"Motion","Rib Top: Outside Fillet"
  2965# PROMPT/IBSF,      "Select Fillet Surface",sf
  2966# PROMPT/IPAS,3,0,  "Enter Number Of Aasses",2,999
  2967# PROMPT/ISCALP,4,4,"Enter Scallop Height"
  2968# PROMPT/IDIR,1,0,  "Select Approach Side",LEFT,RIGHT
  2969# PROMPT/IPOS,      "Approach From Clearance Plane",ON,OFF
  2970# PROMPT/IRET,      "Retract To Clearance Plane",ON,OFF
  2971# PROMPT/IFIL,1,0,  "Fillet Traverse Moves",ON,OFF
  2972# $$
  2973# *RESET/DISPLY
  2974# DRAFT /MODIFY,SHADE=OFF
  2975# OBTAIN/THICK,PTH,DTH,CTH
  2976# OBTAIN/TOLER,TOL
  2977# $$
  2978# CALL  /GETCV,IISF=IBSF,BCVN=BCV1,TCVN=TCV1,LCVN=LCV1,RCVN=RCV1
  2979# $$
  2980#   IF (VOCABF(IDIR) 'EQ' VOCABF(LEFT)) THEN
  2981#     IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  2982#       ODIR=1
  2983#       RSF =NSURF/LCV1,RCV1
  2984#     ELSE
  2985#       ODIR=-1
  2986#       RSF =NSURF/RCV1,LCV1
  2987#     ENDIF
  2988#   ELSE IF (VOCABF(IPOS) 'EQ' VOCABF(OFF)) THEN
  2989#     ODIR=-1
  2990#     RSF =NSURF/RCV1,LCV1
  2991#   ELSE
  2992#     ODIR=1
  2993#     RSF =NSURF/LCV1,RCV1
  2994#   ENDIF
  2995# $$
  2996# CVV1  =SPLINE/RSF,3,0
  2997# CVV2  =SPLINE/RSF,1,0
  2998# PP1   =POINT/ON,CVV1,0
  2999# DVEC  =PNTVEC/PP1,CVV1
  3000# TVEC  =PNTVEC/PP1,(VECTOR/TA)
  3001# PVV1  =PNTVEC/UNIT,(PNTVEC/DVEC,CROSS,TVEC)
  3002# OVEC  =PNTVEC/PVV1,TIMES,(HDIA-COR)*ODIR
  3003# PVV2  =PV/UNIT,(PV/TVEC,MINUS,OVEC)
  3004# DVEC  =REVERS/DVEC
  3005# STPL  =PLANE/DVEC
  3006# ORSF  =SURF/OFFSET,RSF,PVV2,COR+PTH
  3007# $$
  3008# OBTAIN/OVEC,,,,DX,DY,DZ
  3009# MXX1  =MX/TRANSL,DX,DY,DZ
  3010# OBTAIN/(PV/TVEC,TIMES,-1),,,,DX,DY,DZ
  3011# MXX2  =MX/TRANSL,DX*COR,DY*COR,DZ*COR
  3012# MXX3  =MX/MXX2,MXX1
  3013# IF ((HDIA-COR) 'EQ' 0) RENAME/MXX2,MXX3
  3014# $$
  3015# DNTCUT
  3016# DCV   =SPLINE/ORSF,1,0,200
  3017# MOVE  /DCV,MXX3
  3018# PP1   =POINT/ON,DCV,0
  3019# GOTO  /PP1
  3020# IF    (VOCABF(IPOS) 'EQ' VOCABF(ON)) THEN
  3021#  GODLTA/(PNTVEC/DVEC,TIMES,-(HDIA+(TOL*250))
  3022#  PP1   =PT/TE
  3023#  GD    /(TOL*100)
  3024#  PP2   =PT/TE
  3025#  GD    /CLR
  3026#  RAPID,CUT
  3027#  RAPID,GOTO/PP2
  3028#  FEDRAT/FD
  3029#  GOTO/PP1
  3030# ELSE
  3031#  DNTCUT/NM
  3032#  FEDRAT/FD
  3033# ENDIF
  3034# $$
  3035# PASES =IPAS
  3036# D1    =DIST/BCV1
  3037# D2    =DIST/TCV1
  3038#   IF (D1 'GE' D2) THEN
  3039#     D3    =D1
  3040#   ELSE
  3041#     D3    =D2
  3042#   ENDIF
  3043# ECR   =HDIA-COR
  3044# STPO  =SQRT(ECR**2-(ECR-ISCALP)**2) * 2
  3045# $$
  3046# IF    (ISCALP 'GT' 0) PASES = INT(D3/STPO+.5) + 1
  3047# $$
  3048# STPO  =D3/PASES
  3049# TFRAD =STPO/3
  3050# OBTAIN/TOLER,TOL
  3051# IF    (VOCABF(IFIL) 'EQ' VOCABF(ON)) ARCSLP/FILLET,TFRAD,TOL/4
  3052# $$
  3053# INC   =1/(PASES-1)
  3054# $$
  3055# TLON
  3056# $$
  3057#   DO /100,I=0,PASES-1
  3058#     DCV   =SPLINE/ORSF,1,INC*I,200
  3059#     MOVE  /DCV,MXX3
  3060#     GOTO  /(POINT/ON,DCV,0)
  3061#     NOPS
  3062#     GOFWD/DCV
  3063#     IF (I 'NE' (PASES-1)) THEN
  3064#       I     =I+1
  3065#       DCV   =SPLINE/ORSF,1,INC*I,200
  3066#       MOVE  /DCV,MXX3
  3067#       REVERS/DCV
  3068#       GOTO  /(POINT/ON,DCV,0)
  3069#       NOPS
  3070#       GOFWD/DCV
  3071#     ENDIF
  3072# 100:  CONTIN
  3073# $$
  3074# ARCSLP/FILLET,0
  3075#   IF (VOCABF(IRET) 'EQ' VOCABF(ON)) THEN
  3076#     RAPID
  3077#     GODLTA/CLR
  3078#   ENDIF
  3079# DRAFT /MODIFY,SHADE=ON
  3080# THICK /PTH,DTH,CTH
  3081# *SET  /DISPLY
  3082# $$
  3083# TERMAC
  3084#
  3085: call/5axis,fofstx=0,$
  3086:            fofsty=0,$
  3087:            fofstz=0,$
  3088:            fofstb=0,$
  3089:            fofstc=0
    32# ttablx=fofstx
    33# ttably=fofsty
    34# ttablz=fofstz
    35# ttablb=fofstb
    36# ttablc=fofstc
    37#
    38# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    39# $$ SET UP MISC. STUFF WITH NOTES
    40# $$>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    41# $$----------------------------------------------------------------
    42# $$ 1: Calibrate machine per factory specs.
    43# $$----------------------------------------------------------------
    44# $$ GRIDX1 IS MEASURED FROM THE CL
    45# $$ OF THE C AXIS TO MACHINE X ZERO
    46# GRIDX1=-(189.384-19.969)/25.4
    47# $$-------------------------
    48# $$ GRIDX2 IS MEASURED FROM THE CL
    49# $$ OF THE B AXIS TO MACHINE X ZERO
    50# GRIDX2=-189.384/25.4
    51# $$-------------------------
    52# $$ GRIDY1 IS MEASURED FROM THE PIVOT POINT
    53# $$ OF THE C AXIS TO MACHINE Y ZERO
    54# GRIDY1=196.370/25.4
    55# $$-------------------------
    56# $$ GRIDZ1 IS MEASURED FROM THE CL
    57# $$ OF THE C AXIS TO MACHINE Z ZERO
    58# GRIDZ1=0
    59# $$-------------------------
    60# $$ GRIDZ2 IS MEASURED FROM THE CL
    61# $$ OF THE B AXIS TO MACHINE Z ZERO
    62# GRIDZ2=484.692/25.4
    63# $$-------------------------------------------
    64# $$ ROTABL/ORIGIN,AXIS,1,0,0,0    C AXIS NEEDS X AND Y
    65# $$ ROTABL/ORIGIN,AXIS,2,0,0,0    B AXIS NEEDS X AND Z
    66# $$----------------------------------------------
    67# $$ NOTE:THE FOLLOWING DEFINES B AXIS AND C AXIS
    68# $$      AXIS 1 REQUIRES 0 FOR Z POSITION
    69# $$      AXIS 2 REQUIRES 0 FOR Y POSITION
    70# $$----------------------------------------------
    71# $$ NOTE: C AXIS NEED X AND Y
    72#       ROTABL/ORIGIN,AXIS,1,$
    73#              -GRIDX1-fofstx,$
    74#              -GRIDY1-fofsty,$
    75#              0
    76# $$------------------------------------
    77# $$ NOTE: B AXIS NEED X AND Z
    78# ROTABL/ORIGIN,AXIS,2,$
    79#               -GRIDX2-fofstx,$
    80#               0,$
    81#               -GRIDZ2-fofstz
    82# $$------------------------------------
    83# %CHECK/XAXIS,-(350/25.4),$
    84# %             (350/25.4),$
    85# %      YAXIS,-(200/25.4),$
    86# %             (200/25.4),$
    87# %      ZAXIS,-999.9999,$
    88# %             999.9999,$
    89# %      AXIS,1,-99999.,99999.,$
    90# %      AXIS,2,-99999.,99999.
    91# $$------------------------------------
    92#
    93# oset=format("%02.0f",fofstn)
    94# INSERT(-------------------------)
    95# insertG10L20P@OSET X@TTABLX Y@TTABLY Z@TTABLZ B@TTABLB C@TTABLC
    96# INSERT(-------------------------)
    97#
    98# STOP
    99: termac
  3090: %
  3091: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  3092: CALL/TLCHG,TLNO=1,RPM1=1000,DIA1=1,COR1=0
   106# TLNOV = TLNO
   107# OFNOV = OFNO
   108# DIA   = DIA1
   109# COR   = COR1
   110# HDIA  = DIA/2
   111# CDC   = TLNO
   112# CUTTER/DIA,COR,COR
   113# CUTTER/DISPLY,MOVE,ON
   114#
   115# IF    (FIRST1) TD1, TD1, TD2
   116# TD1:                        $$ TD1 section for 1st tool only
   117#     %SELCTL/TLNO,MODIFY      $$ SET INTERNALLY, OUTPUT NOTHING
   118#     FIRST1=1                $$ change value for first tool change
   119#     JUMPTO/TD5  $$ ----------  1st tool only jumps to TD5
   131# TD5:
   132#       LOADTL/TLNO
   133# $$>>>>>>>>>>
   134# IF(MSG-1)MSG1B,MSG1A,MSG1B
   137# MSG1B:
   138#
   139# IF(MSG-2)MSG2B,MSG2A,MSG2B
   142# MSG2B:
   143#
   144# IF(MSG-3)MSG3B,MSG3A,MSG3B
   147# MSG3B:
   148#
   149# IF(MSG-4)MSG4B,MSG4A,MSG4B
   152# MSG4B:
   153#
   154# IF(MSG-5)MSG5B,MSG5A,MSG5B
   157# MSG5B:
   158#
   159# IF(MSG-6)MSG6B,MSG6A,MSG6B
   163# MSG6B:
   164#
   165# MSG99:
   166# $$>>>>>>>>>>
   167#       IF (STOP1)TD7,TD7,TD6
   168# TD6:
   169# OPSTOP
   170# TD7:
   171# $$-------------------------------
   172# $$ CHECK FOR TOOL WITH "0" RPM
   173# $$ SUCH AS PROBE
   174# $$-------------------------------
   175# If (RPM1 'EQ' 0) Then
   176# Else if(RPM1 'NE' 0) Then
   177#     SPINDL/RPM1
   178# Endif
   179# $$-------------------------------
   180#       CUTCOM/ADJUST,OFNO         $$ (1-48) or (54-59)
   181# %INSERTG54.4P1
   182#       %SELCTL/AUTO,NOW
   183#       TOOLNO/ADJUST,TLNO,NEXT
   184#       JUMPTO/TD11
   198# TD11:
   199: TERMAC
  3093: cu/dia,cor,1
  3094: fr/(fd=20)
  3095: %
  3096: pprint NON-REVERSED MOTION
  3097: %
  3098: coolnt/flood
  3099: insertG5.1Q1
            x           y           z           i           j           k
          5.0000      5.0000      5.0000    0.000000    0.000000    1.000000
  3100: from/(pt/5,5,5)
  3101: %
  3102: do/lbl1,i=1,3,incr,1
  3103: srfvct/(ve/1,0,0),(ve/0,1,0)
  3104: th/0,.1
  3105: rp,go/PL1,clr,PL3
  3106: rp,gd/plz
  3107: th/0
  3108: cutcom/left,xyplan,1
  3109: go/PL1,plz
  3110: tl,gl/pl1,past,PL2
  3111: cutcom/off
  3112: gd/(ve/-.05,0,0)
  3113: rp,gd/clr
  3114: lbl1:contin
  3103: srfvct/(ve/1,0,0),(ve/0,1,0)
  3104: th/0,.1
            x           y           z           i           j           k
         -0.6000     -1.6000      1.0000    0.000000    0.000000    1.000000
  3105: rp,go/PL1,clr,PL3
            x           y           z           i           j           k
         -0.6000     -1.6000      0.0000    0.000000    0.000000    1.000000
  3106: rp,gd/plz
  3107: th/0
  3108: cutcom/left,xyplan,1
            x           y           z           i           j           k
         -0.5000     -1.6000      0.0000    0.000000    0.000000    1.000000
  3109: go/PL1,plz
            x           y           z           i           j           k
   1     -0.5000      1.5000      0.0000    0.000000    0.000000    1.000000
  3110: tl,gl/pl1,past,PL2
  3111: cutcom/off
            x           y           z           i           j           k
         -0.5500      1.5000      0.0000    0.000000    0.000000    1.000000
  3112: gd/(ve/-.05,0,0)
            x           y           z           i           j           k
         -0.5500      1.5000      1.0000    0.000000    0.000000    1.000000
  3113: rp,gd/clr
  3114: lbl1:contin
  3103: srfvct/(ve/1,0,0),(ve/0,1,0)
  3104: th/0,.1
            x           y           z           i           j           k
         -0.6000     -1.6000      1.0000    0.000000    0.000000    1.000000
  3105: rp,go/PL1,clr,PL3
            x           y           z           i           j           k
         -0.6000     -1.6000      0.0000    0.000000    0.000000    1.000000
  3106: rp,gd/plz
  3107: th/0
  3108: cutcom/left,xyplan,1
            x           y           z           i           j           k
         -0.5000     -1.6000      0.0000    0.000000    0.000000    1.000000
  3109: go/PL1,plz
            x           y           z           i           j           k
   1     -0.5000      1.5000      0.0000    0.000000    0.000000    1.000000
  3110: tl,gl/pl1,past,PL2
  3111: cutcom/off
            x           y           z           i           j           k
         -0.5500      1.5000      0.0000    0.000000    0.000000    1.000000
  3112: gd/(ve/-.05,0,0)
            x           y           z           i           j           k
         -0.5500      1.5000      1.0000    0.000000    0.000000    1.000000
  3113: rp,gd/clr
  3114: lbl1:contin
  3103: srfvct/(ve/1,0,0),(ve/0,1,0)
  3104: th/0,.1
            x           y           z           i           j           k
         -0.6000     -1.6000      1.0000    0.000000    0.000000    1.000000
  3105: rp,go/PL1,clr,PL3
            x           y           z           i           j           k
         -0.6000     -1.6000      0.0000    0.000000    0.000000    1.000000
  3106: rp,gd/plz
  3107: th/0
  3108: cutcom/left,xyplan,1
            x           y           z           i           j           k
         -0.5000     -1.6000      0.0000    0.000000    0.000000    1.000000
  3109: go/PL1,plz
            x           y           z           i           j           k
   1     -0.5000      1.5000      0.0000    0.000000    0.000000    1.000000
  3110: tl,gl/pl1,past,PL2
  3111: cutcom/off
            x           y           z           i           j           k
         -0.5500      1.5000      0.0000    0.000000    0.000000    1.000000
  3112: gd/(ve/-.05,0,0)
            x           y           z           i           j           k
         -0.5500      1.5000      1.0000    0.000000    0.000000    1.000000
  3113: rp,gd/clr
  3114: lbl1:contin
  3115: %
  3116: pprint REVERSED MOTION
  3117: %
  3118: do/lbl1,i=1,3,incr,1
  3119: revers/on
  3120: srfvct/(ve/1,0,0),(ve/0,1,0)
  3121: th/0,.1
  3122: rp,go/PL1,clr,PL3
  3123: gd/plz
  3124: th/0
  3125: cutcom/right,xyplan,1
  3126: go/PL1,plz
  3127: tl,gl/pl1,past,PL2
  3128: cutcom/off
  3129: gd/(ve/-.05,0,0)
  3130: gd/plz
  3131: rp,gd/plz
  3132: rp,gd/clr
  3133: revers/off
  3134: lbl1:contin
  3119: revers/on
  3120: srfvct/(ve/1,0,0),(ve/0,1,0)
  3121: th/0,.1
            x           y           z           i           j           k
         -0.6000     -1.6000      1.0000    0.000000    0.000000    1.000000
  3122: rp,go/PL1,clr,PL3
            x           y           z           i           j           k
         -0.6000     -1.6000      0.0000    0.000000    0.000000    1.000000
  3123: gd/plz
  3124: th/0
  3125: cutcom/right,xyplan,1
            x           y           z           i           j           k
         -0.5000     -1.6000      0.0000    0.000000    0.000000    1.000000
  3126: go/PL1,plz
            x           y           z           i           j           k
   1     -0.5000      1.5000      0.0000    0.000000    0.000000    1.000000
  3127: tl,gl/pl1,past,PL2
  3128: cutcom/off
            x           y           z           i           j           k
         -0.5500      1.5000      0.0000    0.000000    0.000000    1.000000
  3129: gd/(ve/-.05,0,0)
            x           y           z           i           j           k
         -0.5500      1.5000      0.0000    0.000000    0.000000    1.000000
  3130: gd/plz
            x           y           z           i           j           k
         -0.5500      1.5000      0.0000    0.000000    0.000000    1.000000
  3131: rp,gd/plz
            x           y           z           i           j           k
         -0.5500      1.5000      1.0000    0.000000    0.000000    1.000000
  3132: rp,gd/clr
  3133: revers/off
  3134: lbl1:contin
  3119: revers/on
  3120: srfvct/(ve/1,0,0),(ve/0,1,0)
  3121: th/0,.1
            x           y           z           i           j           k
         -0.6000     -1.6000      1.0000    0.000000    0.000000    1.000000
  3122: rp,go/PL1,clr,PL3
            x           y           z           i           j           k
         -0.6000     -1.6000      0.0000    0.000000    0.000000    1.000000
  3123: gd/plz
  3124: th/0
  3125: cutcom/right,xyplan,1
            x           y           z           i           j           k
         -0.5000     -1.6000      0.0000    0.000000    0.000000    1.000000
  3126: go/PL1,plz
            x           y           z           i           j           k
   1     -0.5000      1.5000      0.0000    0.000000    0.000000    1.000000
  3127: tl,gl/pl1,past,PL2
  3128: cutcom/off
            x           y           z           i           j           k
         -0.5500      1.5000      0.0000    0.000000    0.000000    1.000000
  3129: gd/(ve/-.05,0,0)
            x           y           z           i           j           k
         -0.5500      1.5000      0.0000    0.000000    0.000000    1.000000
  3130: gd/plz
            x           y           z           i           j           k
         -0.5500      1.5000      0.0000    0.000000    0.000000    1.000000
  3131: rp,gd/plz
            x           y           z           i           j           k
         -0.5500      1.5000      1.0000    0.000000    0.000000    1.000000
  3132: rp,gd/clr
  3133: revers/off
  3134: lbl1:contin
  3119: revers/on
  3120: srfvct/(ve/1,0,0),(ve/0,1,0)
  3121: th/0,.1
            x           y           z           i           j           k
         -0.6000     -1.6000      1.0000    0.000000    0.000000    1.000000
  3122: rp,go/PL1,clr,PL3
            x           y           z           i           j           k
         -0.6000     -1.6000      0.0000    0.000000    0.000000    1.000000
  3123: gd/plz
  3124: th/0
  3125: cutcom/right,xyplan,1
            x           y           z           i           j           k
         -0.5000     -1.6000      0.0000    0.000000    0.000000    1.000000
  3126: go/PL1,plz
            x           y           z           i           j           k
   1     -0.5000      1.5000      0.0000    0.000000    0.000000    1.000000
  3127: tl,gl/pl1,past,PL2
  3128: cutcom/off
            x           y           z           i           j           k
         -0.5500      1.5000      0.0000    0.000000    0.000000    1.000000
  3129: gd/(ve/-.05,0,0)
            x           y           z           i           j           k
         -0.5500      1.5000      0.0000    0.000000    0.000000    1.000000
  3130: gd/plz
            x           y           z           i           j           k
         -0.5500      1.5000      0.0000    0.000000    0.000000    1.000000
  3131: rp,gd/plz
            x           y           z           i           j           k
         -0.5500      1.5000      1.0000    0.000000    0.000000    1.000000
  3132: rp,gd/clr
  3133: revers/off
  3134: lbl1:contin
  3135: coolnt/off
  3136: %
  3137: call/tlchg,tlno=1,last1=1
   106# TLNOV = TLNO
   107# OFNOV = OFNO
   108# DIA   = DIA1
   109# COR   = COR1
   110# HDIA  = DIA/2
   111# CDC   = TLNO
   112# CUTTER/DIA,COR,COR
   113# CUTTER/DISPLY,MOVE,ON
   114#
   115# IF    (FIRST1) TD1, TD1, TD2
   120# TD2:            $$ ----------- all tools except 1st tool goes here
   121#       IF(LAST1)TD3, TD3, TD8
   185# TD8: $$ ---------------------- below this is for last tool only
   186#       COOLNT/OFF
   187#       IF(CHK)TD10,TD10,TD9
   192# TD10:
   193# insertG49
   194#       LOADTL/TLNO
   195# $$ OPSTOP
   196# $$ insertM01
   197# %INSERTM00
   198# TD11:
   199: TERMAC
  3138: insertG5.1Q0
  3139: FINI
