/*********************************************************************
**  NAME:  sldworks.tlh
**
** CONTAINS:
**
**    COPYRIGHT 2003 (c) NCCS.  All Rights Reserved.
**    MODULE NAME AND RELEASE LEVEL
**       %M% , %I%
**    DATE AND TIME OF LAST  MODIFICATION
**       %G% , %U%
*********************************************************************/
// Created by Microsoft (R) C/C++ Compiler Version 12.00.8447.0 (d41b7608).
//
// sldworks.tlh
//
// C++ source equivalent of Win32 type library C:\PROGRA~1\SOLIDW~1\sldworks.tlb
// compiler-generated file created 05/28/03 at 15:04:00 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("83a33d22-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISldWorks;
struct __declspec(uuid("83a33d46-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IModelDoc;
struct __declspec(uuid("83a33d59-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISelectionMgr;
struct __declspec(uuid("83a33d9a-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IComponent;
struct __declspec(uuid("83a33d3c-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IBody;
struct __declspec(uuid("83a33d3e-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IFace;
struct __declspec(uuid("83a33d40-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISurface;
struct __declspec(uuid("83a33d44-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ICurve;
struct __declspec(uuid("3a075bfd-9962-4431-8321-7af4903c55ad"))
/* dual interface */ IBody2;
struct __declspec(uuid("4a8ba4d8-da25-4b75-8e2d-4922b74d81ed"))
/* dual interface */ IFace2;
struct __declspec(uuid("83a33d42-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IEdge;
struct __declspec(uuid("83a33d61-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumCoEdges;
struct __declspec(uuid("83a33d57-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ICoEdge;
struct __declspec(uuid("83a33d53-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ILoop;
struct __declspec(uuid("83a33d5f-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumEdges;
struct __declspec(uuid("9350ca6e-0adb-485a-8941-9407dd7b3b8e"))
/* dual interface */ ILoop2;
struct __declspec(uuid("83a33d63-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IVertex;
struct __declspec(uuid("83a33d38-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IFeature;
struct __declspec(uuid("83a33d3a-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDimension;
struct __declspec(uuid("b90793fb-ef3d-4b80-a5c4-99959cdb6ceb"))
/* dual interface */ IModelDoc2;
struct __declspec(uuid("83a33d4c-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IModelView;
struct __declspec(uuid("f7d97f82-162e-11d4-aeab-00c04fa0ac51"))
/* dual interface */ IMathTransform;
struct __declspec(uuid("f7d97f86-162e-11d4-aeab-00c04fa0ac51"))
/* dual interface */ IMathVector;
struct __declspec(uuid("f7d97f84-162e-11d4-aeab-00c04fa0ac51"))
/* dual interface */ IMathPoint;
struct __declspec(uuid("83a33d51-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketch;
struct __declspec(uuid("83a33dcd-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumSketchPoints;
struct __declspec(uuid("83a33dbd-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchPoint;
struct __declspec(uuid("9caaa1aa-f2fc-11d5-af66-00c04f603faf"))
/* dual interface */ ICallout;
struct __declspec(uuid("83a33dcf-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumSketchSegments;
struct __declspec(uuid("83a33dbf-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchSegment;
struct __declspec(uuid("54729b8e-4086-11d3-ae9b-00c04f683cba"))
/* interface */ IEnumSketchHatches;
struct __declspec(uuid("c3d00926-4068-11d3-ae9b-00c04f683cba"))
/* dual interface */ ISketchHatch;
struct __declspec(uuid("5b6e8476-461f-43af-b784-90d3cd74337c"))
/* dual interface */ IMidSurface2;
struct __declspec(uuid("83a33d75-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IFeatMgrView;
struct __declspec(uuid("83a33d98-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IConfiguration;
struct __declspec(uuid("7241680b-0bc6-11d4-aeee-00c04f61025c"))
/* dual interface */ IExplodeStep;
struct __declspec(uuid("655d6f2a-5441-45d1-8cba-d35fb26988e4"))
/* dual interface */ IComponent2;
struct __declspec(uuid("97a9befa-6814-4fa6-acb4-8cc84f76fb99"))
/* interface */ IEnumBodies2;
struct __declspec(uuid("83a33d67-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IAttributeDef;
struct __declspec(uuid("83a33d65-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IEntity;
struct __declspec(uuid("83a33d71-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IAttribute;
struct __declspec(uuid("83a33d69-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IParameter;
struct __declspec(uuid("83a33da3-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IReferenceCurve;
struct __declspec(uuid("83a33da5-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IColorTable;
struct __declspec(uuid("83a33da9-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IAnnotation;
struct __declspec(uuid("83a33d9c-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDisplayData;
struct __declspec(uuid("83a33db9-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ITextFormat;
struct __declspec(uuid("83a33db1-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumModelViews;
struct __declspec(uuid("83a33db7-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDetailingDefaults;
struct __declspec(uuid("75173e30-f19e-11d2-b8e9-00c04f8ef738"))
/* dual interface */ ILayerMgr;
struct __declspec(uuid("04b7287c-f19d-11d2-b8e9-00c04f8ef738"))
/* dual interface */ ILayer;
struct __declspec(uuid("ce1eaa88-25ad-11d3-ae91-00c04f683cba"))
/* dual interface */ IDesignTable;
struct __declspec(uuid("83a33d84-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IRefPlane;
struct __declspec(uuid("83a33d90-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDatumTag;
struct __declspec(uuid("83a33d4a-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IGtol;
struct __declspec(uuid("83a33d55-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ INote;
struct __declspec(uuid("4944f9e6-bf50-11d5-af56-00c04f603faf"))
/* dual interface */ IBalloonStack;
struct __declspec(uuid("e981b4fa-7e86-11d4-aef2-00c04f603faf"))
/* dual interface */ IPropertyManagerPage;
struct __declspec(uuid("83a33da1-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDisplayDimension;
struct __declspec(uuid("82071121-8b32-4f51-8983-9304756503e7"))
/* dual interface */ IUserUnit;
struct __declspec(uuid("83a33d94-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IWeldSymbol;
struct __declspec(uuid("83a33dc5-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchText;
struct __declspec(uuid("02272ce8-fe52-4b94-b120-6d1826fdbe32"))
/* dual interface */ IEquationMgr;
struct __declspec(uuid("931374cc-ce0e-11d5-af59-00c04f603faf"))
/* dual interface */ IPageSetup;
struct __declspec(uuid("6b39655e-381b-4bd0-89f5-640d48593f15"))
/* dual interface */ IFeatureManager;
struct __declspec(uuid("442b6462-0350-4f5c-a168-3f753f6ca792"))
/* dual interface */ ICustomBendAllowance;
struct __declspec(uuid("1aa249ff-b758-440a-8b88-26512f385bf3"))
/* dual interface */ IModelViewManager;
struct __declspec(uuid("99f4d4af-f268-4ee1-8c55-041f7becf879"))
/* dual interface */ IModelDocExtension;
struct __declspec(uuid("8db64337-f36e-47cc-bbbc-b4b979d31505"))
/* dual interface */ IConfigurationManager;
struct __declspec(uuid("83a33dab-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumDisplayDimensions;
struct __declspec(uuid("9a6ad388-3fc9-48de-bfa5-b8953433ab36"))
/* interface */ IEnumLoops2;
struct __declspec(uuid("61ecff18-ac2c-405e-b9b8-30d85fdb5087"))
/* interface */ IEnumFaces2;
struct __declspec(uuid("83a33d32-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IPartDoc;
struct __declspec(uuid("83a33d96-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumBodies;
struct __declspec(uuid("699c7492-db56-4cc2-b7a2-9ffd56698434"))
/* dual interface */ ITessellation;
struct __declspec(uuid("83a33d5d-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumLoops;
struct __declspec(uuid("83a33d5b-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumFaces;
struct __declspec(uuid("83a33d50-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IView;
struct __declspec(uuid("83a33d8e-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISFSymbol;
struct __declspec(uuid("83a33d92-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDatumTargetSym;
struct __declspec(uuid("83a33d9e-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ICThread;
struct __declspec(uuid("83a33d82-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IBomTable;
struct __declspec(uuid("83a33db5-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ICustomSymbol;
struct __declspec(uuid("f183a33f-d4db-11d3-aeb2-00c04f603faf"))
/* dual interface */ IDrSection;
struct __declspec(uuid("51efb944-d449-11d3-aebe-00c04f683cba"))
/* interface */ IEnumComponents;
struct __declspec(uuid("f6804d12-b73a-49af-81c6-05babb58b812"))
/* interface */ IEnumComponents2;
struct __declspec(uuid("585a6a15-e95b-11d3-aebc-00c04f603faf"))
/* interface */ IEnumDrSections;
struct __declspec(uuid("4b65a34a-4c44-11d4-aef6-00c04f683cba"))
/* dual interface */ IDetailCircle;
struct __declspec(uuid("a2227e65-a3a7-11d4-aeff-00c04f603faf"))
/* dual interface */ IProjectionArrow;
struct __declspec(uuid("01eb5266-6ca9-4f59-b0b4-a040dd1ccfb6"))
/* dual interface */ IMultiJogLeader;
struct __declspec(uuid("55aacd8b-97c5-11d5-af4b-00c04f603faf"))
/* dual interface */ IDowelSymbol;
struct __declspec(uuid("992a14b6-15cf-11d6-af6e-00c04f603faf"))
/* dual interface */ IBlockInstance;
struct __declspec(uuid("8cd8314a-1677-11d6-af6e-00c04f603faf"))
/* dual interface */ IBlockDefinition;
struct __declspec(uuid("54e1ffbc-d989-437f-a701-62bda39fd195"))
/* dual interface */ IBreakLine;
struct __declspec(uuid("e0a98a37-8780-4e5f-a28a-c7c6af25231c"))
/* dual interface */ IFaceHatch;
struct __declspec(uuid("6beb0423-eda4-11d5-af64-00c04f603faf"))
/* dual interface */ ICenterMark;
struct __declspec(uuid("83a33d88-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IMidSurface;
struct __declspec(uuid("83a33d48-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IFrame;
struct __declspec(uuid("931f2702-3257-4372-bbcc-cbd4a7fbbc41"))
/* dual interface */ IStatusBarPane;
struct __declspec(uuid("83a33d35-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IAssemblyDoc;
struct __declspec(uuid("83a33d4e-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IMember;
struct __declspec(uuid("e0aace0f-3a47-437e-99b4-9330cd6186ba"))
/* dual interface */ IDragOperator;
struct __declspec(uuid("83a33d33-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDrawingDoc;
struct __declspec(uuid("83a33d80-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISheet;
struct __declspec(uuid("83a33d73-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IModeler;
struct __declspec(uuid("83a33d78-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IEnvironment;
struct __declspec(uuid("83a33db3-27c5-11ce-bfd4-00400513bb57"))
/* interface */ IEnumDocuments;
struct __declspec(uuid("f7d97f80-162e-11d4-aeab-00c04fa0ac51"))
/* dual interface */ IMathUtility;
struct __declspec(uuid("76d82d71-339a-4d1c-91a1-f6ac0cf9b625"))
/* interface */ IEnumDocuments2;
struct __declspec(uuid("b92e624a-0dc3-11d5-af1e-00c04f603faf"))
/* dual interface */ IPropertyManagerPage2;
struct __declspec(uuid("2e23d2ee-0f57-11d5-af1f-00c04f603faf"))
/* dual interface */ IPropertyManagerPageGroup;
struct __declspec(uuid("ced9caf4-16fa-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageControl;
struct __declspec(uuid("83a33d86-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IRefAxis;
struct __declspec(uuid("83a33d8a-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IMate;
struct __declspec(uuid("83a33d8c-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IMateEntity;
struct __declspec(uuid("83a33da7-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISWPropertySheet;
struct __declspec(uuid("83a33dad-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IRibFeatureData;
struct __declspec(uuid("83a33daf-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ IDomeFeatureData;
struct __declspec(uuid("83a33dc1-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchLine;
struct __declspec(uuid("83a33dc3-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchArc;
struct __declspec(uuid("83a33dc7-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchEllipse;
struct __declspec(uuid("83a33dc9-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchParabola;
struct __declspec(uuid("83a33dcb-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ISketchSpline;
struct __declspec(uuid("83a33df1-27c5-11ce-bfd4-00400513bb57"))
/* dual interface */ ILightDialog;
struct __declspec(uuid("5b57e3bc-7139-11d3-aea2-00c04f683cba"))
/* interface */ IEnumCurves;
struct __declspec(uuid("1d06fd54-96dd-11d3-aeaa-00c04f683cba"))
/* dual interface */ ISimpleHoleFeatureData;
struct __declspec(uuid("887ab457-a739-11d3-b97f-001083029a97"))
/* dual interface */ IWizardHoleFeatureData;
struct __declspec(uuid("7271d7c7-acc9-11d3-b97f-001083029a97"))
/* dual interface */ IChamferFeatureData;
struct __declspec(uuid("bc633ce1-b367-11d3-b981-001083029a97"))
/* dual interface */ IDraftFeatureData;
struct __declspec(uuid("cc929f0b-b404-11d3-b981-001083029a97"))
/* dual interface */ ISimpleFilletFeatureData;
struct __declspec(uuid("cc929f0d-b404-11d3-b981-001083029a97"))
/* dual interface */ IVariableFilletFeatureData;
struct __declspec(uuid("908a7175-b72c-11d3-b981-001083029a97"))
/* dual interface */ IExtrudeFeatureData;
struct __declspec(uuid("b7fff613-b735-11d3-b981-001083029a97"))
/* dual interface */ IRevolveFeatureData;
struct __declspec(uuid("414f4f1e-30ec-11d4-aeeb-00c04f683cba"))
/* dual interface */ IMirrorPatternFeatureData;
struct __declspec(uuid("dbbf39de-7ab5-11d4-aeb6-00c04fa0ac51"))
/* dual interface */ ICircularPatternFeatureData;
struct __declspec(uuid("f86d1e94-7de8-11d4-aeb7-00c04fa0ac51"))
/* dual interface */ ILinearPatternFeatureData;
struct __declspec(uuid("e5d1af7c-7f5d-11d4-aeb7-00c04fa0ac51"))
/* dual interface */ ITablePatternFeatureData;
struct __declspec(uuid("ae998464-8050-11d4-aeb7-00c04fa0ac51"))
/* dual interface */ ISketchPatternFeatureData;
struct __declspec(uuid("e9172718-836b-11d4-aeb7-00c04fa0ac51"))
/* dual interface */ IMirrorSolidFeatureData;
struct __declspec(uuid("2f6c1e88-f2d6-11d4-aed5-00c04fa0ac51"))
/* dual interface */ ISheetMetalFeatureData;
struct __declspec(uuid("0c02ad40-f6e6-11d4-aed6-00c04fa0ac51"))
/* dual interface */ IOneBendFeatureData;
struct __declspec(uuid("f3bdb64e-f7c6-11d4-aed6-00c04fa0ac51"))
/* dual interface */ IBendsFeatureData;
struct __declspec(uuid("c61e9dd6-0813-11d5-aedd-00c04fa0ac51"))
/* dual interface */ IBaseFlangeFeatureData;
struct __declspec(uuid("b58e432a-09c8-11d5-aedd-00c04fa0ac51"))
/* dual interface */ IEdgeFlangeFeatureData;
struct __declspec(uuid("e6194f72-0cec-11d5-aedd-00c04fa0ac51"))
/* dual interface */ IMiterFlangeFeatureData;
struct __declspec(uuid("a4d90a70-0da5-11d5-aedd-00c04fa0ac51"))
/* dual interface */ ISketchedBendFeatureData;
struct __declspec(uuid("2134cbfc-0dda-11d5-aedd-00c04fa0ac51"))
/* dual interface */ IClosedCornerFeatureData;
struct __declspec(uuid("32700a62-0e5c-11d5-aedd-00c04fa0ac51"))
/* dual interface */ IFoldsFeatureData;
struct __declspec(uuid("00644208-0e6c-11d5-aedd-00c04fa0ac51"))
/* dual interface */ IFlatPatternFeatureData;
struct __declspec(uuid("9890c04c-1196-11d5-aede-00c04fa0ac51"))
/* dual interface */ ILocalLinearPatternFeatureData;
struct __declspec(uuid("f2e81434-13fb-11d5-aede-00c04fa0ac51"))
/* dual interface */ ILocalCircularPatternFeatureData;
struct __declspec(uuid("98eadb32-141a-11d5-aede-00c04fa0ac51"))
/* dual interface */ IDerivedPatternFeatureData;
struct __declspec(uuid("ebbd7b58-170d-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageLabel;
struct __declspec(uuid("ebbd7b5a-170d-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageCheckbox;
struct __declspec(uuid("3a66c294-17ce-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageButton;
struct __declspec(uuid("3a66c296-17ce-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageOption;
struct __declspec(uuid("eb18a468-1800-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageTextbox;
struct __declspec(uuid("0bd2ba62-18c5-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageCombobox;
struct __declspec(uuid("ff956369-ae71-4643-afa8-83d7548f758a"))
/* dual interface */ IPropertyManagerPageActiveX;
struct __declspec(uuid("459f4b5c-7f8c-4a7e-8aa0-fcfb6ed2d286"))
/* dual interface */ IProjectionCurveFeatureData;
struct __declspec(uuid("e7631115-f299-4852-9d37-fc9508a00bc1"))
/* dual interface */ IScaleFeatureData;
struct __declspec(uuid("58252a5a-82af-49ef-a2fe-e8c995132f84"))
/* dual interface */ IShellFeatureData;
struct __declspec(uuid("07799f9d-7e4f-40de-87ae-aebaaba6a3bc"))
/* dual interface */ ISweepFeatureData;
struct __declspec(uuid("ee8d87fe-5202-45e9-8e5c-91084c134168"))
/* dual interface */ ILoftFeatureData;
struct __declspec(uuid("85f4dd78-9430-4937-8504-55d24f2cee41"))
/* dual interface */ IThickenFeatureData;
struct __declspec(uuid("dfb6c63b-287c-4141-a610-08d94cece976"))
/* dual interface */ ISurfaceCutFeatureData;
struct __declspec(uuid("d7792e79-5983-45c7-ae7d-966fcb6604d8"))
/* dual interface */ IReplaceFaceFeatureData;
struct __declspec(uuid("739ac7ce-9017-11d5-af07-0002b34143e5"))
/* dual interface */ IMacroFeatureData;
struct __declspec(uuid("496a6d86-2180-46d8-a973-7885554efaf3"))
/* dual interface */ ICurveDrivenPatternFeatureData;
struct __declspec(uuid("d3352f26-3333-455e-910b-e0f3a44e76fd"))
/* dual interface */ IRipFeatureData;
struct __declspec(uuid("d1e54427-2421-413f-9eb3-f568a6bf826d"))
/* dual interface */ IHemFeatureData;
struct __declspec(uuid("df91cd7f-f4d5-471a-831b-e201b2c02090"))
/* dual interface */ IBreakCornerFeatureData;
struct __declspec(uuid("c75ca537-4aba-44f3-ac3b-73d5dcd0c834"))
/* dual interface */ IJogFeatureData;
struct __declspec(uuid("157ce6b0-16bc-49a3-b207-95159b02306c"))
/* dual interface */ ISurfExtrudeFeatureData;
struct __declspec(uuid("38d7f138-4403-4eb0-8e9e-7daf6ba385cf"))
/* dual interface */ ISurfRevolveFeatureData;
struct __declspec(uuid("214152e2-2f73-42e3-ab88-690c2ed9910d"))
/* dual interface */ ISurfaceOffsetFeatureData;
struct __declspec(uuid("6ce5bd99-0769-4daf-8206-07513b6c0005"))
/* dual interface */ ISurfaceKnitFeatureData;
struct __declspec(uuid("72249e3d-b571-416d-9034-de3be1d9937c"))
/* dual interface */ ISurfaceExtendFeatureData;
struct __declspec(uuid("6a0860dc-bc79-4dfd-8a06-252efccfcd37"))
/* dual interface */ ISurfacePlanarFeatureData;
struct __declspec(uuid("c9943dee-40de-4eb9-a3c5-7d5cabee3e85"))
/* dual interface */ ISurfaceTrimFeatureData;
struct __declspec(uuid("82f0509d-402b-4d79-ab6b-aa2888fc1e81"))
/* dual interface */ ISurfaceRadiateFeatureData;
struct __declspec(uuid("02b5cbf8-5104-41f7-901d-a4dcba547029"))
/* dual interface */ IRefPlaneFeatureData;
struct __declspec(uuid("619dee3d-3398-48fe-8818-edd4169fddb8"))
/* dual interface */ ILoftedBendsFeatureData;
struct __declspec(uuid("8066432c-1376-4d6b-aa64-46b2d3cc5d60"))
/* dual interface */ IReferencePointCurveFeatureData;
struct __declspec(uuid("c11527fa-e833-4453-80dd-229f6bacc5d9"))
/* dual interface */ IFreePointCurveFeatureData;
struct __declspec(uuid("8d5cfab8-a9f9-4b7f-9275-27e2062c324e"))
/* dual interface */ ICompositeCurveFeatureData;
struct __declspec(uuid("70e634ee-890a-421f-abce-5208a563423c"))
/* dual interface */ IHelixFeatureData;
struct __declspec(uuid("6dc71ec8-09f6-4d6f-ac3f-19d8ea258e0b"))
/* dual interface */ IImportedCurveFeatureData;
struct __declspec(uuid("eb53b511-e23d-4b6a-b48d-21828af5f151"))
/* dual interface */ ISketchRegion;
struct __declspec(uuid("eb53b513-e23d-4b6a-b48d-21828af5f151"))
/* dual interface */ ISketchContour;
struct __declspec(uuid("83a33d22-37c5-11ce-bfd4-00400513bb57"))
/* dispinterface */ DSldWorksEvents;
struct /* coclass */ SldWorks;
struct __declspec(uuid("83a33d32-37c5-11ce-bfd4-00400513bb57"))
/* dispinterface */ DPartDocEvents;
struct /* coclass */ PartDoc;
struct __declspec(uuid("83a33d34-37c5-11ce-bfd4-00400513bb57"))
/* dispinterface */ DDrawingDocEvents;
struct /* coclass */ DrawingDoc;
struct __declspec(uuid("83a33d35-37c5-11ce-bfd4-00400513bb57"))
/* dispinterface */ DAssemblyDocEvents;
struct /* coclass */ AssemblyDoc;
struct /* coclass */ feature;
struct /* coclass */ Dimension;
struct /* coclass */ Body;
struct /* coclass */ face;
struct /* coclass */ surface;
struct /* coclass */ Edge;
struct /* coclass */ Curve;
struct /* coclass */ modelDoc;
struct /* coclass */ Frame;
struct /* coclass */ Gtol;
struct __declspec(uuid("83a33d4c-37c5-11ce-bfd4-00400513bb57"))
/* dispinterface */ DModelViewEvents;
struct /* coclass */ ModelView;
struct /* coclass */ Member;
struct /* coclass */ view;
struct /* coclass */ sketch;
struct /* coclass */ loop;
struct /* coclass */ note;
struct /* coclass */ CoEdge;
struct /* coclass */ Vertex;
struct /* coclass */ SelectionMgr;
struct /* coclass */ EnumFaces;
struct /* coclass */ EnumFaces2;
struct /* coclass */ EnumLoops;
struct /* coclass */ EnumLoops2;
struct /* coclass */ EnumEdges;
struct /* coclass */ EnumCoEdges;
struct /* coclass */ EnumBodies;
struct /* coclass */ EnumBodies2;
struct /* coclass */ entity;
struct /* coclass */ attributeDef;
struct /* coclass */ Parameter;
struct /* coclass */ Attribute;
struct /* coclass */ Modeler;
struct __declspec(uuid("83a33d76-27c5-11ce-bfd4-00400513bb57"))
/* dispinterface */ DFeatMgrViewEvents;
struct /* coclass */ FeatMgrView;
struct /* coclass */ Environment;
struct /* coclass */ Sheet;
struct /* coclass */ BomTable;
struct /* coclass */ refPlane;
struct /* coclass */ refAxis;
struct /* coclass */ MidSurface;
struct /* coclass */ Mate;
struct /* coclass */ MateEntity;
struct /* coclass */ SFSymbol;
struct /* coclass */ DatumTag;
struct /* coclass */ DatumTargetSym;
struct /* coclass */ WeldSymbol;
struct /* coclass */ configuration;
struct /* coclass */ component;
struct /* coclass */ DisplayData;
struct /* coclass */ CThread;
struct /* coclass */ DisplayDimension;
struct /* coclass */ ReferenceCurve;
struct /* coclass */ ColorTable;
struct __declspec(uuid("e05ff9e0-fc82-11d2-9395-00c04f79bffe"))
/* dispinterface */ DSWPropertySheetEvents;
struct /* coclass */ SWPropertySheet;
struct /* coclass */ Annotation;
struct /* coclass */ EnumDisplayDimensions;
struct /* coclass */ RibFeatureData;
struct /* coclass */ DomeFeatureData;
struct /* coclass */ EnumModelViews;
struct /* coclass */ EnumDocuments;
struct /* coclass */ EnumDocuments2;
struct /* coclass */ CustomSymbol;
struct /* coclass */ DetailingDefaults;
struct /* coclass */ textFormat;
struct /* coclass */ SketchPoint;
struct /* coclass */ SketchSegment;
struct /* coclass */ SketchLine;
struct /* coclass */ SketchArc;
struct /* coclass */ SketchText;
struct /* coclass */ SketchEllipse;
struct /* coclass */ SketchParabola;
struct /* coclass */ SketchSpline;
struct /* coclass */ EnumSketchPoints;
struct /* coclass */ EnumSketchSegments;
struct /* coclass */ LightDialog;
struct /* coclass */ Layer;
struct /* coclass */ LayerMgr;
struct /* coclass */ DesignTable;
struct /* coclass */ SketchHatch;
struct /* coclass */ EnumSketchHatches;
struct /* coclass */ EnumCurves;
struct /* coclass */ SimpleHoleFeatureData;
struct /* coclass */ WizardHoleFeatureData;
struct /* coclass */ ChamferFeatureData;
struct /* coclass */ DraftFeatureData;
struct /* coclass */ SimpleFilletFeatureData;
struct /* coclass */ VariableFilletFeatureData;
struct /* coclass */ ExtrudeFeatureData;
struct /* coclass */ RevolveFeatureData;
struct __declspec(uuid("ac048cea-ae93-11d3-aea7-00c04f60f02a"))
/* dispinterface */ ISdmDoc;
struct /* coclass */ SdmDoc;
struct /* coclass */ DrSection;
struct /* coclass */ EnumComponents;
struct /* coclass */ EnumComponents2;
struct /* coclass */ EnumDrSections;
struct /* coclass */ ExplodeStep;
struct /* coclass */ MathUtility;
struct /* coclass */ MathTransform;
struct /* coclass */ MathPoint;
struct /* coclass */ MathVector;
struct /* coclass */ MirrorPatternFeatureData;
struct /* coclass */ DetailCircle;
struct /* coclass */ CircularPatternFeatureData;
struct /* coclass */ LinearPatternFeatureData;
struct /* coclass */ TablePatternFeatureData;
struct /* coclass */ SketchPatternFeatureData;
struct /* coclass */ MirrorSolidFeatureData;
struct /* coclass */ PropertyManagerPage;
struct /* coclass */ ProjectionArrow;
struct /* coclass */ Tessellation;
struct /* coclass */ SheetMetalFeatureData;
struct /* coclass */ OneBendFeatureData;
struct /* coclass */ BendsFeatureData;
struct /* coclass */ UserUnit;
struct /* coclass */ BaseFlangeFeatureData;
struct /* coclass */ EdgeFlangeFeatureData;
struct /* coclass */ MiterFlangeFeatureData;
struct /* coclass */ SketchedBendFeatureData;
struct /* coclass */ ClosedCornerFeatureData;
struct /* coclass */ FoldsFeatureData;
struct /* coclass */ FlatPatternFeatureData;
struct /* coclass */ LocalLinearPatternFeatureData;
struct /* coclass */ LocalCircularPatternFeatureData;
struct /* coclass */ DerivedPatternFeatureData;
struct /* coclass */ body2;
struct /* coclass */ face2;
struct /* coclass */ ModelDoc2;
struct /* coclass */ Loop2;
struct /* coclass */ MidSurface2;
struct /* coclass */ Component2;
struct /* coclass */ PropertyManagerPage2;
struct /* coclass */ PropertyManagerPageGroup;
struct /* coclass */ PropertyManagerPageControl;
struct /* coclass */ PropertyManagerPageLabel;
struct /* coclass */ PropertyManagerPageCheckbox;
struct /* coclass */ PropertyManagerPageButton;
struct /* coclass */ PropertyManagerPageOption;
struct /* coclass */ PropertyManagerPageTextbox;
struct __declspec(uuid("cdb49982-1a18-11d5-af24-00c04f603faf"))
/* dual interface */ IPropertyManagerPageListbox;
struct /* coclass */ PropertyManagerPageListbox;
struct /* coclass */ PropertyManagerPageCombobox;
struct __declspec(uuid("96567554-1eda-11d5-af25-00c04f603faf"))
/* dual interface */ IPropertyManagerPageNumberbox;
struct /* coclass */ PropertyManagerPageNumberbox;
struct __declspec(uuid("96567556-1eda-11d5-af25-00c04f603faf"))
/* dual interface */ IPropertyManagerPageSelectionbox;
struct /* coclass */ PropertyManagerPageSelectionbox;
struct /* coclass */ MultiJogLeader;
struct /* coclass */ ProjectionCurveFeatureData;
struct /* coclass */ ScaleFeatureData;
struct /* coclass */ ShellFeatureData;
struct /* coclass */ SweepFeatureData;
struct /* coclass */ LoftFeatureData;
struct /* coclass */ ThickenFeatureData;
struct /* coclass */ SurfCutFeatureData;
struct /* coclass */ ReplaceFaceFeatureData;
struct __declspec(uuid("efe4958e-b373-4849-a93c-01bfdebc830d"))
/* dual interface */ IRibFeatureData2;
struct /* coclass */ RibFeatureData2;
struct __declspec(uuid("6e8fab36-9e1c-4a84-a160-1e68b703431c"))
/* dual interface */ IDomeFeatureData2;
struct /* coclass */ DomeFeatureData2;
struct __declspec(uuid("d98e9f26-73db-4bd2-a967-31bf7ef35b5b"))
/* dual interface */ ISimpleHoleFeatureData2;
struct /* coclass */ SimpleHoleFeatureData2;
struct __declspec(uuid("7a472c09-437c-4c4b-b34c-a144d0e2546c"))
/* dual interface */ IWizardHoleFeatureData2;
struct /* coclass */ WizardHoleFeatureData2;
struct __declspec(uuid("8427d092-a1fc-49c9-b1ed-ec52d2389e9a"))
/* dual interface */ IChamferFeatureData2;
struct /* coclass */ ChamferFeatureData2;
struct __declspec(uuid("fd9b0999-d519-41ab-acaa-4f2adedd7015"))
/* dual interface */ IDraftFeatureData2;
struct /* coclass */ DraftFeatureData2;
struct __declspec(uuid("9fe7c8db-8a4c-41bb-8e3b-7600692dbc92"))
/* dual interface */ ISimpleFilletFeatureData2;
struct /* coclass */ SimpleFilletFeatureData2;
struct __declspec(uuid("ffcdc95c-1ba9-423a-877e-cb7aa60de9b4"))
/* dual interface */ IVariableFilletFeatureData2;
struct /* coclass */ VariableFilletFeatureData2;
struct __declspec(uuid("931e939e-2fde-49a8-8472-abcf79e9f5cc"))
/* dual interface */ IExtrudeFeatureData2;
struct /* coclass */ ExtrudeFeatureData2;
struct __declspec(uuid("e055f0ed-db3e-4528-a982-d66d289190a0"))
/* dual interface */ IRevolveFeatureData2;
struct /* coclass */ RevolveFeatureData2;
struct /* coclass */ MacroFeatureData;
struct /* coclass */ DowelSymbol;
struct /* coclass */ DragOperator;
struct /* coclass */ CurveDrivenPatternFeatureData;
struct /* coclass */ BalloonStack;
struct /* coclass */ StatusBarPane;
struct /* coclass */ EquationMgr;
struct /* coclass */ PageSetup;
struct /* coclass */ RipFeatureData;
struct /* coclass */ HemFeatureData;
struct /* coclass */ BreakCornerFeatureData;
struct /* coclass */ JogFeatureData;
struct /* coclass */ SurfExtrudeFeatureData;
struct /* coclass */ SurfRevolveFeatureData;
struct /* coclass */ SurfaceOffsetFeatureData;
struct /* coclass */ SurfaceKnitFeatureData;
struct /* coclass */ SurfaceExtendFeatureData;
struct /* coclass */ SurfacePlanarFeatureData;
struct /* coclass */ CenterMark;
struct /* coclass */ SurfaceTrimFeatureData;
struct /* coclass */ SurfaceRadiateFeatureData;
struct /* coclass */ RefPlaneFeatureData;
struct /* coclass */ Callout;
struct /* coclass */ CustomBendAllowance;
struct /* coclass */ BlockInstance;
struct /* coclass */ BlockDefinition;
struct /* coclass */ BreakLine;
struct /* coclass */ FaceHatch;
struct /* coclass */ PropertyManagerPageActiveX;
struct /* coclass */ LoftedBendsFeatureData;
struct /* coclass */ FeatureManager;
struct /* coclass */ ModelViewManager;
struct /* coclass */ ModelDocExtension;
struct /* coclass */ ConfigurationManager;
struct /* coclass */ ReferencePointCurveFeatureData;
struct /* coclass */ FreePointCurveFeatureData;
struct /* coclass */ CompositeCurveFeatureData;
struct /* coclass */ HelixFeatureData;
struct /* coclass */ ImportedCurveFeatureData;
struct /* coclass */ SketchRegion;
struct /* coclass */ SketchContour;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(ISldWorks, __uuidof(ISldWorks));
_COM_SMARTPTR_TYPEDEF(IModelDoc, __uuidof(IModelDoc));
_COM_SMARTPTR_TYPEDEF(ISelectionMgr, __uuidof(ISelectionMgr));
_COM_SMARTPTR_TYPEDEF(IComponent, __uuidof(IComponent));
_COM_SMARTPTR_TYPEDEF(IBody, __uuidof(IBody));
_COM_SMARTPTR_TYPEDEF(IFace, __uuidof(IFace));
_COM_SMARTPTR_TYPEDEF(ISurface, __uuidof(ISurface));
_COM_SMARTPTR_TYPEDEF(ICurve, __uuidof(ICurve));
_COM_SMARTPTR_TYPEDEF(IBody2, __uuidof(IBody2));
_COM_SMARTPTR_TYPEDEF(IFace2, __uuidof(IFace2));
_COM_SMARTPTR_TYPEDEF(IEdge, __uuidof(IEdge));
_COM_SMARTPTR_TYPEDEF(IEnumCoEdges, __uuidof(IEnumCoEdges));
_COM_SMARTPTR_TYPEDEF(ICoEdge, __uuidof(ICoEdge));
_COM_SMARTPTR_TYPEDEF(ILoop, __uuidof(ILoop));
_COM_SMARTPTR_TYPEDEF(IEnumEdges, __uuidof(IEnumEdges));
_COM_SMARTPTR_TYPEDEF(ILoop2, __uuidof(ILoop2));
_COM_SMARTPTR_TYPEDEF(IVertex, __uuidof(IVertex));
_COM_SMARTPTR_TYPEDEF(IFeature, __uuidof(IFeature));
_COM_SMARTPTR_TYPEDEF(IDimension, __uuidof(IDimension));
_COM_SMARTPTR_TYPEDEF(IModelDoc2, __uuidof(IModelDoc2));
_COM_SMARTPTR_TYPEDEF(IModelView, __uuidof(IModelView));
_COM_SMARTPTR_TYPEDEF(IMathTransform, __uuidof(IMathTransform));
_COM_SMARTPTR_TYPEDEF(IMathVector, __uuidof(IMathVector));
_COM_SMARTPTR_TYPEDEF(IMathPoint, __uuidof(IMathPoint));
_COM_SMARTPTR_TYPEDEF(ISketch, __uuidof(ISketch));
_COM_SMARTPTR_TYPEDEF(IEnumSketchPoints, __uuidof(IEnumSketchPoints));
_COM_SMARTPTR_TYPEDEF(ISketchPoint, __uuidof(ISketchPoint));
_COM_SMARTPTR_TYPEDEF(ICallout, __uuidof(ICallout));
_COM_SMARTPTR_TYPEDEF(IEnumSketchSegments, __uuidof(IEnumSketchSegments));
_COM_SMARTPTR_TYPEDEF(ISketchSegment, __uuidof(ISketchSegment));
_COM_SMARTPTR_TYPEDEF(IEnumSketchHatches, __uuidof(IEnumSketchHatches));
_COM_SMARTPTR_TYPEDEF(ISketchHatch, __uuidof(ISketchHatch));
_COM_SMARTPTR_TYPEDEF(IMidSurface2, __uuidof(IMidSurface2));
_COM_SMARTPTR_TYPEDEF(IFeatMgrView, __uuidof(IFeatMgrView));
_COM_SMARTPTR_TYPEDEF(IConfiguration, __uuidof(IConfiguration));
_COM_SMARTPTR_TYPEDEF(IExplodeStep, __uuidof(IExplodeStep));
_COM_SMARTPTR_TYPEDEF(IComponent2, __uuidof(IComponent2));
_COM_SMARTPTR_TYPEDEF(IEnumBodies2, __uuidof(IEnumBodies2));
_COM_SMARTPTR_TYPEDEF(IAttributeDef, __uuidof(IAttributeDef));
_COM_SMARTPTR_TYPEDEF(IEntity, __uuidof(IEntity));
_COM_SMARTPTR_TYPEDEF(IAttribute, __uuidof(IAttribute));
_COM_SMARTPTR_TYPEDEF(IParameter, __uuidof(IParameter));
_COM_SMARTPTR_TYPEDEF(IReferenceCurve, __uuidof(IReferenceCurve));
_COM_SMARTPTR_TYPEDEF(IColorTable, __uuidof(IColorTable));
_COM_SMARTPTR_TYPEDEF(IAnnotation, __uuidof(IAnnotation));
_COM_SMARTPTR_TYPEDEF(IDisplayData, __uuidof(IDisplayData));
_COM_SMARTPTR_TYPEDEF(ITextFormat, __uuidof(ITextFormat));
_COM_SMARTPTR_TYPEDEF(IEnumModelViews, __uuidof(IEnumModelViews));
_COM_SMARTPTR_TYPEDEF(IDetailingDefaults, __uuidof(IDetailingDefaults));
_COM_SMARTPTR_TYPEDEF(ILayerMgr, __uuidof(ILayerMgr));
_COM_SMARTPTR_TYPEDEF(ILayer, __uuidof(ILayer));
_COM_SMARTPTR_TYPEDEF(IDesignTable, __uuidof(IDesignTable));
_COM_SMARTPTR_TYPEDEF(IRefPlane, __uuidof(IRefPlane));
_COM_SMARTPTR_TYPEDEF(IDatumTag, __uuidof(IDatumTag));
_COM_SMARTPTR_TYPEDEF(IGtol, __uuidof(IGtol));
_COM_SMARTPTR_TYPEDEF(INote, __uuidof(INote));
_COM_SMARTPTR_TYPEDEF(IBalloonStack, __uuidof(IBalloonStack));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPage, __uuidof(IPropertyManagerPage));
_COM_SMARTPTR_TYPEDEF(IDisplayDimension, __uuidof(IDisplayDimension));
_COM_SMARTPTR_TYPEDEF(IUserUnit, __uuidof(IUserUnit));
_COM_SMARTPTR_TYPEDEF(IWeldSymbol, __uuidof(IWeldSymbol));
_COM_SMARTPTR_TYPEDEF(ISketchText, __uuidof(ISketchText));
_COM_SMARTPTR_TYPEDEF(IEquationMgr, __uuidof(IEquationMgr));
_COM_SMARTPTR_TYPEDEF(IPageSetup, __uuidof(IPageSetup));
_COM_SMARTPTR_TYPEDEF(IFeatureManager, __uuidof(IFeatureManager));
_COM_SMARTPTR_TYPEDEF(ICustomBendAllowance, __uuidof(ICustomBendAllowance));
_COM_SMARTPTR_TYPEDEF(IModelViewManager, __uuidof(IModelViewManager));
_COM_SMARTPTR_TYPEDEF(IModelDocExtension, __uuidof(IModelDocExtension));
_COM_SMARTPTR_TYPEDEF(IConfigurationManager, __uuidof(IConfigurationManager));
_COM_SMARTPTR_TYPEDEF(IEnumDisplayDimensions, __uuidof(IEnumDisplayDimensions));
_COM_SMARTPTR_TYPEDEF(IEnumLoops2, __uuidof(IEnumLoops2));
_COM_SMARTPTR_TYPEDEF(IEnumFaces2, __uuidof(IEnumFaces2));
_COM_SMARTPTR_TYPEDEF(IPartDoc, __uuidof(IPartDoc));
_COM_SMARTPTR_TYPEDEF(IEnumBodies, __uuidof(IEnumBodies));
_COM_SMARTPTR_TYPEDEF(ITessellation, __uuidof(ITessellation));
_COM_SMARTPTR_TYPEDEF(IEnumLoops, __uuidof(IEnumLoops));
_COM_SMARTPTR_TYPEDEF(IEnumFaces, __uuidof(IEnumFaces));
_COM_SMARTPTR_TYPEDEF(IView, __uuidof(IView));
_COM_SMARTPTR_TYPEDEF(ISFSymbol, __uuidof(ISFSymbol));
_COM_SMARTPTR_TYPEDEF(IDatumTargetSym, __uuidof(IDatumTargetSym));
_COM_SMARTPTR_TYPEDEF(ICThread, __uuidof(ICThread));
_COM_SMARTPTR_TYPEDEF(IBomTable, __uuidof(IBomTable));
_COM_SMARTPTR_TYPEDEF(ICustomSymbol, __uuidof(ICustomSymbol));
_COM_SMARTPTR_TYPEDEF(IDrSection, __uuidof(IDrSection));
_COM_SMARTPTR_TYPEDEF(IEnumComponents, __uuidof(IEnumComponents));
_COM_SMARTPTR_TYPEDEF(IEnumComponents2, __uuidof(IEnumComponents2));
_COM_SMARTPTR_TYPEDEF(IEnumDrSections, __uuidof(IEnumDrSections));
_COM_SMARTPTR_TYPEDEF(IDetailCircle, __uuidof(IDetailCircle));
_COM_SMARTPTR_TYPEDEF(IProjectionArrow, __uuidof(IProjectionArrow));
_COM_SMARTPTR_TYPEDEF(IMultiJogLeader, __uuidof(IMultiJogLeader));
_COM_SMARTPTR_TYPEDEF(IDowelSymbol, __uuidof(IDowelSymbol));
_COM_SMARTPTR_TYPEDEF(IBlockInstance, __uuidof(IBlockInstance));
_COM_SMARTPTR_TYPEDEF(IBlockDefinition, __uuidof(IBlockDefinition));
_COM_SMARTPTR_TYPEDEF(IBreakLine, __uuidof(IBreakLine));
_COM_SMARTPTR_TYPEDEF(IFaceHatch, __uuidof(IFaceHatch));
_COM_SMARTPTR_TYPEDEF(ICenterMark, __uuidof(ICenterMark));
_COM_SMARTPTR_TYPEDEF(IMidSurface, __uuidof(IMidSurface));
_COM_SMARTPTR_TYPEDEF(IFrame, __uuidof(IFrame));
_COM_SMARTPTR_TYPEDEF(IStatusBarPane, __uuidof(IStatusBarPane));
_COM_SMARTPTR_TYPEDEF(IAssemblyDoc, __uuidof(IAssemblyDoc));
_COM_SMARTPTR_TYPEDEF(IMember, __uuidof(IMember));
_COM_SMARTPTR_TYPEDEF(IDragOperator, __uuidof(IDragOperator));
_COM_SMARTPTR_TYPEDEF(IDrawingDoc, __uuidof(IDrawingDoc));
_COM_SMARTPTR_TYPEDEF(ISheet, __uuidof(ISheet));
_COM_SMARTPTR_TYPEDEF(IModeler, __uuidof(IModeler));
_COM_SMARTPTR_TYPEDEF(IEnvironment, __uuidof(IEnvironment));
_COM_SMARTPTR_TYPEDEF(IEnumDocuments, __uuidof(IEnumDocuments));
_COM_SMARTPTR_TYPEDEF(IMathUtility, __uuidof(IMathUtility));
_COM_SMARTPTR_TYPEDEF(IEnumDocuments2, __uuidof(IEnumDocuments2));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPage2, __uuidof(IPropertyManagerPage2));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageGroup, __uuidof(IPropertyManagerPageGroup));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageControl, __uuidof(IPropertyManagerPageControl));
_COM_SMARTPTR_TYPEDEF(IRefAxis, __uuidof(IRefAxis));
_COM_SMARTPTR_TYPEDEF(IMate, __uuidof(IMate));
_COM_SMARTPTR_TYPEDEF(IMateEntity, __uuidof(IMateEntity));
_COM_SMARTPTR_TYPEDEF(ISWPropertySheet, __uuidof(ISWPropertySheet));
_COM_SMARTPTR_TYPEDEF(IRibFeatureData, __uuidof(IRibFeatureData));
_COM_SMARTPTR_TYPEDEF(IDomeFeatureData, __uuidof(IDomeFeatureData));
_COM_SMARTPTR_TYPEDEF(ISketchLine, __uuidof(ISketchLine));
_COM_SMARTPTR_TYPEDEF(ISketchArc, __uuidof(ISketchArc));
_COM_SMARTPTR_TYPEDEF(ISketchEllipse, __uuidof(ISketchEllipse));
_COM_SMARTPTR_TYPEDEF(ISketchParabola, __uuidof(ISketchParabola));
_COM_SMARTPTR_TYPEDEF(ISketchSpline, __uuidof(ISketchSpline));
_COM_SMARTPTR_TYPEDEF(ILightDialog, __uuidof(ILightDialog));
_COM_SMARTPTR_TYPEDEF(IEnumCurves, __uuidof(IEnumCurves));
_COM_SMARTPTR_TYPEDEF(ISimpleHoleFeatureData, __uuidof(ISimpleHoleFeatureData));
_COM_SMARTPTR_TYPEDEF(IWizardHoleFeatureData, __uuidof(IWizardHoleFeatureData));
_COM_SMARTPTR_TYPEDEF(IChamferFeatureData, __uuidof(IChamferFeatureData));
_COM_SMARTPTR_TYPEDEF(IDraftFeatureData, __uuidof(IDraftFeatureData));
_COM_SMARTPTR_TYPEDEF(ISimpleFilletFeatureData, __uuidof(ISimpleFilletFeatureData));
_COM_SMARTPTR_TYPEDEF(IVariableFilletFeatureData, __uuidof(IVariableFilletFeatureData));
_COM_SMARTPTR_TYPEDEF(IExtrudeFeatureData, __uuidof(IExtrudeFeatureData));
_COM_SMARTPTR_TYPEDEF(IRevolveFeatureData, __uuidof(IRevolveFeatureData));
_COM_SMARTPTR_TYPEDEF(IMirrorPatternFeatureData, __uuidof(IMirrorPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(ICircularPatternFeatureData, __uuidof(ICircularPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(ILinearPatternFeatureData, __uuidof(ILinearPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(ITablePatternFeatureData, __uuidof(ITablePatternFeatureData));
_COM_SMARTPTR_TYPEDEF(ISketchPatternFeatureData, __uuidof(ISketchPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(IMirrorSolidFeatureData, __uuidof(IMirrorSolidFeatureData));
_COM_SMARTPTR_TYPEDEF(ISheetMetalFeatureData, __uuidof(ISheetMetalFeatureData));
_COM_SMARTPTR_TYPEDEF(IOneBendFeatureData, __uuidof(IOneBendFeatureData));
_COM_SMARTPTR_TYPEDEF(IBendsFeatureData, __uuidof(IBendsFeatureData));
_COM_SMARTPTR_TYPEDEF(IBaseFlangeFeatureData, __uuidof(IBaseFlangeFeatureData));
_COM_SMARTPTR_TYPEDEF(IEdgeFlangeFeatureData, __uuidof(IEdgeFlangeFeatureData));
_COM_SMARTPTR_TYPEDEF(IMiterFlangeFeatureData, __uuidof(IMiterFlangeFeatureData));
_COM_SMARTPTR_TYPEDEF(ISketchedBendFeatureData, __uuidof(ISketchedBendFeatureData));
_COM_SMARTPTR_TYPEDEF(IClosedCornerFeatureData, __uuidof(IClosedCornerFeatureData));
_COM_SMARTPTR_TYPEDEF(IFoldsFeatureData, __uuidof(IFoldsFeatureData));
_COM_SMARTPTR_TYPEDEF(IFlatPatternFeatureData, __uuidof(IFlatPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(ILocalLinearPatternFeatureData, __uuidof(ILocalLinearPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(ILocalCircularPatternFeatureData, __uuidof(ILocalCircularPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(IDerivedPatternFeatureData, __uuidof(IDerivedPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageLabel, __uuidof(IPropertyManagerPageLabel));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageCheckbox, __uuidof(IPropertyManagerPageCheckbox));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageButton, __uuidof(IPropertyManagerPageButton));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageOption, __uuidof(IPropertyManagerPageOption));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageTextbox, __uuidof(IPropertyManagerPageTextbox));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageCombobox, __uuidof(IPropertyManagerPageCombobox));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageActiveX, __uuidof(IPropertyManagerPageActiveX));
_COM_SMARTPTR_TYPEDEF(IProjectionCurveFeatureData, __uuidof(IProjectionCurveFeatureData));
_COM_SMARTPTR_TYPEDEF(IScaleFeatureData, __uuidof(IScaleFeatureData));
_COM_SMARTPTR_TYPEDEF(IShellFeatureData, __uuidof(IShellFeatureData));
_COM_SMARTPTR_TYPEDEF(ISweepFeatureData, __uuidof(ISweepFeatureData));
_COM_SMARTPTR_TYPEDEF(ILoftFeatureData, __uuidof(ILoftFeatureData));
_COM_SMARTPTR_TYPEDEF(IThickenFeatureData, __uuidof(IThickenFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfaceCutFeatureData, __uuidof(ISurfaceCutFeatureData));
_COM_SMARTPTR_TYPEDEF(IReplaceFaceFeatureData, __uuidof(IReplaceFaceFeatureData));
_COM_SMARTPTR_TYPEDEF(IMacroFeatureData, __uuidof(IMacroFeatureData));
_COM_SMARTPTR_TYPEDEF(ICurveDrivenPatternFeatureData, __uuidof(ICurveDrivenPatternFeatureData));
_COM_SMARTPTR_TYPEDEF(IRipFeatureData, __uuidof(IRipFeatureData));
_COM_SMARTPTR_TYPEDEF(IHemFeatureData, __uuidof(IHemFeatureData));
_COM_SMARTPTR_TYPEDEF(IBreakCornerFeatureData, __uuidof(IBreakCornerFeatureData));
_COM_SMARTPTR_TYPEDEF(IJogFeatureData, __uuidof(IJogFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfExtrudeFeatureData, __uuidof(ISurfExtrudeFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfRevolveFeatureData, __uuidof(ISurfRevolveFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfaceOffsetFeatureData, __uuidof(ISurfaceOffsetFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfaceKnitFeatureData, __uuidof(ISurfaceKnitFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfaceExtendFeatureData, __uuidof(ISurfaceExtendFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfacePlanarFeatureData, __uuidof(ISurfacePlanarFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfaceTrimFeatureData, __uuidof(ISurfaceTrimFeatureData));
_COM_SMARTPTR_TYPEDEF(ISurfaceRadiateFeatureData, __uuidof(ISurfaceRadiateFeatureData));
_COM_SMARTPTR_TYPEDEF(IRefPlaneFeatureData, __uuidof(IRefPlaneFeatureData));
_COM_SMARTPTR_TYPEDEF(ILoftedBendsFeatureData, __uuidof(ILoftedBendsFeatureData));
_COM_SMARTPTR_TYPEDEF(IReferencePointCurveFeatureData, __uuidof(IReferencePointCurveFeatureData));
_COM_SMARTPTR_TYPEDEF(IFreePointCurveFeatureData, __uuidof(IFreePointCurveFeatureData));
_COM_SMARTPTR_TYPEDEF(ICompositeCurveFeatureData, __uuidof(ICompositeCurveFeatureData));
_COM_SMARTPTR_TYPEDEF(IHelixFeatureData, __uuidof(IHelixFeatureData));
_COM_SMARTPTR_TYPEDEF(IImportedCurveFeatureData, __uuidof(IImportedCurveFeatureData));
_COM_SMARTPTR_TYPEDEF(ISketchRegion, __uuidof(ISketchRegion));
_COM_SMARTPTR_TYPEDEF(ISketchContour, __uuidof(ISketchContour));
_COM_SMARTPTR_TYPEDEF(DSldWorksEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DPartDocEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DDrawingDocEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DAssemblyDocEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DModelViewEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DFeatMgrViewEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(DSWPropertySheetEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ISdmDoc, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageListbox, __uuidof(IPropertyManagerPageListbox));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageNumberbox, __uuidof(IPropertyManagerPageNumberbox));
_COM_SMARTPTR_TYPEDEF(IPropertyManagerPageSelectionbox, __uuidof(IPropertyManagerPageSelectionbox));
_COM_SMARTPTR_TYPEDEF(IRibFeatureData2, __uuidof(IRibFeatureData2));
_COM_SMARTPTR_TYPEDEF(IDomeFeatureData2, __uuidof(IDomeFeatureData2));
_COM_SMARTPTR_TYPEDEF(ISimpleHoleFeatureData2, __uuidof(ISimpleHoleFeatureData2));
_COM_SMARTPTR_TYPEDEF(IWizardHoleFeatureData2, __uuidof(IWizardHoleFeatureData2));
_COM_SMARTPTR_TYPEDEF(IChamferFeatureData2, __uuidof(IChamferFeatureData2));
_COM_SMARTPTR_TYPEDEF(IDraftFeatureData2, __uuidof(IDraftFeatureData2));
_COM_SMARTPTR_TYPEDEF(ISimpleFilletFeatureData2, __uuidof(ISimpleFilletFeatureData2));
_COM_SMARTPTR_TYPEDEF(IVariableFilletFeatureData2, __uuidof(IVariableFilletFeatureData2));
_COM_SMARTPTR_TYPEDEF(IExtrudeFeatureData2, __uuidof(IExtrudeFeatureData2));
_COM_SMARTPTR_TYPEDEF(IRevolveFeatureData2, __uuidof(IRevolveFeatureData2));

//
// Type library items
//

struct __declspec(uuid("83a33d22-27c5-11ce-bfd4-00400513bb57"))
ISldWorks : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ActiveDoc (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_IActiveDoc (
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall OpenDoc (
        BSTR Name,
        long type,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IOpenDoc (
        BSTR Name,
        long type,
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall ActivateDoc (
        BSTR Name,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IActivateDoc (
        BSTR Name,
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall SendMsgToUser (
        BSTR Message ) = 0;
    virtual HRESULT __stdcall Frame (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFrameObject (
        struct IFrame * * retval ) = 0;
    virtual HRESULT __stdcall ExitApp ( ) = 0;
    virtual HRESULT __stdcall CloseDoc (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall NewPart (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall INewPart (
        struct IPartDoc * * retval ) = 0;
    virtual HRESULT __stdcall NewAssembly (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall INewAssembly (
        struct IAssemblyDoc * * retval ) = 0;
    virtual HRESULT __stdcall NewDrawing (
        long templateToUse,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall INewDrawing (
        long templateToUse,
        struct IDrawingDoc * * retval ) = 0;
    virtual HRESULT __stdcall DateCode (
        long * retval ) = 0;
    virtual HRESULT __stdcall RevisionNumber (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall LoadFile (
        BSTR fileName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddFileOpenItem (
        BSTR CallbackFcnAndModule,
        BSTR Description,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddFileSaveAsItem (
        BSTR CallbackFcnAndModule,
        BSTR Description,
        long type,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall PreSelectDwgTemplateSize (
        long templateToUse,
        BSTR templateName ) = 0;
    virtual HRESULT __stdcall DocumentVisible (
        VARIANT_BOOL Visible,
        long type ) = 0;
    virtual HRESULT __stdcall DefineAttribute (
        BSTR Name,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IDefineAttribute (
        BSTR Name,
        struct IAttributeDef * * retval ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_UserControl (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_UserControl (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall DisplayStatusBar (
        VARIANT_BOOL onOff ) = 0;
    virtual HRESULT __stdcall CreateNewWindow ( ) = 0;
    virtual HRESULT __stdcall ArrangeIcons ( ) = 0;
    virtual HRESULT __stdcall ArrangeWindows (
        long Style ) = 0;
    virtual HRESULT __stdcall QuitDoc (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall GetModeler (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetModeler (
        struct IModeler * * retval ) = 0;
    virtual HRESULT __stdcall GetEnvironment (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetEnvironment (
        struct IEnvironment * * retval ) = 0;
    virtual HRESULT __stdcall NewDrawing2 (
        long templateToUse,
        BSTR templateName,
        long paperSize,
        double width,
        double height,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall INewDrawing2 (
        long templateToUse,
        BSTR templateName,
        long paperSize,
        double width,
        double height,
        struct IDrawingDoc * * retval ) = 0;
    virtual HRESULT __stdcall SetOptions (
        BSTR Message,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall PreviewDoc (
        long * hWnd,
        BSTR FullName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetSearchFolders (
        long folderType,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetSearchFolders (
        long folderType,
        BSTR folders,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceToggle (
        long userPreferenceToggle,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceToggle (
        long userPreferenceValue,
        VARIANT_BOOL onFlag ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceDoubleValue (
        long userPreferenceValue,
        double * Value ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceDoubleValue (
        long userPreferenceValue,
        double Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_ActivePrinter (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ActivePrinter (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall LoadFile2 (
        BSTR fileName,
        BSTR ArgString,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceIntegerValue (
        long userPreferenceValue,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceIntegerValue (
        long userPreferenceValue,
        long Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall RemoveMenuPopupItem (
        long DocType,
        long SelectType,
        BSTR Item,
        BSTR CallbackFcnAndModule,
        BSTR CustomNames,
        long Unused,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall RemoveMenu (
        long DocType,
        BSTR MenuItemString,
        BSTR CallbackFcnAndModule,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall RemoveFileOpenItem (
        BSTR CallbackFcnAndModule,
        BSTR Description,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall RemoveFileSaveAsItem (
        BSTR CallbackFcnAndModule,
        BSTR Description,
        long type,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ReplaceReferencedDocument (
        BSTR referencingDocument,
        BSTR referencedDocument,
        BSTR newReference,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddMenuItem (
        long DocType,
        BSTR Menu,
        long Postion,
        BSTR CallbackModuleAndFcn,
        long * retval ) = 0;
    virtual HRESULT __stdcall AddMenuPopupItem (
        long DocType,
        long selType,
        BSTR Item,
        BSTR CallbackFcnAndModule,
        BSTR CustomNames,
        long * retval ) = 0;
    virtual HRESULT __stdcall RemoveUserMenu (
        long DocType,
        long menuIdIn,
        BSTR moduleName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddToolbar (
        BSTR moduleName,
        BSTR title,
        long smallBitmapHandle,
        long largeBitmapHandle,
        long * retval ) = 0;
    virtual HRESULT __stdcall AddToolbarCommand (
        BSTR moduleName,
        long toolbarId,
        int toolbarIndex,
        BSTR commandString,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ShowToolbar (
        BSTR moduleName,
        long toolbarId,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall HideToolbar (
        BSTR moduleName,
        long toolbarId,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall RemoveToolbar (
        BSTR Module,
        long toolbarId,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetToolbarState (
        BSTR Module,
        long toolbarId,
        long toolbarState,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceStringListValue (
        long userPreference,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceStringListValue (
        long userPreference,
        BSTR Value ) = 0;
    virtual HRESULT __stdcall EnableStereoDisplay (
        VARIANT_BOOL bEnable,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IEnableStereoDisplay (
        VARIANT_BOOL bEnable,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDocumentDependencies (
        BSTR Document,
        long traverseflag,
        long searchflag,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDocumentDependencies (
        BSTR Document,
        long traverseflag,
        long searchflag,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetDocumentDependenciesCount (
        BSTR Document,
        long traverseflag,
        long searchflag,
        long * retval ) = 0;
    virtual HRESULT __stdcall OpenDocSilent (
        BSTR fileName,
        long type,
        long * Errors,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IOpenDocSilent (
        BSTR fileName,
        long type,
        long * Errors,
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall CallBack (
        BSTR callBackFunc,
        long defaultRetVal,
        BSTR callBackArgs,
        long * retval ) = 0;
    virtual HRESULT __stdcall SendMsgToUser2 (
        BSTR Message,
        long icon,
        long buttons,
        long * result ) = 0;
    virtual HRESULT __stdcall EnumDocuments (
        struct IEnumDocuments * * retval ) = 0;
    virtual HRESULT __stdcall LoadAddIn (
        BSTR fileName,
        long * retval ) = 0;
    virtual HRESULT __stdcall UnloadAddIn (
        BSTR fileName,
        long * retval ) = 0;
    virtual HRESULT __stdcall RecordLine (
        BSTR text,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall VersionHistory (
        BSTR fileName,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IVersionHistory (
        BSTR fileName,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetVersionHistoryCount (
        BSTR fileName,
        int * retval ) = 0;
    virtual HRESULT __stdcall AllowFailedFeatureCreation (
        VARIANT_BOOL yesNo,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetFirstDocument (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall GetCurrentWorkingDirectory (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetCurrentWorkingDirectory (
        BSTR currentWorkingDirectory,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDataFolder (
        VARIANT_BOOL bShowErrorMsg,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetSelectionFilter (
        long selType,
        VARIANT_BOOL * state ) = 0;
    virtual HRESULT __stdcall SetSelectionFilter (
        long selType,
        VARIANT_BOOL state ) = 0;
    virtual HRESULT __stdcall ActivateDoc2 (
        BSTR Name,
        VARIANT_BOOL silent,
        long * Errors,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IActivateDoc2 (
        BSTR Name,
        VARIANT_BOOL silent,
        long * Errors,
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall GetMouseDragMode (
        long command,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetCurrentLanguage (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstDocument (
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall SanityCheck (
        long swItemToCheck,
        long * P1,
        long * P2,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddMenu (
        long DocType,
        BSTR Menu,
        long position,
        long * retval ) = 0;
    virtual HRESULT __stdcall CheckpointConvertedDocument (
        BSTR docName,
        long * retval ) = 0;
    virtual HRESULT __stdcall OpenDoc2 (
        BSTR fileName,
        long type,
        VARIANT_BOOL ReadOnly,
        VARIANT_BOOL viewOnly,
        VARIANT_BOOL silent,
        long * Errors,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IOpenDoc2 (
        BSTR fileName,
        long type,
        VARIANT_BOOL ReadOnly,
        VARIANT_BOOL viewOnly,
        VARIANT_BOOL silent,
        long * Errors,
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall GetMassProperties (
        BSTR filePathName,
        BSTR configurationName,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMassProperties (
        BSTR filePathName,
        BSTR configurationName,
        double * mPropsData,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLocalizedMenuName (
        long menuId,
        BSTR * menuName ) = 0;
    virtual HRESULT __stdcall GetDocumentDependencies2 (
        BSTR Document,
        VARIANT_BOOL traverseflag,
        VARIANT_BOOL searchflag,
        VARIANT_BOOL addReadOnlyInfo,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDocumentDependencies2 (
        BSTR Document,
        VARIANT_BOOL traverseflag,
        VARIANT_BOOL searchflag,
        VARIANT_BOOL addReadOnlyInfo,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetDocumentDependenciesCount2 (
        BSTR Document,
        VARIANT_BOOL traverseflag,
        VARIANT_BOOL searchflag,
        VARIANT_BOOL addReadOnlyInfo,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSelectionFilters (
        VARIANT * selType ) = 0;
    virtual HRESULT __stdcall SetSelectionFilters (
        VARIANT selType,
        VARIANT_BOOL state ) = 0;
    virtual HRESULT __stdcall GetApplySelectionFilter (
        VARIANT_BOOL * state ) = 0;
    virtual HRESULT __stdcall SetApplySelectionFilter (
        VARIANT_BOOL state ) = 0;
    virtual HRESULT __stdcall NewDocument (
        BSTR templateName,
        long paperSize,
        double width,
        double height,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall INewDocument (
        BSTR templateName,
        long paperSize,
        double width,
        double height,
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall GetDocumentTemplate (
        long mode,
        BSTR templateName,
        long paperSize,
        double width,
        double height,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetSelectionFiltersCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetSelectionFilters (
        long * retval ) = 0;
    virtual HRESULT __stdcall ISetSelectionFilters (
        long count,
        long * selType,
        VARIANT_BOOL state ) = 0;
    virtual HRESULT __stdcall GetCurrSolidWorksRegSubKey (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SolidWorksExplorer ( ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceStringValue (
        long userPreference,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceStringValue (
        long userPreference,
        BSTR Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetCurrentMacroPathName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetOpenDocumentByName (
        BSTR documentName,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetOpenDocumentByName (
        BSTR documentName,
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall GetCurrentKernelVersions (
        BSTR * version1,
        BSTR * version2,
        BSTR * version3 ) = 0;
    virtual HRESULT __stdcall CreatePrunedModelArchive (
        BSTR pathname,
        BSTR zipPathName,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall OpenDoc3 (
        BSTR fileName,
        long type,
        VARIANT_BOOL ReadOnly,
        VARIANT_BOOL viewOnly,
        VARIANT_BOOL RapidDraft,
        VARIANT_BOOL silent,
        long * Errors,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IOpenDoc3 (
        BSTR fileName,
        long type,
        VARIANT_BOOL ReadOnly,
        VARIANT_BOOL viewOnly,
        VARIANT_BOOL RapidDraft,
        VARIANT_BOOL silent,
        long * Errors,
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall AddToolbar2 (
        BSTR moduleNameIn,
        BSTR titleIn,
        long smallBitmapHandleIn,
        long largeBitmapHandleIn,
        long menuPosIn,
        long decTemplateTypeIn,
        long * retvalOut ) = 0;
    virtual HRESULT __stdcall OpenModelConfiguration (
        BSTR pathname,
        BSTR configName,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall GetToolbarDock (
        BSTR ModuleIn,
        long toolbarIDIn,
        long * pDockStateOut ) = 0;
    virtual HRESULT __stdcall SetToolbarDock (
        BSTR ModuleIn,
        long toolbarIDIn,
        long docStatePosIn ) = 0;
    virtual HRESULT __stdcall GetMathUtility (
        IDispatch * * utilityOut ) = 0;
    virtual HRESULT __stdcall IGetMathUtility (
        struct IMathUtility * * utilityOut ) = 0;
    virtual HRESULT __stdcall OpenDoc4 (
        BSTR fileName,
        long type,
        long options,
        BSTR configuration,
        long * Errors,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IOpenDoc4 (
        BSTR fileName,
        long type,
        long options,
        BSTR configuration,
        long * Errors,
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall IsRapidDraft (
        BSTR fileName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTemplateSizes (
        BSTR fileName,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTemplateSizes (
        BSTR fileName,
        long * paperSize,
        double * width,
        double * height,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetColorTable (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetColorTable (
        struct IColorTable * * retval ) = 0;
    virtual HRESULT __stdcall SetMissingReferencePathName (
        BSTR fileName ) = 0;
    virtual HRESULT __stdcall GetUserUnit (
        long UnitType,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetUserUnit (
        long UnitType,
        struct IUserUnit * * retval ) = 0;
    virtual HRESULT __stdcall SetMouseDragMode (
        long command,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetPromptFilename (
        BSTR fileName ) = 0;
    virtual HRESULT __stdcall SetAddinCallbackInfo (
        long ModuleHandle,
        IDispatch * AddinCallbacks,
        long Cookie,
        VARIANT_BOOL * status ) = 0;
    virtual HRESULT __stdcall AddMenuItem2 (
        long DocumentType,
        long Cookie,
        BSTR MenuItem,
        long position,
        BSTR MenuCallback,
        BSTR MenuEnableMethod,
        BSTR HintString,
        VARIANT_BOOL * IsMenuItemAdded ) = 0;
    virtual HRESULT __stdcall AddToolbar3 (
        long Cookie,
        BSTR title,
        long SmallBitmapResourceID,
        long LargeBitmapResourceID,
        long MenuPositionForToolbar,
        long DocumentType,
        long * NewToolBarID ) = 0;
    virtual HRESULT __stdcall RemoveToolbar2 (
        long Cookie,
        long toolbarId,
        VARIANT_BOOL * status ) = 0;
    virtual HRESULT __stdcall AddToolbarCommand2 (
        long Cookie,
        long toolbarId,
        long toolbarIndex,
        BSTR ButtonCallback,
        BSTR ButtonEnableMethod,
        BSTR toolTip,
        BSTR HintString,
        VARIANT_BOOL * IsToolbarCommandAdded ) = 0;
    virtual HRESULT __stdcall ShowToolbar2 (
        long Cookie,
        long toolbarId,
        VARIANT_BOOL * status ) = 0;
    virtual HRESULT __stdcall HideToolbar2 (
        long Cookie,
        long toolbarId,
        VARIANT_BOOL * status ) = 0;
    virtual HRESULT __stdcall GetToolbarState2 (
        long Cookie,
        long toolbarId,
        long toolbarState,
        VARIANT_BOOL * IsInGivenState ) = 0;
    virtual HRESULT __stdcall GetToolbarDock2 (
        long Cookie,
        long toolbarId,
        long * DockingState ) = 0;
    virtual HRESULT __stdcall SetToolbarDock2 (
        long Cookie,
        long toolbarId,
        long DockingState,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_IActiveDoc2 (
        struct IModelDoc2 * * retval ) = 0;
    virtual HRESULT __stdcall IActivateDoc3 (
        BSTR Name,
        VARIANT_BOOL silent,
        long * Errors,
        struct IModelDoc2 * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstDocument2 (
        struct IModelDoc2 * * retval ) = 0;
    virtual HRESULT __stdcall INewDocument2 (
        BSTR templateName,
        long paperSize,
        double width,
        double height,
        struct IModelDoc2 * * retval ) = 0;
    virtual HRESULT __stdcall IGetOpenDocumentByName2 (
        BSTR documentName,
        struct IModelDoc2 * * retval ) = 0;
    virtual HRESULT __stdcall IOpenDoc5 (
        BSTR fileName,
        long type,
        long options,
        BSTR configuration,
        long * Errors,
        struct IModelDoc2 * * retval ) = 0;
    virtual HRESULT __stdcall EnumDocuments2 (
        struct IEnumDocuments2 * * retval ) = 0;
    virtual HRESULT __stdcall CreatePropertyManagerPage (
        BSTR title,
        long options,
        IDispatch * handler,
        long * Errors,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePropertyManagerPage (
        BSTR title,
        long options,
        IDispatch * handler,
        long * Errors,
        struct IPropertyManagerPage2 * * retval ) = 0;
    virtual HRESULT __stdcall GetAddInObject (
        BSTR clsid,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall GetProcessID (
        long * pid ) = 0;
    virtual HRESULT __stdcall OpenDoc6 (
        BSTR fileName,
        long type,
        long options,
        BSTR configuration,
        long * Errors,
        long * Warnings,
        struct IModelDoc2 * * retval ) = 0;
    virtual HRESULT __stdcall AddFileOpenItem2 (
        long Cookie,
        BSTR MethodName,
        BSTR Description,
        BSTR Extension,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall RemoveFileOpenItem2 (
        long Cookie,
        BSTR MethodName,
        BSTR Description,
        BSTR Extension,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddFileSaveAsItem2 (
        long Cookie,
        BSTR MethodName,
        BSTR Description,
        BSTR Extension,
        long DocumentType,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall RemoveFileSaveAsItem2 (
        long Cookie,
        BSTR MethodName,
        BSTR Description,
        BSTR Extension,
        long DocumentType,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddMenuPopupItem2 (
        long DocumentType,
        long Cookie,
        long SelectType,
        BSTR PopupItemName,
        BSTR MenuCallback,
        BSTR MenuEnableMethod,
        BSTR HintString,
        BSTR CustomNames,
        VARIANT_BOOL * WasItemAdded ) = 0;
    virtual HRESULT __stdcall RemoveMenuPopupItem2 (
        long DocumentType,
        long Cookie,
        long SelectType,
        BSTR PopupItemName,
        BSTR MenuCallback,
        BSTR MenuEnableMethod,
        BSTR HintString,
        BSTR CustomNames,
        VARIANT_BOOL * WasItemRemoved ) = 0;
    virtual HRESULT __stdcall GetMassProperties2 (
        BSTR filePathName,
        BSTR configurationName,
        long Accuracy,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMassProperties2 (
        BSTR filePathName,
        BSTR configurationName,
        double * mPropsData,
        long Accuracy,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall HighlightTBButton (
        long cmdID ) = 0;
    virtual HRESULT __stdcall RunMacro (
        BSTR filePathName,
        BSTR moduleName,
        BSTR procedureName,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33d46-27c5-11ce-bfd4-00400513bb57"))
IModelDoc : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_SelectionManager (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_ISelectionManager (
        struct ISelectionMgr * * retval ) = 0;
    virtual HRESULT __stdcall put_SelectionManager (
        IDispatch * retval ) = 0;
    virtual HRESULT __stdcall get_ActiveView (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_IActiveView (
        struct IModelView * * retval ) = 0;
    virtual HRESULT __stdcall put_ActiveView (
        IDispatch * retval ) = 0;
    virtual HRESULT __stdcall get_LengthUnit (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_LengthUnit (
        long retval ) = 0;
    virtual HRESULT __stdcall get_LightSourceUserName (
        long id,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_LightSourceUserName (
        long id,
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_LightSourcePropertyValues (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_LightSourcePropertyValues (
        long id,
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_SceneName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_SceneName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_SceneUserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_SceneUserName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall FeatureFillet (
        double r1,
        VARIANT_BOOL propagate,
        VARIANT_BOOL ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType ) = 0;
    virtual HRESULT __stdcall GridOptions (
        VARIANT_BOOL dispGrid,
        double gridSpacing,
        VARIANT_BOOL snap,
        VARIANT_BOOL dotStyle,
        short nMajor,
        short nMinor,
        VARIANT_BOOL align2edge,
        VARIANT_BOOL angleSnap,
        double angleUnit,
        VARIANT_BOOL minorAuto ) = 0;
    virtual HRESULT __stdcall SetUnits (
        short uType,
        short fractBase,
        short fractDenom,
        short sigDigits,
        VARIANT_BOOL roundToFraction ) = 0;
    virtual HRESULT __stdcall LBDownAt (
        long flags,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall LBUpAt (
        long flags,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall DragTo (
        long flags,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall SelectAt (
        long flags,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall CreateLineVB (
        double x1,
        double y1,
        double z1,
        double x2,
        double y2,
        double z2 ) = 0;
    virtual HRESULT __stdcall CreateLine (
        VARIANT P1,
        VARIANT P2,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateCenterLineVB (
        double x1,
        double y1,
        double z1,
        double x2,
        double y2,
        double z2 ) = 0;
    virtual HRESULT __stdcall CreateCenterLine (
        VARIANT P1,
        VARIANT P2,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateArcVB (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        double p3x,
        double p3y,
        double p3z,
        short dir ) = 0;
    virtual HRESULT __stdcall CreateArc (
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        short dir,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateCircleVB (
        double p1x,
        double p1y,
        double p1z,
        double radius ) = 0;
    virtual HRESULT __stdcall CreateCircleByRadius (
        VARIANT P1,
        double radius,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLines (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall SketchTrim (
        long op,
        long selEnd,
        double x,
        double y ) = 0;
    virtual HRESULT __stdcall SketchOffsetEdges (
        double val ) = 0;
    virtual HRESULT __stdcall SketchRectangle (
        double val1,
        double val2,
        double z1,
        double val3,
        double val4,
        double z2,
        VARIANT_BOOL val5 ) = 0;
    virtual HRESULT __stdcall SketchPoint (
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall FeatureCut (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2 ) = 0;
    virtual HRESULT __stdcall FeatureBoss (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2 ) = 0;
    virtual HRESULT __stdcall SimpleHole (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2 ) = 0;
    virtual HRESULT __stdcall FeatureLinearPattern (
        long num1,
        double spacing1,
        long num2,
        double spacing2,
        VARIANT_BOOL flipDir1,
        VARIANT_BOOL flipDir2,
        BSTR dName1,
        BSTR dName2 ) = 0;
    virtual HRESULT __stdcall NameView (
        BSTR vName ) = 0;
    virtual HRESULT __stdcall ShowNamedView (
        BSTR vName ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtOffset (
        double val,
        VARIANT_BOOL flipDir ) = 0;
    virtual HRESULT __stdcall Toolbars (
        VARIANT_BOOL m,
        VARIANT_BOOL vw,
        VARIANT_BOOL skMain,
        VARIANT_BOOL sk,
        VARIANT_BOOL feat,
        VARIANT_BOOL constr,
        VARIANT_BOOL macro ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtAngle (
        double val,
        VARIANT_BOOL flipDir ) = 0;
    virtual HRESULT __stdcall SetParamValue (
        double val ) = 0;
    virtual HRESULT __stdcall AddRelation (
        BSTR relStr ) = 0;
    virtual HRESULT __stdcall DeleteAllRelations ( ) = 0;
    virtual HRESULT __stdcall HoleWizard (
        double depth,
        short endType,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long hType,
        double d1,
        double d2,
        double d3,
        double d4,
        double d5,
        double d6,
        double d7,
        double d8,
        double d9,
        double d10,
        double d11,
        double d12 ) = 0;
    virtual HRESULT __stdcall SaveAs (
        BSTR newName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ActivateSelectedFeature ( ) = 0;
    virtual HRESULT __stdcall SelectByName (
        long flags,
        BSTR idStr ) = 0;
    virtual HRESULT __stdcall SketchAddConstraints (
        BSTR idStr ) = 0;
    virtual HRESULT __stdcall SketchConstraintsDel (
        long constrInd,
        BSTR idStr ) = 0;
    virtual HRESULT __stdcall SketchConstraintsDelAll ( ) = 0;
    virtual HRESULT __stdcall Lock ( ) = 0;
    virtual HRESULT __stdcall UnLock ( ) = 0;
    virtual HRESULT __stdcall InsertFeatureShell (
        double thickness,
        VARIANT_BOOL outward ) = 0;
    virtual HRESULT __stdcall SketchFillet (
        double rad ) = 0;
    virtual HRESULT __stdcall FeatureChamfer (
        double width,
        double angle,
        VARIANT_BOOL flip ) = 0;
    virtual HRESULT __stdcall InsertMfDraft (
        double angle,
        VARIANT_BOOL flipDir,
        VARIANT_BOOL isEdgeDraft,
        long propType ) = 0;
    virtual HRESULT __stdcall ParentChildRelationship ( ) = 0;
    virtual HRESULT __stdcall SketchSpline (
        long morePts,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall SelectSketchPoint (
        double x,
        double y,
        long incidence ) = 0;
    virtual HRESULT __stdcall SelectSketchLine (
        double x0,
        double y0,
        long inc0,
        double x1,
        double y1,
        long inc1 ) = 0;
    virtual HRESULT __stdcall SelectSketchArc (
        double x0,
        double y0,
        long inc0,
        double x1,
        double y1,
        long inc1,
        double xC,
        double yC,
        long incC,
        long rotDir ) = 0;
    virtual HRESULT __stdcall SelectSketchSpline (
        long size,
        double x0,
        double y0,
        long inc0,
        double x1,
        double y1,
        long inc1,
        double xC,
        double yC,
        long incC ) = 0;
    virtual HRESULT __stdcall CreateTangentArc (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Create3PointArc (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        double p3x,
        double p3y,
        double p3z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateArcByCenter (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        double p3x,
        double p3y,
        double p3z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateCircle (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddDimension (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddHorizontalDimension (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddVerticalDimension (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectSketchItem (
        long selOpt,
        BSTR Name,
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ClearSelection ( ) = 0;
    virtual HRESULT __stdcall Select (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall AndSelect (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall CreatePoint (
        double pointX,
        double pointY,
        double pointZ,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateLineDB (
        double sx,
        double sy,
        double sz,
        double ex,
        double ey,
        double ez,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateArcDB (
        double x1,
        double y1,
        double z1,
        double x2,
        double y2,
        double z2,
        double x3,
        double y3,
        double z3,
        short dir,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateCircleDB (
        double cx,
        double cy,
        double cz,
        double radius,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreatePointDB (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTitle (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetPathName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetType (
        long * retval ) = 0;
    virtual HRESULT __stdcall InsertObject ( ) = 0;
    virtual HRESULT __stdcall EditClearAll ( ) = 0;
    virtual HRESULT __stdcall EditCopy ( ) = 0;
    virtual HRESULT __stdcall EditCut ( ) = 0;
    virtual HRESULT __stdcall ObjectDisplayContent ( ) = 0;
    virtual HRESULT __stdcall ObjectDisplayAsIcon ( ) = 0;
    virtual HRESULT __stdcall ObjectResetsize ( ) = 0;
    virtual HRESULT __stdcall WindowRedraw ( ) = 0;
    virtual HRESULT __stdcall Dummy3 ( ) = 0;
    virtual HRESULT __stdcall SetPickMode ( ) = 0;
    virtual HRESULT __stdcall ViewRotateminusx ( ) = 0;
    virtual HRESULT __stdcall ViewRotateminusy ( ) = 0;
    virtual HRESULT __stdcall ViewRotateminusz ( ) = 0;
    virtual HRESULT __stdcall ViewRotateplusx ( ) = 0;
    virtual HRESULT __stdcall ViewRotateplusy ( ) = 0;
    virtual HRESULT __stdcall ViewRotateplusz ( ) = 0;
    virtual HRESULT __stdcall ViewTranslateminusx ( ) = 0;
    virtual HRESULT __stdcall ViewTranslateminusy ( ) = 0;
    virtual HRESULT __stdcall ViewTranslateplusx ( ) = 0;
    virtual HRESULT __stdcall ViewTranslateplusy ( ) = 0;
    virtual HRESULT __stdcall ViewRotXMinusNinety ( ) = 0;
    virtual HRESULT __stdcall ViewRotYMinusNinety ( ) = 0;
    virtual HRESULT __stdcall ViewRotYPlusNinety ( ) = 0;
    virtual HRESULT __stdcall ViewZoomin ( ) = 0;
    virtual HRESULT __stdcall ViewZoomout ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayHiddenremoved ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayWireframe ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayShaded ( ) = 0;
    virtual HRESULT __stdcall ViewRwShading ( ) = 0;
    virtual HRESULT __stdcall ViewOglShading ( ) = 0;
    virtual HRESULT __stdcall ViewZoomtofit ( ) = 0;
    virtual HRESULT __stdcall ViewRotate ( ) = 0;
    virtual HRESULT __stdcall ViewTranslate ( ) = 0;
    virtual HRESULT __stdcall ViewZoomto ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayHiddengreyed ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayFaceted ( ) = 0;
    virtual HRESULT __stdcall ViewConstraint ( ) = 0;
    virtual HRESULT __stdcall UserFavors ( ) = 0;
    virtual HRESULT __stdcall FeatureCirPattern (
        long num,
        double spacing,
        VARIANT_BOOL flipDir,
        BSTR dName ) = 0;
    virtual HRESULT __stdcall EditSketch ( ) = 0;
    virtual HRESULT __stdcall FeatEdit ( ) = 0;
    virtual HRESULT __stdcall FeatEditDef ( ) = 0;
    virtual HRESULT __stdcall InsertPoint ( ) = 0;
    virtual HRESULT __stdcall InsertFamilyTableNew ( ) = 0;
    virtual HRESULT __stdcall Dummy1 ( ) = 0;
    virtual HRESULT __stdcall InsertFamilyTableEdit ( ) = 0;
    virtual HRESULT __stdcall Dummy2 ( ) = 0;
    virtual HRESULT __stdcall ToolsMacro ( ) = 0;
    virtual HRESULT __stdcall ToolsGrid ( ) = 0;
    virtual HRESULT __stdcall SketchCenterline ( ) = 0;
    virtual HRESULT __stdcall SketchAlign ( ) = 0;
    virtual HRESULT __stdcall SketchArc ( ) = 0;
    virtual HRESULT __stdcall SketchTangentArc ( ) = 0;
    virtual HRESULT __stdcall SketchCircle ( ) = 0;
    virtual HRESULT __stdcall SketchUndo ( ) = 0;
    virtual HRESULT __stdcall UserPreferences ( ) = 0;
    virtual HRESULT __stdcall Lights ( ) = 0;
    virtual HRESULT __stdcall SketchConstrainCoincident ( ) = 0;
    virtual HRESULT __stdcall SketchConstrainConcentric ( ) = 0;
    virtual HRESULT __stdcall SketchConstrainPerp ( ) = 0;
    virtual HRESULT __stdcall SketchConstrainTangent ( ) = 0;
    virtual HRESULT __stdcall SketchConstrainParallel ( ) = 0;
    virtual HRESULT __stdcall SketchUseEdge ( ) = 0;
    virtual HRESULT __stdcall SketchUseEdgeCtrline ( ) = 0;
    virtual HRESULT __stdcall SketchMirror ( ) = 0;
    virtual HRESULT __stdcall Save ( ) = 0;
    virtual HRESULT __stdcall Close ( ) = 0;
    virtual HRESULT __stdcall ViewDispRefaxes ( ) = 0;
    virtual HRESULT __stdcall ViewDispRefplanes ( ) = 0;
    virtual HRESULT __stdcall InsertSketch ( ) = 0;
    virtual HRESULT __stdcall InsertProtrusionSwept (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        VARIANT_BOOL keepNormalConstant ) = 0;
    virtual HRESULT __stdcall InsertProtrusionBlend (
        VARIANT_BOOL closed ) = 0;
    virtual HRESULT __stdcall ToolsMassProps ( ) = 0;
    virtual HRESULT __stdcall PropertySheet ( ) = 0;
    virtual HRESULT __stdcall BlankRefGeom ( ) = 0;
    virtual HRESULT __stdcall UnBlankRefGeom ( ) = 0;
    virtual HRESULT __stdcall EditDelete ( ) = 0;
    virtual HRESULT __stdcall InsertProjectedSketch ( ) = 0;
    virtual HRESULT __stdcall CreatePlaneFixed (
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT_BOOL useGlobal,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Dummy5 ( ) = 0;
    virtual HRESULT __stdcall Dummy6 ( ) = 0;
    virtual HRESULT __stdcall DebugCheckBody ( ) = 0;
    virtual HRESULT __stdcall Dummy8 ( ) = 0;
    virtual HRESULT __stdcall DimPreferences ( ) = 0;
    virtual HRESULT __stdcall UnblankSketch ( ) = 0;
    virtual HRESULT __stdcall EditSketchOrSingleSketchFeature ( ) = 0;
    virtual HRESULT __stdcall DebugCheckIgesGeom ( ) = 0;
    virtual HRESULT __stdcall BlankSketch ( ) = 0;
    virtual HRESULT __stdcall GetDefaultTextHeight (
        double * retval ) = 0;
    virtual HRESULT __stdcall IsActive (
        BSTR compStr,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateEllipse (
        VARIANT center,
        VARIANT major,
        VARIANT minor,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateEllipseVB (
        double centerX,
        double centerY,
        double centerZ,
        double majorX,
        double majorY,
        double majorZ,
        double minorX,
        double minorY,
        double minorZ,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateEllipticalArcByCenter (
        VARIANT center,
        VARIANT major,
        VARIANT minor,
        VARIANT start,
        VARIANT end,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateEllipticalArcByCenterVB (
        double centerX,
        double centerY,
        double centerZ,
        double majorX,
        double majorY,
        double majorZ,
        double minorX,
        double minorY,
        double minorZ,
        double startX,
        double startY,
        double startZ,
        double endX,
        double endY,
        double endZ,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetActiveSketch (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetActiveSketch (
        struct ISketch * * retval ) = 0;
    virtual HRESULT __stdcall GetTessellationQuality (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetTessellationQuality (
        long qualityNum ) = 0;
    virtual HRESULT __stdcall Parameter (
        BSTR stringIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IParameter (
        BSTR stringIn,
        struct IDimension * * retval ) = 0;
    virtual HRESULT __stdcall SelectByID (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AndSelectByID (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Insert3DSketch ( ) = 0;
    virtual HRESULT __stdcall GetLightSourceName (
        long id,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall AddLightSource (
        BSTR idName,
        int lTyp,
        BSTR userName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddLightSourceExtProperty (
        long id,
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall ResetLightSourceExtProperty (
        long id ) = 0;
    virtual HRESULT __stdcall DeleteLightSource (
        long id ) = 0;
    virtual HRESULT __stdcall GetLightSourceExtProperty (
        long id,
        long PropertyId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall AddLightToScene (
        BSTR lpszNewValue,
        long * retval ) = 0;
    virtual HRESULT __stdcall AddSceneExtProperty (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall ResetSceneExtProperty ( ) = 0;
    virtual HRESULT __stdcall GetSceneExtProperty (
        long PropertyId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall FileSummaryInfo ( ) = 0;
    virtual HRESULT __stdcall GetGridSettings (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ToolsSketchTranslate ( ) = 0;
    virtual HRESULT __stdcall ToolsDistance ( ) = 0;
    virtual HRESULT __stdcall SkToolsAutoConstr ( ) = 0;
    virtual HRESULT __stdcall ToolsSketchScale ( ) = 0;
    virtual HRESULT __stdcall Paste ( ) = 0;
    virtual HRESULT __stdcall ToolsConfiguration ( ) = 0;
    virtual HRESULT __stdcall EntityProperties ( ) = 0;
    virtual HRESULT __stdcall GetArcCentersDisplayed (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetArcCentersDisplayed (
        VARIANT_BOOL setting ) = 0;
    virtual HRESULT __stdcall AutoSolveToggle ( ) = 0;
    virtual HRESULT __stdcall Dummy7 ( ) = 0;
    virtual HRESULT __stdcall IGetLines (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall ICreateEllipse (
        double * center,
        double * major,
        double * minor ) = 0;
    virtual HRESULT __stdcall ICreateEllipticalArcByCenter (
        double * center,
        double * major,
        double * minor,
        double * start,
        double * end ) = 0;
    virtual HRESULT __stdcall get_ILightSourcePropertyValues (
        long id,
        double * retval ) = 0;
    virtual HRESULT __stdcall put_ILightSourcePropertyValues (
        long id,
        double * retval ) = 0;
    virtual HRESULT __stdcall InsertCutSwept (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        VARIANT_BOOL keepNormalConstant ) = 0;
    virtual HRESULT __stdcall InsertCutBlend (
        VARIANT_BOOL closed ) = 0;
    virtual HRESULT __stdcall InsertHelix (
        VARIANT_BOOL reversed,
        VARIANT_BOOL clockwised,
        VARIANT_BOOL tapered,
        VARIANT_BOOL outward,
        long helixdef,
        double height,
        double pitch,
        double revolution,
        double taperangle,
        double startangle ) = 0;
    virtual HRESULT __stdcall ICreateLine (
        double * P1,
        double * P2 ) = 0;
    virtual HRESULT __stdcall ICreateCenterLine (
        double * P1,
        double * P2 ) = 0;
    virtual HRESULT __stdcall ICreateArc (
        double * P1,
        double * P2,
        double * P3,
        short dir ) = 0;
    virtual HRESULT __stdcall ICreateCircleByRadius (
        double * P1,
        double radius ) = 0;
    virtual HRESULT __stdcall GraphicsRedraw ( ) = 0;
    virtual HRESULT __stdcall GetVisibilityOfConstructPlanes (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayWhenAdded (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetDisplayWhenAdded (
        VARIANT_BOOL setting ) = 0;
    virtual HRESULT __stdcall GetAddToDB (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetAddToDB (
        VARIANT_BOOL setting ) = 0;
    virtual HRESULT __stdcall DeSelectByID (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall PrintDirect ( ) = 0;
    virtual HRESULT __stdcall PrintPreview ( ) = 0;
    virtual HRESULT __stdcall Quit ( ) = 0;
    virtual HRESULT __stdcall CreatePlaneThru3Points ( ) = 0;
    virtual HRESULT __stdcall ViewRotXPlusNinety ( ) = 0;
    virtual HRESULT __stdcall GetUnits (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall SetAngularUnits (
        short uType,
        short fractBase,
        short fractDenom,
        short sigDigits ) = 0;
    virtual HRESULT __stdcall GetAngularUnits (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetUnits (
        short * retval ) = 0;
    virtual HRESULT __stdcall ISetAngularUnits (
        short uType,
        short fractBase,
        short fractDenom,
        short sigDigits ) = 0;
    virtual HRESULT __stdcall IGetAngularUnits (
        short * retval ) = 0;
    virtual HRESULT __stdcall ShowConfiguration (
        BSTR configurationName ) = 0;
    virtual HRESULT __stdcall ResetConfiguration ( ) = 0;
    virtual HRESULT __stdcall AddConfiguration (
        BSTR Name,
        BSTR comment,
        BSTR alternateName,
        VARIANT_BOOL suppressByDefault,
        VARIANT_BOOL hideByDefault,
        VARIANT_BOOL minFeatureManager,
        VARIANT_BOOL inheritProperties,
        unsigned long flags ) = 0;
    virtual HRESULT __stdcall DeleteConfiguration (
        BSTR configurationName ) = 0;
    virtual HRESULT __stdcall EditConfiguration (
        BSTR Name,
        BSTR newName,
        BSTR comment,
        BSTR alternateName,
        VARIANT_BOOL suppressByDefault,
        VARIANT_BOOL hideByDefault,
        VARIANT_BOOL minFeatureManager,
        VARIANT_BOOL inheritProperties,
        unsigned long flags ) = 0;
    virtual HRESULT __stdcall CreatePlanePerCurveAndPassPoint (
        VARIANT_BOOL origAtCurve ) = 0;
    virtual HRESULT __stdcall CreateFeatureMgrView (
        long * bitmap,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall AddFeatureMgrView (
        long * bitmap,
        long * appView,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetStandardViewRotation (
        long viewId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetStandardViewRotation (
        long viewId,
        double * retval ) = 0;
    virtual HRESULT __stdcall FeatureExtruRefSurface (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2 ) = 0;
    virtual HRESULT __stdcall IGet3rdPartyStorage (
        BSTR stringIn,
        VARIANT_BOOL isStoring,
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall DeleteFeatureMgrView (
        long * appView ) = 0;
    virtual HRESULT __stdcall GetMassProperties (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMassProperties (
        double * mPropsData,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLightSourceCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLightSourceIdFromName (
        BSTR lightName,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetNextSelectionGroupId (
        long id ) = 0;
    virtual HRESULT __stdcall ISetNextSelectionGroupId (
        long id ) = 0;
    virtual HRESULT __stdcall InsertMidSurfaceExt (
        double placement,
        VARIANT_BOOL knitFlag,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertMidSurfaceExt (
        double placement,
        VARIANT_BOOL knitFlag,
        struct IMidSurface * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneFixed (
        double * P1,
        double * P2,
        double * P3,
        VARIANT_BOOL useGlobal ) = 0;
    virtual HRESULT __stdcall SelectByMark (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AndSelectByMark (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDependencies (
        long traverseflag,
        long searchflag,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDependencies (
        long traverseflag,
        long searchflag,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetNumDependencies (
        long traverseflag,
        long searchflag,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetNumDependencies (
        long traverseflag,
        long searchflag,
        long * retval ) = 0;
    virtual HRESULT __stdcall FirstFeature (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFirstFeature (
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall UnderiveSketch ( ) = 0;
    virtual HRESULT __stdcall DeriveSketch ( ) = 0;
    virtual HRESULT __stdcall IsExploded (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteSelection (
        VARIANT_BOOL confirmFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteNamedView (
        BSTR viewname,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetLightSourceName (
        long id,
        BSTR newName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Insert3DSplineCurve (
        VARIANT_BOOL curveClosed ) = 0;
    virtual HRESULT __stdcall SetLightSourcePropertyValuesVB (
        BSTR idName,
        int lType,
        double diff,
        long rgbColor,
        double dist,
        double dirX,
        double dirY,
        double dirZ,
        double spotDirX,
        double spotDirY,
        double spotDirZ,
        double spotAngle,
        double fallOff0,
        double fallOff1,
        double fallOff2,
        double ambient,
        double specular,
        double spotExponent,
        VARIANT_BOOL bDisable,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICreateFeatureMgrView (
        long * bitmap,
        struct IFeatMgrView * * retval ) = 0;
    virtual HRESULT __stdcall SelectedEdgeProperties (
        BSTR edgeName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectedFaceProperties (
        long rgbColor,
        double ambient,
        double diffuse,
        double specular,
        double shininess,
        double transparency,
        double emission,
        VARIANT_BOOL usePartProps,
        BSTR faceName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectedFeatureProperties (
        long rgbColor,
        double ambient,
        double diffuse,
        double specular,
        double shininess,
        double transparency,
        double emission,
        VARIANT_BOOL usePartProps,
        VARIANT_BOOL suppressed,
        BSTR featureName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertSplitLineSil ( ) = 0;
    virtual HRESULT __stdcall InsertSplitLineProject (
        VARIANT_BOOL isDirectional,
        VARIANT_BOOL flipDir ) = 0;
    virtual HRESULT __stdcall InsertRib (
        VARIANT_BOOL is2Sided,
        VARIANT_BOOL reverseThicknessDir,
        double thickness,
        long referenceEdgeIndex,
        VARIANT_BOOL reverseMaterialDir,
        VARIANT_BOOL isDrafted,
        VARIANT_BOOL draftOutward,
        double draftAngle ) = 0;
    virtual HRESULT __stdcall AddRadialDimension (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddDiameterDimension (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetModelViewNames (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetModelViewNames (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetModelViewCount (
        int * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceDoubleValue (
        long userPreferenceValue,
        double * Value ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceDoubleValue (
        long userPreferenceValue,
        double Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ViewDisplayCurvature ( ) = 0;
    virtual HRESULT __stdcall Scale ( ) = 0;
    virtual HRESULT __stdcall AddIns ( ) = 0;
    virtual HRESULT __stdcall InsertCurveFile (
        BSTR fileName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertCurveFileBegin ( ) = 0;
    virtual HRESULT __stdcall InsertCurveFilePoint (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertCurveFileEnd (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ChangeSketchPlane (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ViewOrientationUndo ( ) = 0;
    virtual HRESULT __stdcall PrintOut (
        long fromPage,
        long toPage,
        long numCopies,
        VARIANT_BOOL collate,
        BSTR printer,
        double Scale,
        VARIANT_BOOL printToFile ) = 0;
    virtual HRESULT __stdcall SketchOffsetEntities (
        double offset,
        VARIANT_BOOL flip ) = 0;
    virtual HRESULT __stdcall InsertLibraryFeature (
        BSTR libFeatPartNameIn ) = 0;
    virtual HRESULT __stdcall SketchModifyTranslate (
        double startX,
        double startY,
        double endX,
        double endY ) = 0;
    virtual HRESULT __stdcall SketchModifyRotate (
        double centerX,
        double centerY,
        double angle ) = 0;
    virtual HRESULT __stdcall SketchModifyFlip (
        int axisFlag ) = 0;
    virtual HRESULT __stdcall SketchModifyScale (
        double scaleFactor,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetActiveConfiguration (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetActiveConfiguration (
        struct IConfiguration * * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceToggle (
        long userPreferenceToggle,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceToggle (
        long userPreferenceValue,
        VARIANT_BOOL onFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertSweepRefSurface (
        VARIANT_BOOL propagate,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational ) = 0;
    virtual HRESULT __stdcall InsertLoftRefSurface (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational ) = 0;
    virtual HRESULT __stdcall InsertProtrusionSwept2 (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational ) = 0;
    virtual HRESULT __stdcall InsertProtrusionBlend2 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational ) = 0;
    virtual HRESULT __stdcall InsertCutSwept2 (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational ) = 0;
    virtual HRESULT __stdcall InsertCutBlend2 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational ) = 0;
    virtual HRESULT __stdcall IsEditingSelf (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ShowNamedView2 (
        BSTR vName,
        long viewId ) = 0;
    virtual HRESULT __stdcall InsertDome (
        double height,
        VARIANT_BOOL reverseDir,
        VARIANT_BOOL doEllipticSurface ) = 0;
    virtual HRESULT __stdcall get_MaterialUserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialUserName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaterialIdName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialIdName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaterialPropertyValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialPropertyValues (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall AddPropertyExtension (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPropertyExtension (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
    virtual HRESULT __stdcall GetUpdateStamp (
        long * retval ) = 0;
    virtual HRESULT __stdcall ViewZoomTo2 (
        double x1,
        double y1,
        double z1,
        double x2,
        double y2,
        double z2 ) = 0;
    virtual HRESULT __stdcall ScreenRotate ( ) = 0;
    virtual HRESULT __stdcall get_PrintSetup (
        long setupType,
        short * setupValue ) = 0;
    virtual HRESULT __stdcall put_PrintSetup (
        long setupType,
        short setupValue ) = 0;
    virtual HRESULT __stdcall GraphicsRedraw2 ( ) = 0;
    virtual HRESULT __stdcall InsertCosmeticThread (
        short type,
        double depth,
        double length,
        BSTR note ) = 0;
    virtual HRESULT __stdcall HideCosmeticThread ( ) = 0;
    virtual HRESULT __stdcall ShowCosmeticThread ( ) = 0;
    virtual HRESULT __stdcall SimpleHole2 (
        double dia,
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2 ) = 0;
    virtual HRESULT __stdcall IRelease3rdPartyStorage (
        BSTR stringIn ) = 0;
    virtual HRESULT __stdcall FeatureRevolve2 (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType,
        long options,
        long * retval ) = 0;
    virtual HRESULT __stdcall FeatureRevolveCut2 (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType,
        long options,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetSaveFlag ( ) = 0;
    virtual HRESULT __stdcall GetExternalReferenceName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SelectByRay (
        VARIANT doubleInfoIn,
        long typeWanted,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISelectByRay (
        double * pointIn,
        double * vectorIn,
        double radiusIn,
        long typeWanted,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetSceneBkgDIB (
        long l_dib ) = 0;
    virtual HRESULT __stdcall get_SceneBkgImageFileName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_SceneBkgImageFileName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall InsertBkgImage (
        BSTR newName ) = 0;
    virtual HRESULT __stdcall DeleteBkgImage ( ) = 0;
    virtual HRESULT __stdcall InsertSplinePoint (
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall InsertLoftRefSurface2 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        double tessToleranceFactor,
        short startMatchingType,
        short endMatchingType ) = 0;
    virtual HRESULT __stdcall InsertProtrusionBlend3 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        double tessToleranceFactor,
        short startMatchingType,
        short endMatchingType ) = 0;
    virtual HRESULT __stdcall InsertCutBlend3 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        double tessToleranceFactor,
        short startMatchingType,
        short endMatchingType ) = 0;
    virtual HRESULT __stdcall AlignDimensions ( ) = 0;
    virtual HRESULT __stdcall BreakDimensionAlignment ( ) = 0;
    virtual HRESULT __stdcall SketchFillet1 (
        double rad ) = 0;
    virtual HRESULT __stdcall FeatureChamferType (
        short chamferType,
        double width,
        double angle,
        VARIANT_BOOL flip,
        double otherDist,
        double vertexChamDist1,
        double vertexChamDist2,
        double vertexChamDist3 ) = 0;
    virtual HRESULT __stdcall FeatureCutThin (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        double thk1,
        double thk2,
        double endThk,
        long revThinDir,
        long capEnds,
        VARIANT_BOOL addBends,
        double bendRad ) = 0;
    virtual HRESULT __stdcall FeatureBossThin (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        double thk1,
        double thk2,
        double endThk,
        long revThinDir,
        long capEnds,
        VARIANT_BOOL addBends,
        double bendRad ) = 0;
    virtual HRESULT __stdcall InsertDatumTargetSymbol (
        BSTR datum1,
        BSTR datum2,
        BSTR datum3,
        short areaStyle,
        VARIANT_BOOL areaOutside,
        double value1,
        double value2,
        BSTR valueStr1,
        BSTR valueStr2,
        VARIANT_BOOL arrowsSmart,
        short arrowStyle,
        short leaderLineStyle,
        VARIANT_BOOL leaderBent,
        VARIANT_BOOL showArea,
        VARIANT_BOOL showSymbol,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditDatumTargetSymbol (
        BSTR datum1,
        BSTR datum2,
        BSTR datum3,
        short areaStyle,
        VARIANT_BOOL areaOutside,
        double value1,
        double value2,
        BSTR valueStr1,
        BSTR valueStr2,
        VARIANT_BOOL arrowsSmart,
        short arrowStyle,
        short leaderLineStyle,
        VARIANT_BOOL leaderBent,
        VARIANT_BOOL showArea,
        VARIANT_BOOL showSymbol,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertBOMBalloon ( ) = 0;
    virtual HRESULT __stdcall FeatureReferenceCurve (
        long numOfCurves,
        VARIANT baseCurves,
        VARIANT_BOOL merge,
        BSTR fromFileName,
        long * errorCode,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFeatureReferenceCurve (
        long numOfCurves,
        struct ICurve * * * baseCurves,
        VARIANT_BOOL merge,
        BSTR fromFileName,
        long * errorCode,
        struct IReferenceCurve * * retval ) = 0;
    virtual HRESULT __stdcall FontBold (
        VARIANT_BOOL bold ) = 0;
    virtual HRESULT __stdcall FontItalic (
        VARIANT_BOOL italic ) = 0;
    virtual HRESULT __stdcall FontUnderline (
        VARIANT_BOOL underline ) = 0;
    virtual HRESULT __stdcall FontFace (
        BSTR face ) = 0;
    virtual HRESULT __stdcall FontPoints (
        short points ) = 0;
    virtual HRESULT __stdcall FontUnits (
        double units ) = 0;
    virtual HRESULT __stdcall SketchSplineByEqnParams (
        VARIANT paramsIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AlignParallelDimensions ( ) = 0;
    virtual HRESULT __stdcall SetBlockingState (
        long stateIn ) = 0;
    virtual HRESULT __stdcall ResetBlockingState ( ) = 0;
    virtual HRESULT __stdcall GetSceneBkgDIB (
        long * l_dib ) = 0;
    virtual HRESULT __stdcall InsertHatchedFace ( ) = 0;
    virtual HRESULT __stdcall GetColorTable (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetColorTable (
        struct IColorTable * * retval ) = 0;
    virtual HRESULT __stdcall InsertSweepRefSurface2 (
        VARIANT_BOOL propagate,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        short startMatchingType,
        short endMatchingType ) = 0;
    virtual HRESULT __stdcall InsertProtrusionSwept3 (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        short startMatchingType,
        short endMatchingType ) = 0;
    virtual HRESULT __stdcall InsertCutSwept3 (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        short startMatchingType,
        short endMatchingType ) = 0;
    virtual HRESULT __stdcall IsOpenedViewOnly (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsOpenedReadOnly (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ViewZoomToSelection ( ) = 0;
    virtual HRESULT __stdcall FeatureBossThicken (
        double thickness,
        long direction,
        long faceIndex ) = 0;
    virtual HRESULT __stdcall FeatureCutThicken (
        double thickness,
        long direction,
        long faceIndex ) = 0;
    virtual HRESULT __stdcall InsertAxis (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditUndo (
        unsigned long nSteps ) = 0;
    virtual HRESULT __stdcall SelectMidpoint ( ) = 0;
    virtual HRESULT __stdcall ISketchSplineByEqnParams (
        int * propArray,
        double * knotsArray,
        double * cntrlPntCoordArray,
        long * retval ) = 0;
    virtual HRESULT __stdcall VersionHistory (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IVersionHistory (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetVersionHistoryCount (
        int * retval ) = 0;
    virtual HRESULT __stdcall Rebuild (
        long options ) = 0;
    virtual HRESULT __stdcall InsertFeatureShellAddThickness (
        double thickness ) = 0;
    virtual HRESULT __stdcall InsertOffsetSurface (
        double thickness,
        VARIANT_BOOL reverse ) = 0;
    virtual HRESULT __stdcall SimplifySpline (
        double toleranceIn ) = 0;
    virtual HRESULT __stdcall get_SummaryInfo (
        long FieldId,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_SummaryInfo (
        long FieldId,
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_CustomInfo (
        BSTR FieldName,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_CustomInfo (
        BSTR FieldName,
        BSTR retval ) = 0;
    virtual HRESULT __stdcall GetCustomInfoCount (
        long * count ) = 0;
    virtual HRESULT __stdcall GetCustomInfoType (
        BSTR FieldName,
        BSTR * type ) = 0;
    virtual HRESULT __stdcall GetCustomInfoNames (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCustomInfoNames (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall AddCustomInfo (
        BSTR FieldName,
        BSTR FieldType,
        BSTR FieldValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteCustomInfo (
        BSTR FieldName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall PrintOut2 (
        long fromPage,
        long toPage,
        long numCopies,
        VARIANT_BOOL collate,
        BSTR printer,
        double Scale,
        VARIANT_BOOL printToFile,
        BSTR ptfName ) = 0;
    virtual HRESULT __stdcall SetReadOnlyState (
        VARIANT_BOOL setReadOnly,
        VARIANT_BOOL * success ) = 0;
    virtual HRESULT __stdcall InsertFamilyTableOpen (
        BSTR fileName,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall MultiSelectByRay (
        VARIANT doubleInfoIn,
        long typeWanted,
        VARIANT_BOOL Append,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IMultiSelectByRay (
        double * pointIn,
        double * vectorIn,
        double radiusIn,
        long typeWanted,
        VARIANT_BOOL Append,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertNewNote3 (
        BSTR upperText,
        VARIANT_BOOL noLeader,
        VARIANT_BOOL bentLeader,
        short arrowStyle,
        short leaderSide,
        double angle,
        short balloonStyle,
        short balloonFit,
        VARIANT_BOOL smartArrow ) = 0;
    virtual HRESULT __stdcall InsertWeldSymbol2 (
        BSTR dim1,
        BSTR symbol,
        BSTR dim2,
        VARIANT_BOOL symmetric,
        VARIANT_BOOL fieldWeld,
        VARIANT_BOOL showOtherSide,
        VARIANT_BOOL dashOnTop,
        VARIANT_BOOL peripheral,
        VARIANT_BOOL hasProcess,
        BSTR processValue ) = 0;
    virtual HRESULT __stdcall InsertSurfaceFinishSymbol2 (
        long symType,
        long leaderType,
        double locX,
        double locY,
        double locZ,
        long laySymbol,
        long arrowType,
        BSTR machAllowance,
        BSTR otherVals,
        BSTR prodMethod,
        BSTR sampleLen,
        BSTR maxRoughness,
        BSTR minRoughness,
        BSTR roughnessSpacing,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SaveSilent (
        long * status ) = 0;
    virtual HRESULT __stdcall SaveAsSilent (
        BSTR newName,
        VARIANT_BOOL saveAsCopy,
        long * status ) = 0;
    virtual HRESULT __stdcall AddCustomInfo2 (
        BSTR FieldName,
        long FieldType,
        BSTR FieldValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetCustomInfoType2 (
        BSTR FieldName,
        long * type ) = 0;
    virtual HRESULT __stdcall InsertRefPoint (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall FeatureFillet2 (
        double r1,
        VARIANT_BOOL propagate,
        VARIANT_BOOL ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType,
        int nRadii,
        VARIANT radii,
        long * res ) = 0;
    virtual HRESULT __stdcall IFeatureFillet2 (
        double r1,
        VARIANT_BOOL propagate,
        VARIANT_BOOL ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType,
        int nRadii,
        double * radii,
        long * res ) = 0;
    virtual HRESULT __stdcall GetFirstAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall InsertCoordinateSystem (
        VARIANT_BOOL xFlippedIn,
        VARIANT_BOOL yFlippedIn,
        VARIANT_BOOL zFlippedIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetToolbarVisibility (
        long toolbar,
        VARIANT_BOOL * visibility ) = 0;
    virtual HRESULT __stdcall SetToolbarVisibility (
        long toolbar,
        VARIANT_BOOL visibility ) = 0;
    virtual HRESULT __stdcall ViewDispCoordinateSystems ( ) = 0;
    virtual HRESULT __stdcall ViewDispTempRefaxes ( ) = 0;
    virtual HRESULT __stdcall ViewDispRefPoints ( ) = 0;
    virtual HRESULT __stdcall ViewDispOrigins ( ) = 0;
    virtual HRESULT __stdcall GetCoordinateSystemXformByName (
        BSTR nameIn,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCoordinateSystemXformByName (
        BSTR nameIn,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetCurrentCoordinateSystemName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall EnumModelViews (
        struct IEnumModelViews * * retval ) = 0;
    virtual HRESULT __stdcall InsertCompositeCurve (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SketchParabola (
        double val1,
        double val2,
        double z1,
        double val3,
        double val4,
        double z2,
        double val5,
        double val6,
        double z3,
        double val7,
        double val8,
        double z4 ) = 0;
    virtual HRESULT __stdcall InsertRadiateSurface (
        double distance,
        VARIANT_BOOL flipDir,
        VARIANT_BOOL tangentPropagate ) = 0;
    virtual HRESULT __stdcall InsertSewRefSurface ( ) = 0;
    virtual HRESULT __stdcall InsertShape (
        long pressureOn,
        long tangentsOn,
        double pressureGain,
        double tangentGain,
        double curveSpringGain,
        double alpha,
        double beta,
        double gamma,
        double delta,
        long degree,
        long split,
        long tuning,
        long * retval ) = 0;
    virtual HRESULT __stdcall InsertMfDraft2 (
        double angle,
        VARIANT_BOOL flipDir,
        VARIANT_BOOL isEdgeDraft,
        long propType,
        VARIANT_BOOL stepDraft ) = 0;
    virtual HRESULT __stdcall GetConfigurationCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetConfigurationNames (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetConfigurationNames (
        long * count,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall FeatureCut2 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        long keepPieceIndex ) = 0;
    virtual HRESULT __stdcall InsertCutSurface (
        VARIANT_BOOL flip,
        long keepPieceIndex ) = 0;
    virtual HRESULT __stdcall GetDetailingDefaults (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDetailingDefaults (
        struct IDetailingDefaults * * retval ) = 0;
    virtual HRESULT __stdcall ListExternalFileReferencesCount (
        VARIANT_BOOL useSearchRules,
        long * retval ) = 0;
    virtual HRESULT __stdcall ListExternalFileReferences (
        VARIANT_BOOL useSearchRules,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IListExternalFileReferences (
        VARIANT_BOOL useSearchRules,
        long numRefs,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SketchSplineByEqnParams2 (
        VARIANT paramsIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetFirstModelView (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstModelView (
        struct IModelView * * retval ) = 0;
    virtual HRESULT __stdcall InsertPlanarRefSurface (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetNext (
        IDispatch * * nextDoc ) = 0;
    virtual HRESULT __stdcall GetSaveFlag (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddCustomInfo3 (
        BSTR configuration,
        BSTR FieldName,
        long FieldType,
        BSTR FieldValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_CustomInfo2 (
        BSTR configuration,
        BSTR FieldName,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_CustomInfo2 (
        BSTR configuration,
        BSTR FieldName,
        BSTR retval ) = 0;
    virtual HRESULT __stdcall DeleteCustomInfo2 (
        BSTR configuration,
        BSTR FieldName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetCustomInfoCount2 (
        BSTR configuration,
        long * count ) = 0;
    virtual HRESULT __stdcall GetCustomInfoNames2 (
        BSTR configuration,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCustomInfoNames2 (
        BSTR configuration,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetCustomInfoType3 (
        BSTR configuration,
        BSTR FieldName,
        long * type ) = 0;
    virtual HRESULT __stdcall GetConsiderLeadersAsLines (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetConsiderLeadersAsLines (
        VARIANT_BOOL leadersAsLines,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertRevolvedRefSurface (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        int revType ) = 0;
    virtual HRESULT __stdcall GetBendState (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetBendState (
        long bendState,
        long * retval ) = 0;
    virtual HRESULT __stdcall get_ShowFeatureErrorDialog (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_ShowFeatureErrorDialog (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall ClearUndoList ( ) = 0;
    virtual HRESULT __stdcall GetFeatureManagerWidth (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetFeatureManagerWidth (
        long width,
        long * retval ) = 0;
    virtual HRESULT __stdcall InsertProjectedSketch2 (
        long reverse,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertProjectedSketch2 (
        long reverse,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall GetFeatureCount (
        long * num ) = 0;
    virtual HRESULT __stdcall FeatureByPositionReverse (
        long num,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFeatureByPositionReverse (
        long num,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall RayIntersections (
        VARIANT bodiesIn,
        VARIANT basePointsIn,
        VARIANT vectorsIn,
        long options,
        double hitRadius,
        double offset,
        long * retval ) = 0;
    virtual HRESULT __stdcall IRayIntersections (
        struct IBody * * bodiesIn,
        long numBodies,
        double * basePointsIn,
        double * vectorsIn,
        long numRays,
        long options,
        double hitRadius,
        double offset,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetRayIntersectionsPoints (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetRayIntersectionsPoints (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetRayIntersectionsTopology (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetRayIntersectionsTopology (
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall EditSeedFeat ( ) = 0;
    virtual HRESULT __stdcall EditSuppress (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditUnsuppress (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditUnsuppressDependent (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditRollback (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Save2 (
        VARIANT_BOOL silent,
        long * retval ) = 0;
    virtual HRESULT __stdcall SaveAs2 (
        BSTR newName,
        long saveAsVersion,
        VARIANT_BOOL saveAsCopy,
        VARIANT_BOOL silent,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetPopupMenuMode (
        int modeIn ) = 0;
    virtual HRESULT __stdcall GetPopupMenuMode (
        int * retval ) = 0;
    virtual HRESULT __stdcall CloseFamilyTable ( ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtSurface (
        int interIndex,
        VARIANT_BOOL projOpt,
        VARIANT_BOOL reverseDir,
        VARIANT_BOOL normalPlane,
        double angle ) = 0;
    virtual HRESULT __stdcall SketchOffset (
        double offset,
        VARIANT_BOOL contourMode ) = 0;
    virtual HRESULT __stdcall CreateLinearSketchStepAndRepeat (
        long numX,
        long numY,
        double spacingX,
        double spacingY,
        double angleX,
        double angleY,
        BSTR deleteInstances,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetAmbientLightProperties (
        BSTR Name,
        double ambient,
        double diffuse,
        double specular,
        long colour,
        VARIANT_BOOL enabled,
        VARIANT_BOOL fixed,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall GetAmbientLightProperties (
        BSTR Name,
        double * ambient,
        double * diffuse,
        double * specular,
        long * colour,
        VARIANT_BOOL * enabled,
        VARIANT_BOOL * fixed,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall SetPointLightProperties (
        BSTR Name,
        double ambient,
        double diffuse,
        double specular,
        long colour,
        VARIANT_BOOL enabled,
        VARIANT_BOOL fixed,
        double x,
        double y,
        double z,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall GetPointLightProperties (
        BSTR Name,
        double * ambient,
        double * diffuse,
        double * specular,
        long * colour,
        VARIANT_BOOL * enabled,
        VARIANT_BOOL * fixed,
        double * x,
        double * y,
        double * z,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall SetDirectionLightProperties (
        BSTR Name,
        double ambient,
        double diffuse,
        double specular,
        long colour,
        VARIANT_BOOL enabled,
        VARIANT_BOOL fixed,
        double x,
        double y,
        double z,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall GetDirectionLightProperties (
        BSTR Name,
        double * ambient,
        double * diffuse,
        double * specular,
        long * colour,
        VARIANT_BOOL * enabled,
        VARIANT_BOOL * fixed,
        double * x,
        double * y,
        double * z,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall SetSpotlightProperties (
        BSTR Name,
        double ambient,
        double diffuse,
        double specular,
        long colour,
        VARIANT_BOOL enabled,
        VARIANT_BOOL fixed,
        double posx,
        double posy,
        double posz,
        double targetx,
        double targety,
        double targetz,
        double coneAngle,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall GetSpotlightProperties (
        BSTR Name,
        double * ambient,
        double * diffuse,
        double * specular,
        long * colour,
        VARIANT_BOOL * enabled,
        VARIANT_BOOL * fixed,
        double * x,
        double * y,
        double * z,
        double * targetx,
        double * targety,
        double * targetz,
        double * coneAngle,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall SplitOpenSegment (
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall AutoInferToggle ( ) = 0;
    virtual HRESULT __stdcall SketchRectangleAtAnyAngle (
        double val1,
        double val2,
        double z1,
        double val3,
        double val4,
        double z2,
        double val3x,
        double val3y,
        double z3,
        VARIANT_BOOL val5 ) = 0;
    virtual HRESULT __stdcall CreateCircularSketchStepAndRepeat (
        double arcRadius,
        double arcAngle,
        long patternNum,
        double patternSpacing,
        VARIANT_BOOL patternRotate,
        BSTR deleteInstances,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SplitClosedSegment (
        double x0,
        double y0,
        double z0,
        double x1,
        double y1,
        double z1 ) = 0;
    virtual HRESULT __stdcall IsLightLockedToModel (
        long lightId,
        VARIANT_BOOL * IsFixed ) = 0;
    virtual HRESULT __stdcall LockLightToModel (
        long lightId,
        VARIANT_BOOL fix,
        VARIANT_BOOL * success ) = 0;
    virtual HRESULT __stdcall FeatureFillet3 (
        double r1,
        VARIANT_BOOL propagate,
        int ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType,
        int nRadii,
        VARIANT radii,
        VARIANT_BOOL useHelpPoint,
        VARIANT_BOOL useTangentHoldLine,
        long * res ) = 0;
    virtual HRESULT __stdcall IFeatureFillet3 (
        double r1,
        VARIANT_BOOL propagate,
        int ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType,
        int nRadii,
        double * radii,
        VARIANT_BOOL useHelpPoint,
        VARIANT_BOOL useTangentHoldLine,
        long * res ) = 0;
    virtual HRESULT __stdcall InsertConnectionPoint ( ) = 0;
    virtual HRESULT __stdcall InsertRoutePoint ( ) = 0;
    virtual HRESULT __stdcall FeatureBossThicken2 (
        double thickness,
        long direction,
        long faceIndex,
        VARIANT_BOOL fillVolume ) = 0;
    virtual HRESULT __stdcall FeatureCutThicken2 (
        double thickness,
        long direction,
        long faceIndex,
        VARIANT_BOOL fillVolume ) = 0;
    virtual HRESULT __stdcall GetConfigurationByName (
        BSTR Name,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetConfigurationByName (
        BSTR Name,
        struct IConfiguration * * retval ) = 0;
    virtual HRESULT __stdcall CreatePoint2 (
        double pointX,
        double pointY,
        double pointZ,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePoint2 (
        double pointX,
        double pointY,
        double pointZ,
        struct ISketchPoint * * retval ) = 0;
    virtual HRESULT __stdcall CreateLine2 (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateLine2 (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall GetActiveSketch2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetActiveSketch2 (
        struct ISketch * * retval ) = 0;
    virtual HRESULT __stdcall DrawLightIcons ( ) = 0;
    virtual HRESULT __stdcall GetLayerManager (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetLayerManager (
        struct ILayerMgr * * retval ) = 0;
    virtual HRESULT __stdcall CreateCircle2 (
        double xC,
        double yC,
        double zc,
        double xp,
        double yp,
        double zp,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateCircle2 (
        double xC,
        double yC,
        double zc,
        double xp,
        double yp,
        double zp,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall CreateCircleByRadius2 (
        double xC,
        double yC,
        double zc,
        double radius,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateCircleByRadius2 (
        double xC,
        double yC,
        double zc,
        double radius,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall CreateArc2 (
        double xC,
        double yC,
        double zc,
        double xp1,
        double yp1,
        double zp1,
        double xp2,
        double yp2,
        double zp2,
        short direction,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateArc2 (
        double xC,
        double yC,
        double zc,
        double xp1,
        double yp1,
        double zp1,
        double xp2,
        double yp2,
        double zp2,
        short direction,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall CreateEllipse2 (
        double centerX,
        double centerY,
        double centerZ,
        double majorX,
        double majorY,
        double majorZ,
        double minorX,
        double minorY,
        double minorZ,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateEllipse2 (
        double centerX,
        double centerY,
        double centerZ,
        double majorX,
        double majorY,
        double majorZ,
        double minorX,
        double minorY,
        double minorZ,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall CreateEllipticalArc2 (
        double centerX,
        double centerY,
        double centerZ,
        double majorX,
        double majorY,
        double majorZ,
        double minorX,
        double minorY,
        double minorZ,
        double startX,
        double startY,
        double startZ,
        double endX,
        double endY,
        double endZ,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateEllipticalArc2 (
        double centerX,
        double centerY,
        double centerZ,
        double majorX,
        double majorY,
        double majorZ,
        double minorX,
        double minorY,
        double minorZ,
        double startX,
        double startY,
        double startZ,
        double endX,
        double endY,
        double endZ,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall CreateSpline (
        VARIANT pointData,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSpline (
        long PointCount,
        double * pointData,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall ViewZoomtofit2 ( ) = 0;
    virtual HRESULT __stdcall SetInferenceMode (
        VARIANT_BOOL inferenceMode ) = 0;
    virtual HRESULT __stdcall GetInferenceMode (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetTitle2 (
        BSTR newTitle,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SketchFillet2 (
        double rad,
        short constrainedCorners,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsTessellationValid (
        VARIANT_BOOL * isValid ) = 0;
    virtual HRESULT __stdcall EditRoute ( ) = 0;
    virtual HRESULT __stdcall FileReload ( ) = 0;
    virtual HRESULT __stdcall GetDesignTable (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDesignTable (
        struct IDesignTable * * retval ) = 0;
    virtual HRESULT __stdcall GetEntityName (
        IDispatch * entity,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetEntityName (
        struct IEntity * entity,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct IModelDoc * * nextDoc ) = 0;
    virtual HRESULT __stdcall ShowConfiguration2 (
        BSTR configurationName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddConfiguration2 (
        BSTR Name,
        BSTR comment,
        BSTR alternateName,
        VARIANT_BOOL suppressByDefault,
        VARIANT_BOOL hideByDefault,
        VARIANT_BOOL minFeatureManager,
        VARIANT_BOOL inheritProperties,
        unsigned long flags,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteConfiguration2 (
        BSTR configurationName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditConfiguration2 (
        BSTR Name,
        BSTR newName,
        BSTR comment,
        BSTR alternateName,
        VARIANT_BOOL suppressByDefault,
        VARIANT_BOOL hideByDefault,
        VARIANT_BOOL minFeatureManager,
        VARIANT_BOOL inheritProperties,
        unsigned long flags,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateSplineByEqnParams (
        VARIANT paramsIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSplineByEqnParams (
        int * propArray,
        double * knotsArray,
        double * cntrlPntCoordArray,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall CreateFeatureMgrView2 (
        long * bitmap,
        BSTR toolTip,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateFeatureMgrView2 (
        long * bitmap,
        BSTR toolTip,
        struct IFeatMgrView * * retval ) = 0;
    virtual HRESULT __stdcall AddFeatureMgrView2 (
        long * bitmap,
        long * appView,
        BSTR toolTip,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall FeatureCut3 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        long keepPieceIndex ) = 0;
    virtual HRESULT __stdcall GetFirstAnnotation2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstAnnotation2 (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall InsertExtendSurface (
        VARIANT_BOOL extendLinear,
        long endCondition,
        double distance ) = 0;
    virtual HRESULT __stdcall InsertTangencySurface (
        VARIANT_BOOL oneSide,
        VARIANT_BOOL isFlip ) = 0;
    virtual HRESULT __stdcall CreateSplinesByEqnParams (
        VARIANT paramsIn,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ICreateSplinesByEqnParams (
        int * propArray,
        double * knotsArray,
        double * cntrlPntCoordArray,
        struct IEnumSketchSegments * * retval ) = 0;
    virtual HRESULT __stdcall CreateClippedSplines (
        VARIANT paramsIn,
        double x1,
        double y1,
        double x2,
        double y2,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ICreateClippedSplines (
        int * propArray,
        double * knotsArray,
        double * cntrlPntCoordArray,
        double x1,
        double y1,
        double x2,
        double y2,
        struct IEnumSketchSegments * * retval ) = 0;
    virtual HRESULT __stdcall EditSuppress2 (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditUnsuppress2 (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditUnsuppressDependent2 (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditRollback2 (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall HideDimension ( ) = 0;
    virtual HRESULT __stdcall ShowFeatureDimensions ( ) = 0;
    virtual HRESULT __stdcall HideFeatureDimensions ( ) = 0;
    virtual HRESULT __stdcall Sketch3DIntersections ( ) = 0;
    virtual HRESULT __stdcall FeatureFillet4 (
        double r1,
        VARIANT_BOOL propagate,
        VARIANT_BOOL uniformRadius,
        int ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType,
        int nRadii,
        VARIANT radii,
        VARIANT_BOOL useHelpPoint,
        VARIANT_BOOL useTangentHoldLine,
        VARIANT_BOOL cornerType,
        int setbackDistCount,
        VARIANT setBackDistances,
        long * res ) = 0;
    virtual HRESULT __stdcall IFeatureFillet4 (
        double r1,
        VARIANT_BOOL propagate,
        VARIANT_BOOL uniformRadius,
        int ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType,
        int nRadii,
        double * radii,
        VARIANT_BOOL useHelpPoint,
        VARIANT_BOOL useTangentHoldLine,
        VARIANT_BOOL cornerType,
        int setbackDistCount,
        double * setBackDistances,
        long * res ) = 0;
    virtual HRESULT __stdcall InsertDeleteFace ( ) = 0;
    virtual HRESULT __stdcall GetDependencies2 (
        VARIANT_BOOL traverseflag,
        VARIANT_BOOL searchflag,
        VARIANT_BOOL addReadOnlyInfo,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDependencies2 (
        VARIANT_BOOL traverseflag,
        VARIANT_BOOL searchflag,
        VARIANT_BOOL addReadOnlyInfo,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetNumDependencies2 (
        VARIANT_BOOL traverseflag,
        VARIANT_BOOL searchflag,
        VARIANT_BOOL addReadOnlyInfo,
        long * retval ) = 0;
    virtual HRESULT __stdcall InsertScale (
        double scaleFactor_x,
        double scaleFactor_y,
        double scaleFactor_z,
        VARIANT_BOOL isUniform,
        int scaleType ) = 0;
    virtual HRESULT __stdcall LockAllExternalReferences ( ) = 0;
    virtual HRESULT __stdcall UnlockAllExternalReferences ( ) = 0;
    virtual HRESULT __stdcall BreakAllExternalReferences ( ) = 0;
    virtual HRESULT __stdcall EditDimensionProperties (
        long tolType,
        double tolMax,
        double tolMin,
        BSTR tolMaxFit,
        BSTR tolMinFit,
        VARIANT_BOOL useDocPrec,
        long precision,
        long arrowsIn,
        VARIANT_BOOL useDocArrows,
        long arrow1,
        long arrow2,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SketchPolygon (
        double xCenter,
        double yCenter,
        double xEdge,
        double yEdge,
        int nSides,
        VARIANT_BOOL bInscribed,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBlockingState (
        long * count ) = 0;
    virtual HRESULT __stdcall CreateFeatureMgrView3 (
        long * bitmap,
        BSTR toolTip,
        long whichPane,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateFeatureMgrView3 (
        long * bitmap,
        BSTR toolTip,
        long whichPane,
        struct IFeatMgrView * * retval ) = 0;
    virtual HRESULT __stdcall AddFeatureMgrView3 (
        long * bitmap,
        long * appView,
        BSTR toolTip,
        long whichPane,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtOffset2 (
        double val,
        VARIANT_BOOL flipDir,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneAtOffset2 (
        double val,
        VARIANT_BOOL flipDir,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtAngle2 (
        double val,
        VARIANT_BOOL flipDir,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneAtAngle2 (
        double val,
        VARIANT_BOOL flipDir,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneThru3Points2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneThru3Points2 (
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlanePerCurveAndPassPoint2 (
        VARIANT_BOOL origAtCurve,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlanePerCurveAndPassPoint2 (
        VARIANT_BOOL origAtCurve,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtSurface2 (
        int interIndex,
        VARIANT_BOOL projOpt,
        VARIANT_BOOL reverseDir,
        VARIANT_BOOL normalPlane,
        double angle,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneAtSurface2 (
        int interIndex,
        VARIANT_BOOL projOpt,
        VARIANT_BOOL reverseDir,
        VARIANT_BOOL normalPlane,
        double angle,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceIntegerValue (
        long userPreferenceValue,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceIntegerValue (
        long userPreferenceValue,
        long Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceTextFormat (
        long userPreferenceValue,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetUserPreferenceTextFormat (
        long userPreferenceValue,
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceTextFormat (
        long userPreferenceValue,
        IDispatch * Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetUserPreferenceTextFormat (
        long userPreferenceValue,
        struct ITextFormat * Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertRib2 (
        VARIANT_BOOL is2Sided,
        VARIANT_BOOL reverseThicknessDir,
        double thickness,
        long referenceEdgeIndex,
        VARIANT_BOOL reverseMaterialDir,
        VARIANT_BOOL isDrafted,
        VARIANT_BOOL draftOutward,
        double draftAngle,
        VARIANT_BOOL isNormToSketch ) = 0;
    virtual HRESULT __stdcall InsertObjectFromFile (
        BSTR filePath,
        VARIANT_BOOL createLink,
        double xx,
        double yy,
        double zz,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InspectCurvature ( ) = 0;
    virtual HRESULT __stdcall RemoveInspectCurvature ( ) = 0;
    virtual HRESULT __stdcall InsertDatumTag2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertDatumTag2 (
        struct IDatumTag * * retval ) = 0;
    virtual HRESULT __stdcall ActivateFeatureMgrView (
        long * appView,
        long * paneType ) = 0;
    virtual HRESULT __stdcall FeatureSketchDrivenPattern (
        VARIANT_BOOL useCentroid ) = 0;
    virtual HRESULT __stdcall HideShowBodies ( ) = 0;
    virtual HRESULT __stdcall HideSolidBody ( ) = 0;
    virtual HRESULT __stdcall ShowSolidBody ( ) = 0;
    virtual HRESULT __stdcall InsertFramePoint (
        double xx,
        double yy,
        double zz ) = 0;
    virtual HRESULT __stdcall LockFramePoint ( ) = 0;
    virtual HRESULT __stdcall UnlockFramePoint ( ) = 0;
    virtual HRESULT __stdcall InsertGtol (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertGtol (
        struct IGtol * * retval ) = 0;
    virtual HRESULT __stdcall DeActivateFeatureMgrView (
        long * appView,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertNote (
        BSTR text,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertNote (
        BSTR text,
        struct INote * * retval ) = 0;
    virtual HRESULT __stdcall SetSaveAsFileName (
        BSTR fileName ) = 0;
    virtual HRESULT __stdcall ClosePrintPreview ( ) = 0;
    virtual HRESULT __stdcall HideComponent2 ( ) = 0;
    virtual HRESULT __stdcall ShowComponent2 ( ) = 0;
    virtual HRESULT __stdcall SaveBMP (
        BSTR filenameIn,
        long widthIn,
        long heightIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertSketch2 (
        VARIANT_BOOL updateEditRebuild ) = 0;
    virtual HRESULT __stdcall Insert3DSketch2 (
        VARIANT_BOOL updateEditRebuild ) = 0;
    virtual HRESULT __stdcall InsertDeleteHole ( ) = 0;
    virtual HRESULT __stdcall PreTrimSurface (
        VARIANT_BOOL bMutualTrimIn ) = 0;
    virtual HRESULT __stdcall PostTrimSurface (
        VARIANT_BOOL bSewSurfaceIn ) = 0;
    virtual HRESULT __stdcall SketchConvertIsoCurves (
        double percentRatio,
        VARIANT_BOOL vORuDir,
        VARIANT_BOOL doConstrain,
        VARIANT_BOOL skipHoles ) = 0;
    virtual HRESULT __stdcall SelectLoop ( ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalBaseFlange (
        double thickness,
        VARIANT_BOOL thickenDir,
        double radius,
        double extrudeDist1,
        double extrudeDist2,
        VARIANT_BOOL flipExtruDir,
        long endCondition1,
        long endCondition2,
        long dirToUse ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalFold ( ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalUnfold ( ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalMiterFlange (
        VARIANT_BOOL useReliefRatio,
        VARIANT_BOOL useDefaultGap,
        VARIANT_BOOL useAutoRelief,
        double globalRadius,
        double ripGap,
        double autoReliefRatio,
        double autoReliefWidth,
        double autoReliefDepth,
        long reliefType,
        long ripLocation,
        VARIANT_BOOL trimSideBends ) = 0;
    virtual HRESULT __stdcall CreateGroup ( ) = 0;
    virtual HRESULT __stdcall RemoveItemsFromGroup ( ) = 0;
    virtual HRESULT __stdcall RemoveGroups ( ) = 0;
    virtual HRESULT __stdcall InsertBOMBalloon2 (
        long Style,
        long size,
        long upperTextStyle,
        BSTR upperText,
        long lowerTextStyle,
        BSTR lowerText,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertBOMBalloon2 (
        long Style,
        long size,
        long upperTextStyle,
        BSTR upperText,
        long lowerTextStyle,
        BSTR lowerText,
        struct INote * * retval ) = 0;
    virtual HRESULT __stdcall EditRedo (
        unsigned long nSteps ) = 0;
    virtual HRESULT __stdcall InsertProtrusionBlend4 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        double tessToleranceFactor,
        short startMatchingType,
        short endMatchingType,
        VARIANT_BOOL isThinBody,
        double thickness1,
        double thickness2,
        short thinType ) = 0;
    virtual HRESULT __stdcall InsertCutBlend4 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        double tessToleranceFactor,
        short startMatchingType,
        short endMatchingType,
        VARIANT_BOOL isThinBody,
        double thickness1,
        double thickness2,
        short thinType ) = 0;
    virtual HRESULT __stdcall InsertProtrusionSwept4 (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        short startMatchingType,
        short endMatchingType,
        VARIANT_BOOL isThinBody,
        double thickness1,
        double thickness2,
        short thinType ) = 0;
    virtual HRESULT __stdcall InsertCutSwept4 (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        short startMatchingType,
        short endMatchingType,
        VARIANT_BOOL isThinBody,
        double thickness1,
        double thickness2,
        short thinType ) = 0;
    virtual HRESULT __stdcall SelectTangency ( ) = 0;
    virtual HRESULT __stdcall InsertBendTableOpen (
        BSTR fileName,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall InsertBendTableNew (
        BSTR fileName,
        BSTR units,
        BSTR type,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall InsertBendTableEdit ( ) = 0;
    virtual HRESULT __stdcall DeleteBendTable ( ) = 0;
    virtual HRESULT __stdcall InsertSheetMetal3dBend (
        double angle,
        double radius,
        VARIANT_BOOL flipDir,
        short bendPos ) = 0;
    virtual HRESULT __stdcall CreateTangentArc2 (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        long arcTypeIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetMassProperties2 (
        long * status,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMassProperties2 (
        long * status,
        double * mPropsData ) = 0;
    virtual HRESULT __stdcall SketchChamfer (
        double angleORdist,
        double dist1,
        long options ) = 0;
    virtual HRESULT __stdcall FeatureCut4 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        long keepPieceIndex,
        VARIANT_BOOL normalCut ) = 0;
    virtual HRESULT __stdcall GetPropertyManagerPage (
        long dialogId,
        BSTR title,
        IUnknown * handler,
        struct IPropertyManagerPage * * retval ) = 0;
    virtual HRESULT __stdcall AlignOrdinate ( ) = 0;
    virtual HRESULT __stdcall EditOrdinate ( ) = 0;
    virtual HRESULT __stdcall ReattachOrdinate (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditBalloonProperties (
        long Style,
        long size,
        long upperTextStyle,
        BSTR upperText,
        long lowerTextStyle,
        BSTR lowerText,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall EditDimensionProperties2 (
        long tolType,
        double tolMax,
        double tolMin,
        BSTR tolMaxFit,
        BSTR tolMinFit,
        VARIANT_BOOL useDocPrec,
        long precision,
        long arrowsIn,
        VARIANT_BOOL useDocArrows,
        long arrow1,
        long arrow2,
        BSTR prefixText,
        BSTR suffixText,
        VARIANT_BOOL showValue,
        BSTR calloutText1,
        BSTR calloutText2,
        VARIANT_BOOL centerText,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalClosedCorner ( ) = 0;
    virtual HRESULT __stdcall SketchUseEdge2 (
        VARIANT_BOOL chain,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SketchOffsetEntities2 (
        double offset,
        VARIANT_BOOL bothDirections,
        VARIANT_BOOL chain,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SketchOffset2 (
        double offset,
        VARIANT_BOOL bothDirections,
        VARIANT_BOOL chain,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddDimension2 (
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddDimension2 (
        double x,
        double y,
        double z,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall AddHorizontalDimension2 (
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddHorizontalDimension2 (
        double x,
        double y,
        double z,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall AddVerticalDimension2 (
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddVerticalDimension2 (
        double x,
        double y,
        double z,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall AddRadialDimension2 (
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddRadialDimension2 (
        double x,
        double y,
        double z,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall AddDiameterDimension2 (
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddDiameterDimension2 (
        double x,
        double y,
        double z,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall GetUserUnit (
        long UnitType,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetUserUnit (
        long UnitType,
        struct IUserUnit * * retval ) = 0;
    virtual HRESULT __stdcall InsertWeldSymbol3 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertWeldSymbol3 (
        struct IWeldSymbol * * retval ) = 0;
    virtual HRESULT __stdcall SaveAs3 (
        BSTR newName,
        long saveAsVersion,
        long options,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceStringValue (
        long userPreference,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceStringValue (
        long userPreference,
        BSTR Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteDesignTable ( ) = 0;
    virtual HRESULT __stdcall EditRebuild3 (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ForceRebuild3 (
        VARIANT_BOOL topOnly,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33d59-27c5-11ce-bfd4-00400513bb57"))
ISelectionMgr : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetSelectedObjectCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSelectedObjectType (
        long AtIndex,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSelectedObject (
        long AtIndex,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSelectedObject (
        long AtIndex,
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall GetSelectionPoint (
        long AtIndex,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetSelectionPointInSketchSpace (
        long AtIndex,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetSelectedObject2 (
        long AtIndex,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSelectedObject2 (
        long AtIndex,
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall IsInEditTarget (
        long AtIndex,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetSelectedObjectsComponent (
        long AtIndex,
        IDispatch * * component ) = 0;
    virtual HRESULT __stdcall IGetSelectedObjectsComponent (
        long AtIndex,
        struct IComponent * * component ) = 0;
    virtual HRESULT __stdcall GetSelectedObject3 (
        long AtIndex,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSelectedObject3 (
        long AtIndex,
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall GetSelectedObjectType2 (
        long AtIndex,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetSelectionPoint (
        long AtIndex,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetSelectionPointInSketchSpace (
        long AtIndex,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSelectedObjectMark (
        long AtIndex,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetSelectedObjectMark (
        long AtIndex,
        long mark,
        long Action,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT AtIndex,
        long * retval ) = 0;
    virtual HRESULT __stdcall IDeSelect (
        long count,
        long * AtIndex,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetSelectedObjectsComponent2 (
        long AtIndex,
        struct IComponent2 * * component ) = 0;
    virtual HRESULT __stdcall CreateCallout (
        struct ICallout * * retval ) = 0;
    virtual HRESULT __stdcall GetSelectedObjectsDrawingView (
        long AtIndex,
        struct IView * * drView ) = 0;
    virtual HRESULT __stdcall get_EnableContourSelection (
        VARIANT_BOOL * valueOut ) = 0;
    virtual HRESULT __stdcall put_EnableContourSelection (
        VARIANT_BOOL valueOut ) = 0;
    virtual HRESULT __stdcall SetSelectionPoint (
        long AtIndex,
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33d9a-27c5-11ce-bfd4-00400513bb57"))
IComponent : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetChildren (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetChildren (
        struct IComponent * * * retval ) = 0;
    virtual HRESULT __stdcall IGetChildrenCount (
        int * retval ) = 0;
    virtual HRESULT __stdcall GetXform (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetXform (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetBody (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetBody (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall get_MaterialPropertyValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialPropertyValues (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall AddPropertyExtension (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPropertyExtension (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
    virtual HRESULT __stdcall GetMaterialIdName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialIdName (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetMaterialUserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialUserName (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetSectionedBodies (
        IDispatch * viewIn,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetBox (
        VARIANT_BOOL includeRefPlanes,
        VARIANT_BOOL includeSketches,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetBox (
        VARIANT_BOOL includeRefPlanes,
        VARIANT_BOOL includeSketches,
        double * retval ) = 0;
    virtual HRESULT __stdcall SetXform (
        VARIANT xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetXform (
        double * xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetModelDoc (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetModelDoc (
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall IsFixed (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EnumRelatedBodies (
        struct IEnumBodies * * retval ) = 0;
    virtual HRESULT __stdcall IsSuppressed (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EnumSectionedBodies (
        struct IModelView * viewIn,
        struct IEnumBodies * * retval ) = 0;
    virtual HRESULT __stdcall IsHidden (
        VARIANT_BOOL considerSuppressed,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ReferencedConfiguration (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ReferencedConfiguration (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetSuppression (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetSuppression (
        long state,
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Visible (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Visible (
        long retval ) = 0;
    virtual HRESULT __stdcall GetPathName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetXformAndSolve (
        VARIANT xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetXformAndSolve (
        double * xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriangles (
        VARIANT_BOOL noConversion,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriangles (
        VARIANT_BOOL noConversion,
        float * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTessNorms (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessNorms (
        float * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStrips (
        VARIANT_BOOL noConversion,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStrips (
        VARIANT_BOOL noConversion,
        float * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStripNorms (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripNorms (
        float * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStripEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripEdges (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripEdgeSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall IsDisplayDataOutOfDate (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetConstrainedStatus (
        long * retval ) = 0;
    virtual HRESULT __stdcall RemoveMaterialProperty (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IGetTemporaryBodyID (
        long * retval ) = 0;
    virtual HRESULT __stdcall FindAttribute (
        IDispatch * attributeDef,
        long whichOne,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFindAttribute (
        struct IAttributeDef * attributeDef,
        long whichOne,
        struct IAttribute * * retval ) = 0;
    virtual HRESULT __stdcall Select (
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectByMark (
        VARIANT_BOOL appendFlag,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Name2 (
        BSTR * newName ) = 0;
    virtual HRESULT __stdcall put_Name2 (
        BSTR newName ) = 0;
    virtual HRESULT __stdcall get_Solving (
        long * retval ) = 0;
};

struct __declspec(uuid("83a33d3c-27c5-11ce-bfd4-00400513bb57"))
IBody : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetFirstFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstFace (
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall GetFaceCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall CreateNewSurface (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateNewSurface (
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateBodyFromSurfaces (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreatePlanarSurface (
        VARIANT vRootPoint,
        VARIANT vNormal,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlanarSurface (
        VARIANT vRootPoint,
        VARIANT vNormal,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateRevolutionSurface (
        IDispatch * profileCurve,
        VARIANT axisPoint,
        VARIANT axisDirection,
        VARIANT profileEndPtParams,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateRevolutionSurface (
        struct ICurve * profileCurve,
        VARIANT axisPoint,
        VARIANT axisDirection,
        VARIANT profileEndPtParams,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateBsplineSurface (
        VARIANT props,
        VARIANT uKnots,
        VARIANT vKnots,
        VARIANT ctrlPtCoords,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBsplineSurface (
        VARIANT props,
        VARIANT uKnots,
        VARIANT vKnots,
        VARIANT ctrlPtCoords,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateTrimmedSurface (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddProfileLine (
        VARIANT rootPoint,
        VARIANT direction,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileLine (
        VARIANT rootPoint,
        VARIANT direction,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall AddProfileArc (
        VARIANT center,
        VARIANT axis,
        double radius,
        VARIANT startPoint,
        VARIANT endPoint,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileArc (
        VARIANT center,
        VARIANT axis,
        double radius,
        VARIANT startPoint,
        VARIANT endPoint,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall AddProfileBspline (
        VARIANT props,
        VARIANT knots,
        VARIANT ctrlPtCoords,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileBspline (
        VARIANT props,
        VARIANT knots,
        VARIANT ctrlPtCoords,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall CreateExtrusionSurface (
        IDispatch * profileCurve,
        VARIANT axisDirection,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateExtrusionSurface (
        struct ICurve * profileCurve,
        VARIANT axisDirection,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstSelectedFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstSelectedFace (
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall GetNextSelectedFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextSelectedFace (
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall GetSelectedFaceCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall CreateBoundedSurface (
        VARIANT_BOOL uOpt,
        VARIANT_BOOL vOpt,
        VARIANT uvParams,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetIgesErrorCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetIgesErrorCode (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall Copy (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICopy (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall EnumFaces (
        struct IEnumFaces * * retval ) = 0;
    virtual HRESULT __stdcall CreateBodyFromFaces (
        long NumOfFaces,
        VARIANT FaceList,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBodyFromFaces (
        long NumOfFaces,
        VARIANT FaceList,
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall DeleteFaces (
        long NumOfFaces,
        VARIANT FaceList,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Display (
        IDispatch * part,
        long Color ) = 0;
    virtual HRESULT __stdcall IDisplay (
        struct IPartDoc * part,
        long Color ) = 0;
    virtual HRESULT __stdcall Hide (
        IDispatch * part ) = 0;
    virtual HRESULT __stdcall IHide (
        struct IPartDoc * part ) = 0;
    virtual HRESULT __stdcall ICreatePlanarSurfaceDLL (
        double * rootPoint,
        double * Normal,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall ICreateRevolutionSurfaceDLL (
        struct ICurve * profileCurve,
        double * axisPoint,
        double * axisDirection,
        double * profileEndPtParams,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileLineDLL (
        double * rootPoint,
        double * direction,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileArcDLL (
        double * center,
        double * axis,
        double radius,
        double * startPoint,
        double * endPoint,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBsplineSurfaceDLL (
        long * Properties,
        double * UKnotArray,
        double * VKnotArray,
        double * ControlPointCoordArray,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileBsplineDLL (
        long * Properties,
        double * KnotArray,
        double * ControlPointCoordArray,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall ICreateExtrusionSurfaceDLL (
        struct ICurve * profileCurve,
        double * axisDirection,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBoundedSurface (
        VARIANT_BOOL uOpt,
        VARIANT_BOOL vOpt,
        double * uvParams ) = 0;
    virtual HRESULT __stdcall ICombineVolumes (
        struct IBody * ToolBody ) = 0;
    virtual HRESULT __stdcall ISectionBySheet (
        struct IBody * Sheet,
        long NumMaxSections,
        struct IBody * * SectionedBodies,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetBodyBox (
        double * BoxCorners ) = 0;
    virtual HRESULT __stdcall SetIgesInfo (
        BSTR systemName,
        double granularity,
        VARIANT_BOOL attemptKnitting ) = 0;
    virtual HRESULT __stdcall DisplayWireFrameXOR (
        IDispatch * part,
        long Color ) = 0;
    virtual HRESULT __stdcall IDisplayWireFrameXOR (
        struct IPartDoc * part,
        long Color ) = 0;
    virtual HRESULT __stdcall Save (
        IUnknown * streamIn ) = 0;
    virtual HRESULT __stdcall ISave (
        IUnknown * streamIn ) = 0;
    virtual HRESULT __stdcall CreateBlendSurface (
        IDispatch * Surface1,
        double Range1,
        IDispatch * Surface2,
        double Range2,
        VARIANT StartVec,
        VARIANT EndVec,
        int HaveHelpVec,
        VARIANT HelpVec,
        int HaveHelpBox,
        VARIANT HelpBox,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBlendSurface (
        struct ISurface * Surface1,
        double Range1,
        struct ISurface * Surface2,
        double Range2,
        double * StartVec,
        double * EndVec,
        int HaveHelpVec,
        double * HelpVec,
        int HaveHelpBox,
        double * HelpBox,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateOffsetSurface (
        IDispatch * surfaceIn,
        double distance,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateOffsetSurface (
        struct ISurface * surfaceIn,
        double distance,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall RemoveRedundantTopology (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetIntersectionEdges (
        IDispatch * toolBodyIn,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetIntersectionEdges (
        struct IBody * toolBodyIn,
        struct IEdge * * * EdgeListOut ) = 0;
    virtual HRESULT __stdcall IGetIntersectionEdgeCount (
        struct IBody * toolBodyIn,
        long * retval ) = 0;
    virtual HRESULT __stdcall RemoveFacesFromSheet (
        long NumOfFaces,
        VARIANT facesToRemove ) = 0;
    virtual HRESULT __stdcall IRemoveFacesFromSheet (
        long NumOfFaces,
        struct IFace * * * facesToRemove ) = 0;
    virtual HRESULT __stdcall ICreatePlanarTrimSurfaceDLL (
        long VertexCount,
        double * points,
        double * Normal ) = 0;
    virtual HRESULT __stdcall get_MaterialPropertyValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialPropertyValues (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall AddPropertyExtension (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPropertyExtension (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
    virtual HRESULT __stdcall GetMaterialIdName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialIdName (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetMaterialUserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialUserName (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetMassProperties (
        double density,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMassProperties (
        double density,
        double * retval ) = 0;
    virtual HRESULT __stdcall ICreatePsplineSurfaceDLL (
        long dim,
        long uorder,
        long vOrder,
        long ncol,
        long nrow,
        double * coeffs,
        long basis,
        double * xform,
        double scaleFactor,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall SetXform (
        VARIANT xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetXform (
        double * xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateTempBodyFromSurfaces (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateTempBodyFromSurfaces (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall Operations (
        int operationType,
        IDispatch * ToolBody,
        long NumMaxSections,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IOperations (
        int operationType,
        struct IBody * ToolBody,
        long NumMaxSections,
        struct IBody * * resultingBodies,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSheetBody (
        int index,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSheetBody (
        int index,
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall GetProcessedBody (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetProcessedBody (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall GetProcessedBodyWithSelFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetProcessedBodyWithSelFace (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall Check (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetExcessBodyArray (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetExcessBodyArray (
        struct IBody * * * retval ) = 0;
    virtual HRESULT __stdcall IGetExcessBodyCount (
        int * retval ) = 0;
    virtual HRESULT __stdcall CreateBaseFeature (
        IDispatch * bodyIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICreateBaseFeature (
        struct IBody * bodyIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteFaces2 (
        long NumOfFaces,
        VARIANT FaceList,
        int option,
        long * retval ) = 0;
    virtual HRESULT __stdcall IDeleteFaces2 (
        long NumOfFaces,
        struct IFace * * FaceList,
        int option,
        long * retval ) = 0;
    virtual HRESULT __stdcall IAddVertexPoint (
        double * point,
        struct IVertex * * retval ) = 0;
    virtual HRESULT __stdcall AddVertexPoint (
        VARIANT point,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall GetExtremePoint (
        double x,
        double y,
        double z,
        double * outx,
        double * outy,
        double * outz,
        VARIANT_BOOL * found ) = 0;
    virtual HRESULT __stdcall GetType (
        long * type ) = 0;
    virtual HRESULT __stdcall IDeleteFaces3 (
        long NumOfFaces,
        struct IFace * * FaceList,
        long option,
        VARIANT_BOOL doLocalCheck,
        VARIANT_BOOL * localCheckResult ) = 0;
    virtual HRESULT __stdcall SetCurrentSurface (
        IDispatch * surfaceIn ) = 0;
    virtual HRESULT __stdcall ISetCurrentSurface (
        struct ISurface * surfaceIn ) = 0;
    virtual HRESULT __stdcall DraftBody (
        long NumOfFaces,
        VARIANT FaceList,
        VARIANT EdgeList,
        double draftAngle,
        VARIANT dir,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IDraftBody (
        long NumOfFaces,
        struct IFace * * FaceList,
        struct IEdge * * EdgeList,
        double draftAngle,
        double * dir,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteBlends (
        long NumOfFaces,
        VARIANT FaceList,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IDeleteBlends (
        long NumOfFaces,
        struct IFace * * FaceList,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Operations2 (
        int operationType,
        IDispatch * ToolBody,
        long * errorCode,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IOperations2 (
        int operationType,
        struct IBody * ToolBody,
        long * errorCode,
        struct IEnumBodies * * retval ) = 0;
    virtual HRESULT __stdcall GetBodyBox (
        VARIANT * BoxCorners ) = 0;
    virtual HRESULT __stdcall DeleteBlends2 (
        long NumOfFaces,
        VARIANT FaceList,
        VARIANT_BOOL doLocalCheck,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IDeleteBlends2 (
        long NumOfFaces,
        struct IFace * * FaceList,
        VARIANT_BOOL doLocalCheck,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTessellation (
        VARIANT FaceList,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetTessellation (
        long NumOfFaces,
        struct IFace * * FaceList,
        struct ITessellation * * retval ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall MatchedBoolean (
        int operationType,
        IDispatch * ToolBody,
        long numOfMatchingFaces,
        VARIANT faceList1,
        VARIANT faceList2,
        long * errorCode,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IMatchedBoolean (
        int operationType,
        struct IBody * ToolBody,
        long numOfMatchingFaces,
        struct IFace * * faceList1,
        struct IFace * * faceList2,
        long * errorCode,
        struct IEnumBodies * * retval ) = 0;
    virtual HRESULT __stdcall GetEdgeCount (
        long * retval ) = 0;
};

struct __declspec(uuid("83a33d3e-27c5-11ce-bfd4-00400513bb57"))
IFace : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Normal (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Normal (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_MaterialUserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialUserName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaterialIdName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialIdName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaterialPropertyValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialPropertyValues (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_INormal (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_INormal (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetNextFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextFace (
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall GetSurface (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSurface (
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall GetEdgeCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEdges (
        struct IEdge * * * EdgeList ) = 0;
    virtual HRESULT __stdcall GetFeature (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFeature (
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall GetFeatureId (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTrimCurves (
        VARIANT_BOOL wantCubic,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetUVBounds (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall FaceInSurfaceSense (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLoopCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFirstLoop (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstLoop (
        struct ILoop * * retval ) = 0;
    virtual HRESULT __stdcall IsSame (
        IDispatch * faceIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IIsSame (
        struct IFace * faceIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddPropertyExtension (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPropertyExtension (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
    virtual HRESULT __stdcall GetTessTriangles (
        VARIANT_BOOL noConversion,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetTessNorms (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStrips (
        VARIANT_BOOL noConversion,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStripNorms (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall EnumLoops (
        struct IEnumLoops * * retval ) = 0;
    virtual HRESULT __stdcall EnumEdges (
        struct IEnumEdges * * retval ) = 0;
    virtual HRESULT __stdcall GetBody (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetBody (
        struct IBody * * Body ) = 0;
    virtual HRESULT __stdcall IGetTessTriangles (
        VARIANT_BOOL noConversion,
        float * retval ) = 0;
    virtual HRESULT __stdcall IGetTessNorms (
        float * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStrips (
        VARIANT_BOOL noConversion,
        float * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripNorms (
        float * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStripSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetUVBounds (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetClosestPointOn (
        double x,
        double y,
        double z,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetClosestPointOn (
        double x,
        double y,
        double z,
        double * retval ) = 0;
    virtual HRESULT __stdcall Highlight (
        VARIANT_BOOL state ) = 0;
    virtual HRESULT __stdcall IHighlight (
        VARIANT_BOOL state ) = 0;
    virtual HRESULT __stdcall GetTrimCurveTopology (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTrimCurveTopology (
        IDispatch * * * topolList ) = 0;
    virtual HRESULT __stdcall GetTrimCurveTopologyCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTrimCurveTopologyTypes (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTrimCurveTopologyTypes (
        long * retval ) = 0;
    virtual HRESULT __stdcall RemoveRedundantTopology (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateSheetBodyByFaceExtension (
        VARIANT boxLowIn,
        VARIANT boxHighIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSheetBodyByFaceExtension (
        double * boxLowIn,
        double * boxHighIn,
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall GetArea (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetBox (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetBox (
        double * retval ) = 0;
    virtual HRESULT __stdcall RemoveInnerLoops (
        long numOfLoops,
        VARIANT innerLoopsIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IRemoveInnerLoops (
        long numOfLoops,
        struct ILoop * * innerLoopsIn,
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall CreateSheetBody (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSheetBody (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall GetSilhoutteEdges (
        double * root,
        double * Normal,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSilhoutteEdges (
        double * root,
        double * Normal,
        struct IEdge * * * siledgesout ) = 0;
    virtual HRESULT __stdcall IGetSilhoutteEdgeCount (
        double * root,
        double * Normal,
        long * ret ) = 0;
    virtual HRESULT __stdcall IGetTrimCurveSize (
        VARIANT_BOOL wantCubic,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetTrimCurve (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetFaceId (
        int * retval ) = 0;
    virtual HRESULT __stdcall SetFaceId (
        int idIn ) = 0;
    virtual HRESULT __stdcall IGetTrimCurveSize2 (
        long wantCubic,
        long wantNRational,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSilhoutteEdgesVB (
        double xroot,
        double yroot,
        double zroot,
        double xnormal,
        double ynormal,
        double znormal,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall RemoveFaceId (
        int idIn ) = 0;
    virtual HRESULT __stdcall GetTrimCurves2 (
        VARIANT_BOOL wantCubic,
        VARIANT_BOOL wantNRational,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetShellType (
        int * retval ) = 0;
    virtual HRESULT __stdcall IGetFacetData (
        int facetMesh,
        int * nFacets,
        int * nStrips,
        int * * stripVertexNums,
        float * * vertexCoords,
        float * * normalCoords ) = 0;
    virtual HRESULT __stdcall GetTessTriStripEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripEdges (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripEdgeSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall RemoveMaterialProperty (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetPatternSeedFeature (
        IDispatch * * seedFeature ) = 0;
    virtual HRESULT __stdcall IGetPatternSeedFeature (
        struct IFeature * * seedFeature ) = 0;
};

struct __declspec(uuid("83a33d40-27c5-11ce-bfd4-00400513bb57"))
ISurface : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_PlaneParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_CylinderParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ConeParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_SphereParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_TorusParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IsPlane (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsCylinder (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsCone (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Identity (
        long * retval ) = 0;
    virtual HRESULT __stdcall IsSphere (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsTorus (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsParametric (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsBlending (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsOffset (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsSwept (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsRevolved (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsForeign (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Parameterization (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall Evaluate (
        double UParam,
        double VParam,
        long NumUDeriv,
        long NumVDeriv,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetBSurfParams (
        VARIANT_BOOL wantCubicRational,
        VARIANT vP0,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall AddTrimmingLoop (
        long nCrvs,
        VARIANT vOrder,
        VARIANT vDim,
        VARIANT vPeriodic,
        VARIANT vNumKnots,
        VARIANT vNumCtrlPoints,
        VARIANT vKnots,
        VARIANT vCtrlPointDbls,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateNewCurve (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateNewCurve (
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall GetRevsurfParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetExtrusionsurfParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetProfileCurve (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetProfileCurve (
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall ReverseEvaluate (
        double positionX,
        double positionY,
        double positionZ,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_IPlaneParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_ICylinderParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_IConeParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_ISphereParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_ITorusParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall IReverseEvaluate (
        double positionX,
        double positionY,
        double positionZ,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetRevsurfParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetExtrusionsurfParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall IParameterization (
        double * retval ) = 0;
    virtual HRESULT __stdcall IEvaluate (
        double UParam,
        double VParam,
        long NumUDeriv,
        long NumVDeriv,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetBSurfParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetBSurfParamsSize (
        VARIANT_BOOL wantCubicRational,
        double * Range,
        long * retval ) = 0;
    virtual HRESULT __stdcall IAddTrimmingLoop (
        long CurveCount,
        long * order,
        long * dim,
        long * Periodic,
        long * NumKnots,
        long * NumCtrlPoints,
        double * knots,
        double * CtrlPointDbls ) = 0;
    virtual HRESULT __stdcall EvaluateAtPoint (
        double positionX,
        double positionY,
        double positionZ,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IEvaluateAtPoint (
        double positionX,
        double positionY,
        double positionZ,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetOffsetSurfParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetBSurfParamsSize2 (
        VARIANT_BOOL wantCubic,
        VARIANT_BOOL wantNonRational,
        double * Range,
        long * retval ) = 0;
    virtual HRESULT __stdcall Copy (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICopy (
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateTrimmedSheet (
        VARIANT curves,
        IDispatch * * Sheet ) = 0;
    virtual HRESULT __stdcall ICreateTrimmedSheet (
        long nCurves,
        struct ICurve * * curves,
        struct IBody * * Sheet ) = 0;
    virtual HRESULT __stdcall AddTrimmingLoop2 (
        long nCrvs,
        VARIANT vOrder,
        VARIANT vDim,
        VARIANT vPeriodic,
        VARIANT vNumKnots,
        VARIANT vNumCtrlPoints,
        VARIANT vKnots,
        VARIANT vCtrlPointDbls,
        VARIANT uvRange,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IAddTrimmingLoop2 (
        long CurveCount,
        long * order,
        long * dim,
        long * Periodic,
        long * NumKnots,
        long * NumCtrlPoints,
        double * knots,
        double * CtrlPointDbls,
        double * uvRange ) = 0;
    virtual HRESULT __stdcall GetBSurfParams2 (
        VARIANT_BOOL wantCubic,
        VARIANT_BOOL wantNonRational,
        VARIANT vP0,
        double tolerance,
        VARIANT_BOOL * sense,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetBSurfParamsSize3 (
        VARIANT_BOOL wantCubic,
        VARIANT_BOOL wantNonRational,
        double * Range,
        double tolerance,
        VARIANT_BOOL * sense,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetClosestPointOn (
        double x,
        double y,
        double z,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetClosestPointOn (
        double x,
        double y,
        double z,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetOffsetSurfParams2 (
        IDispatch * * baseSurf,
        VARIANT_BOOL * sense,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetOffsetSurfParams2 (
        struct ISurface * * baseSurf,
        VARIANT_BOOL * sense,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetIntersectSurfaceCount (
        struct ISurface * otherSurface,
        long * count ) = 0;
    virtual HRESULT __stdcall IIntersectSurface (
        struct ISurface * otherSurf,
        long CurveCount,
        struct ICurve * * curveArray,
        double * boundsArray,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IntersectSurface (
        IDispatch * otherSurf,
        VARIANT * curveArray,
        VARIANT * boundsArray,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetIntersectCurveCount (
        struct ICurve * otherCurve,
        double * curveBound,
        long * count ) = 0;
    virtual HRESULT __stdcall IIntersectCurve (
        struct ICurve * otherCurve,
        double * curveBound,
        long PointCount,
        double * pointArray,
        double * tArray,
        double * uvArray,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IntersectCurve (
        IDispatch * otherCurve,
        VARIANT curveBound,
        VARIANT * pointArray,
        VARIANT * tArray,
        VARIANT * uvArray,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall MakeIsoCurve (
        VARIANT_BOOL UorV,
        double uvValue,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IMakeIsoCurve (
        VARIANT_BOOL UorV,
        double uvValue,
        struct ICurve * * retval ) = 0;
};

struct __declspec(uuid("83a33d44-27c5-11ce-bfd4-00400513bb57"))
ICurve : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LineParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_CircleParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall Identity (
        long * retval ) = 0;
    virtual HRESULT __stdcall IsCircle (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsLine (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsBcurve (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBCurveParams (
        VARIANT_BOOL wantCubicIn,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ConvertLineToBcurve (
        VARIANT startPoint,
        VARIANT endPoint,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ConvertArcToBcurve (
        VARIANT center,
        VARIANT axis,
        VARIANT start,
        VARIANT end,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ReverseCurve (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IReverseCurve (
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall GetPCurveParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall get_ILineParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_ICircleParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetBCurveParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetBCurveParamsSize (
        VARIANT_BOOL wantCubicIn,
        long * retval ) = 0;
    virtual HRESULT __stdcall IConvertLineToBcurveSize (
        double * startPoint,
        double * endPoint,
        long * retval ) = 0;
    virtual HRESULT __stdcall IConvertArcToBcurveSize (
        double * center,
        double * axis,
        double * start,
        double * end,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetPCurveParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetPCurveParamsSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLength (
        double startParam,
        double endParam,
        double * retval ) = 0;
    virtual HRESULT __stdcall IConvertPcurveToBcurveSize (
        long dim,
        long order,
        long nsegs,
        double * coeffs,
        long basis,
        double * xform,
        double scaleFactor,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSplinePts (
        VARIANT paramsArrayIn,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSplinePts (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetSplinePtsSize (
        int * propArray,
        double * knotsArray,
        double * cntrlPntCoordArray,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetBCurveParamsSize2 (
        VARIANT_BOOL wantCubic,
        VARIANT_BOOL wantNRational,
        long * retval ) = 0;
    virtual HRESULT __stdcall Copy (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICopy (
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall GetTessPts (
        double chordTolerance,
        double lengthTolerance,
        VARIANT startPoint,
        VARIANT endPoint,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessPts (
        double chordTolerance,
        double lengthTolerance,
        double * startPoint,
        double * endPoint,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetTessPtsSize (
        double chordTolerance,
        double lengthTolerance,
        double * startPoint,
        double * endPoint,
        long * retval ) = 0;
    virtual HRESULT __stdcall IntersectCurve (
        IDispatch * otherCurve,
        VARIANT thisStartPoint,
        VARIANT thisEndPoint,
        VARIANT otherStartPoint,
        VARIANT otherEndPoint,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IIntersectCurve (
        struct ICurve * otherCurve,
        double * thisStartPoint,
        double * thisEndPoint,
        double * otherStartPoint,
        double * otherEndPoint,
        double * retval ) = 0;
    virtual HRESULT __stdcall IIntersectCurveSize (
        struct ICurve * otherCurve,
        double * thisStartPoint,
        double * thisEndPoint,
        double * otherStartPoint,
        double * otherEndPoint,
        long * retval ) = 0;
    virtual HRESULT __stdcall CreateTrimmedCurve (
        double x1,
        double y1,
        double z1,
        double x2,
        double y2,
        double z2,
        IDispatch * * trimmedCurve ) = 0;
    virtual HRESULT __stdcall ICreateTrimmedCurve (
        double * start,
        double * end,
        struct ICurve * * trimmedCurve ) = 0;
    virtual HRESULT __stdcall IsEllipse (
        VARIANT_BOOL * IsEllipse ) = 0;
    virtual HRESULT __stdcall GetEllipseParams (
        VARIANT * params ) = 0;
    virtual HRESULT __stdcall IGetEllipseParams (
        double * paramArray ) = 0;
    virtual HRESULT __stdcall Evaluate (
        double Parameter,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IEvaluate (
        double Parameter,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetClosestPointOn (
        double x,
        double y,
        double z,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetClosestPointOn (
        double x,
        double y,
        double z,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEndParams (
        double * start,
        double * end,
        VARIANT_BOOL * isClosed,
        VARIANT_BOOL * isPeriodic,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLength2 (
        double startParam,
        double endParam,
        double * retval ) = 0;
    virtual HRESULT __stdcall MakeBsplineCurve (
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall CreateWireBody (
        struct IBody2 * * pBody ) = 0;
    virtual HRESULT __stdcall GetBaseCurve (
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall IsTrimmedCurve (
        VARIANT_BOOL * isTrimmed ) = 0;
};

struct __declspec(uuid("3a075bfd-9962-4431-8321-7af4903c55ad"))
IBody2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetFirstFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstFace (
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall GetFaceCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall CreateNewSurface (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateNewSurface (
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateBodyFromSurfaces (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreatePlanarSurface (
        VARIANT vRootPoint,
        VARIANT vNormal,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlanarSurface (
        VARIANT vRootPoint,
        VARIANT vNormal,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateRevolutionSurface (
        IDispatch * profileCurve,
        VARIANT axisPoint,
        VARIANT axisDirection,
        VARIANT profileEndPtParams,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateRevolutionSurface (
        struct ICurve * profileCurve,
        VARIANT axisPoint,
        VARIANT axisDirection,
        VARIANT profileEndPtParams,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateBsplineSurface (
        VARIANT props,
        VARIANT uKnots,
        VARIANT vKnots,
        VARIANT ctrlPtCoords,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBsplineSurface (
        VARIANT props,
        VARIANT uKnots,
        VARIANT vKnots,
        VARIANT ctrlPtCoords,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateTrimmedSurface (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddProfileLine (
        VARIANT rootPoint,
        VARIANT direction,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileLine (
        VARIANT rootPoint,
        VARIANT direction,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall AddProfileArc (
        VARIANT center,
        VARIANT axis,
        double radius,
        VARIANT startPoint,
        VARIANT endPoint,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileArc (
        VARIANT center,
        VARIANT axis,
        double radius,
        VARIANT startPoint,
        VARIANT endPoint,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall AddProfileBspline (
        VARIANT props,
        VARIANT knots,
        VARIANT ctrlPtCoords,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileBspline (
        VARIANT props,
        VARIANT knots,
        VARIANT ctrlPtCoords,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall CreateExtrusionSurface (
        IDispatch * profileCurve,
        VARIANT axisDirection,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateExtrusionSurface (
        struct ICurve * profileCurve,
        VARIANT axisDirection,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstSelectedFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstSelectedFace (
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall GetNextSelectedFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextSelectedFace (
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall GetSelectedFaceCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall CreateBoundedSurface (
        VARIANT_BOOL uOpt,
        VARIANT_BOOL vOpt,
        VARIANT uvParams,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetIgesErrorCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetIgesErrorCode (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall Copy (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICopy (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall EnumFaces (
        struct IEnumFaces2 * * retval ) = 0;
    virtual HRESULT __stdcall CreateBodyFromFaces (
        long NumOfFaces,
        VARIANT FaceList,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBodyFromFaces (
        long NumOfFaces,
        VARIANT FaceList,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall DeleteFaces (
        long NumOfFaces,
        VARIANT FaceList,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Display (
        IDispatch * part,
        long Color ) = 0;
    virtual HRESULT __stdcall IDisplay (
        struct IPartDoc * part,
        long Color ) = 0;
    virtual HRESULT __stdcall Hide (
        IDispatch * part ) = 0;
    virtual HRESULT __stdcall IHide (
        struct IPartDoc * part ) = 0;
    virtual HRESULT __stdcall ICreatePlanarSurfaceDLL (
        double * rootPoint,
        double * Normal,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall ICreateRevolutionSurfaceDLL (
        struct ICurve * profileCurve,
        double * axisPoint,
        double * axisDirection,
        double * profileEndPtParams,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileLineDLL (
        double * rootPoint,
        double * direction,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileArcDLL (
        double * center,
        double * axis,
        double radius,
        double * startPoint,
        double * endPoint,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBsplineSurfaceDLL (
        long * Properties,
        double * UKnotArray,
        double * VKnotArray,
        double * ControlPointCoordArray,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileBsplineDLL (
        long * Properties,
        double * KnotArray,
        double * ControlPointCoordArray,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall ICreateExtrusionSurfaceDLL (
        struct ICurve * profileCurve,
        double * axisDirection,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBoundedSurface (
        VARIANT_BOOL uOpt,
        VARIANT_BOOL vOpt,
        double * uvParams ) = 0;
    virtual HRESULT __stdcall ICombineVolumes (
        struct IBody2 * ToolBody ) = 0;
    virtual HRESULT __stdcall ISectionBySheet (
        struct IBody2 * Sheet,
        long NumMaxSections,
        struct IBody2 * * SectionedBodies,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetBodyBox (
        double * BoxCorners ) = 0;
    virtual HRESULT __stdcall SetIgesInfo (
        BSTR systemName,
        double granularity,
        VARIANT_BOOL attemptKnitting ) = 0;
    virtual HRESULT __stdcall DisplayWireFrameXOR (
        IDispatch * part,
        long Color ) = 0;
    virtual HRESULT __stdcall IDisplayWireFrameXOR (
        struct IPartDoc * part,
        long Color ) = 0;
    virtual HRESULT __stdcall Save (
        IUnknown * streamIn ) = 0;
    virtual HRESULT __stdcall ISave (
        IUnknown * streamIn ) = 0;
    virtual HRESULT __stdcall CreateBlendSurface (
        IDispatch * Surface1,
        double Range1,
        IDispatch * Surface2,
        double Range2,
        VARIANT StartVec,
        VARIANT EndVec,
        int HaveHelpVec,
        VARIANT HelpVec,
        int HaveHelpBox,
        VARIANT HelpBox,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBlendSurface (
        struct ISurface * Surface1,
        double Range1,
        struct ISurface * Surface2,
        double Range2,
        double * StartVec,
        double * EndVec,
        int HaveHelpVec,
        double * HelpVec,
        int HaveHelpBox,
        double * HelpBox,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateOffsetSurface (
        IDispatch * surfaceIn,
        double distance,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateOffsetSurface (
        struct ISurface * surfaceIn,
        double distance,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall RemoveRedundantTopology (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetIntersectionEdges (
        IDispatch * toolBodyIn,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetIntersectionEdges (
        struct IBody2 * toolBodyIn,
        struct IEdge * * EdgeListOut ) = 0;
    virtual HRESULT __stdcall IGetIntersectionEdgeCount (
        struct IBody2 * toolBodyIn,
        long * retval ) = 0;
    virtual HRESULT __stdcall RemoveFacesFromSheet (
        long NumOfFaces,
        VARIANT facesToRemove ) = 0;
    virtual HRESULT __stdcall IRemoveFacesFromSheet (
        long NumOfFaces,
        struct IFace2 * * facesToRemove ) = 0;
    virtual HRESULT __stdcall ICreatePlanarTrimSurfaceDLL (
        long VertexCount,
        double * points,
        double * Normal ) = 0;
    virtual HRESULT __stdcall get_MaterialPropertyValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialPropertyValues (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall AddPropertyExtension (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPropertyExtension (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
    virtual HRESULT __stdcall GetMaterialIdName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialIdName (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetMaterialUserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialUserName (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetMassProperties (
        double density,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMassProperties (
        double density,
        double * retval ) = 0;
    virtual HRESULT __stdcall ICreatePsplineSurfaceDLL (
        long dim,
        long uorder,
        long vOrder,
        long ncol,
        long nrow,
        double * coeffs,
        long basis,
        double * xform,
        double scaleFactor,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall SetXform (
        VARIANT xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetXform (
        double * xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateTempBodyFromSurfaces (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateTempBodyFromSurfaces (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall Operations (
        int operationType,
        IDispatch * ToolBody,
        long NumMaxSections,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IOperations (
        int operationType,
        struct IBody2 * ToolBody,
        long NumMaxSections,
        struct IBody2 * * resultingBodies,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSheetBody (
        int index,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSheetBody (
        int index,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall GetProcessedBody (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetProcessedBody (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall GetProcessedBodyWithSelFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetProcessedBodyWithSelFace (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall Check (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetExcessBodyArray (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetExcessBodyArray (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall IGetExcessBodyCount (
        int * retval ) = 0;
    virtual HRESULT __stdcall CreateBaseFeature (
        IDispatch * bodyIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICreateBaseFeature (
        struct IBody2 * bodyIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteFaces2 (
        long NumOfFaces,
        VARIANT FaceList,
        int option,
        long * retval ) = 0;
    virtual HRESULT __stdcall IDeleteFaces2 (
        long NumOfFaces,
        struct IFace2 * * FaceList,
        int option,
        long * retval ) = 0;
    virtual HRESULT __stdcall IAddVertexPoint (
        double * point,
        struct IVertex * * retval ) = 0;
    virtual HRESULT __stdcall AddVertexPoint (
        VARIANT point,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall GetExtremePoint (
        double x,
        double y,
        double z,
        double * outx,
        double * outy,
        double * outz,
        VARIANT_BOOL * found ) = 0;
    virtual HRESULT __stdcall GetType (
        long * type ) = 0;
    virtual HRESULT __stdcall IDeleteFaces3 (
        long NumOfFaces,
        struct IFace2 * * FaceList,
        long option,
        VARIANT_BOOL doLocalCheck,
        VARIANT_BOOL * localCheckResult ) = 0;
    virtual HRESULT __stdcall SetCurrentSurface (
        IDispatch * surfaceIn ) = 0;
    virtual HRESULT __stdcall ISetCurrentSurface (
        struct ISurface * surfaceIn ) = 0;
    virtual HRESULT __stdcall DraftBody (
        long NumOfFaces,
        VARIANT FaceList,
        VARIANT EdgeList,
        double draftAngle,
        VARIANT dir,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IDraftBody (
        long NumOfFaces,
        struct IFace2 * * FaceList,
        struct IEdge * * EdgeList,
        double draftAngle,
        double * dir,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteBlends (
        long NumOfFaces,
        VARIANT FaceList,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IDeleteBlends (
        long NumOfFaces,
        struct IFace2 * * FaceList,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Operations2 (
        int operationType,
        IDispatch * ToolBody,
        long * errorCode,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IOperations2 (
        int operationType,
        struct IBody2 * ToolBody,
        long * errorCode,
        struct IEnumBodies2 * * retval ) = 0;
    virtual HRESULT __stdcall GetBodyBox (
        VARIANT * BoxCorners ) = 0;
    virtual HRESULT __stdcall DeleteBlends2 (
        long NumOfFaces,
        VARIANT FaceList,
        VARIANT_BOOL doLocalCheck,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IDeleteBlends2 (
        long NumOfFaces,
        struct IFace2 * * FaceList,
        VARIANT_BOOL doLocalCheck,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTessellation (
        VARIANT FaceList,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetTessellation (
        long NumOfFaces,
        struct IFace2 * * FaceList,
        struct ITessellation * * retval ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall MatchedBoolean (
        int operationType,
        IDispatch * ToolBody,
        long numOfMatchingFaces,
        VARIANT faceList1,
        VARIANT faceList2,
        long * errorCode,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IMatchedBoolean (
        int operationType,
        struct IBody2 * ToolBody,
        long numOfMatchingFaces,
        struct IFace2 * * faceList1,
        struct IFace2 * * faceList2,
        long * errorCode,
        struct IEnumBodies2 * * retval ) = 0;
    virtual HRESULT __stdcall GetEdgeCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall CreateRuledSurface (
        IDispatch * Curve1,
        IDispatch * Curve2,
        VARIANT apexPoint,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateRuledSurface (
        struct ICurve * Curve1,
        struct ICurve * Curve2,
        double * apexPoint,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall AddProfileBsplineByPts (
        long numPoints,
        VARIANT pointArray,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddProfileBsplineByPts (
        long numPoints,
        double * pointArray,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall GetEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEdges (
        long count,
        struct IEdge * * retval ) = 0;
    virtual HRESULT __stdcall ApplyTransform (
        struct IMathTransform * xform,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Select (
        VARIANT_BOOL Append,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall MatchedBoolean2 (
        int operationType,
        VARIANT ToolBody,
        long numOfMatchingFaces,
        VARIANT faceList1,
        VARIANT faceList2,
        long * errorCode,
        VARIANT * resultBodies ) = 0;
    virtual HRESULT __stdcall IMatchedBoolean2 (
        int operationType,
        long toolBodyCount,
        struct IBody2 * * toolBodyArr,
        long numOfMatchingFaces,
        struct IFace2 * * faceList1,
        struct IFace2 * * faceList2,
        long * errorCode,
        struct IEnumBodies2 * * retval ) = 0;
    virtual HRESULT __stdcall HideBody (
        VARIANT_BOOL bHide ) = 0;
    virtual HRESULT __stdcall get_IsSafe (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetSafeBody (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall GetProcessedBody2 (
        double MaxUAngle,
        double MaxVAngle,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall FindAttribute (
        struct IAttributeDef * attributeDef,
        long whichOne,
        struct IAttribute * * retval ) = 0;
    virtual HRESULT __stdcall MatchedBoolean3 (
        int operationType,
        VARIANT ToolBody,
        long numOfMatchingFaces,
        VARIANT faceList1,
        VARIANT faceList2,
        long * errorCode,
        VARIANT * resultBodies ) = 0;
    virtual HRESULT __stdcall IMatchedBoolean3 (
        int operationType,
        long toolBodyCount,
        struct IBody2 * * toolBodyArr,
        long numOfMatchingFaces,
        struct IFace2 * * faceList1,
        struct IFace2 * * faceList2,
        long * errorCode,
        struct IEnumBodies2 * * retval ) = 0;
    virtual HRESULT __stdcall GetSelectionId (
        BSTR * selectionId ) = 0;
    virtual HRESULT __stdcall get_MaterialPropertyValues2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialPropertyValues2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_IMaterialPropertyValues2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IMaterialPropertyValues2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall AddPropertyExtension2 (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPropertyExtension2 (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ResetPropertyExtension2 ( ) = 0;
    virtual HRESULT __stdcall GetMaterialIdName2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialIdName2 (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetMaterialUserName2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialUserName2 (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("4a8ba4d8-da25-4b75-8e2d-4922b74d81ed"))
IFace2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Normal (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Normal (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_MaterialUserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialUserName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaterialIdName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialIdName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaterialPropertyValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialPropertyValues (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_INormal (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_INormal (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetNextFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextFace (
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall GetSurface (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSurface (
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall GetEdgeCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEdges (
        struct IEdge * * EdgeList ) = 0;
    virtual HRESULT __stdcall GetFeature (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFeature (
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall GetFeatureId (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTrimCurves (
        VARIANT_BOOL wantCubic,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetUVBounds (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall FaceInSurfaceSense (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLoopCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFirstLoop (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstLoop (
        struct ILoop2 * * retval ) = 0;
    virtual HRESULT __stdcall IsSame (
        IDispatch * faceIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IIsSame (
        struct IFace2 * faceIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddPropertyExtension (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPropertyExtension (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
    virtual HRESULT __stdcall GetTessTriangles (
        VARIANT_BOOL noConversion,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetTessNorms (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStrips (
        VARIANT_BOOL noConversion,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStripNorms (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall EnumLoops (
        struct IEnumLoops2 * * retval ) = 0;
    virtual HRESULT __stdcall EnumEdges (
        struct IEnumEdges * * retval ) = 0;
    virtual HRESULT __stdcall GetBody (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetBody (
        struct IBody2 * * Body ) = 0;
    virtual HRESULT __stdcall IGetTessTriangles (
        VARIANT_BOOL noConversion,
        float * retval ) = 0;
    virtual HRESULT __stdcall IGetTessNorms (
        float * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStrips (
        VARIANT_BOOL noConversion,
        float * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripNorms (
        float * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStripSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetUVBounds (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetClosestPointOn (
        double x,
        double y,
        double z,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetClosestPointOn (
        double x,
        double y,
        double z,
        double * retval ) = 0;
    virtual HRESULT __stdcall Highlight (
        VARIANT_BOOL state ) = 0;
    virtual HRESULT __stdcall IHighlight (
        VARIANT_BOOL state ) = 0;
    virtual HRESULT __stdcall GetTrimCurveTopology (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTrimCurveTopology (
        IDispatch * * topolList ) = 0;
    virtual HRESULT __stdcall GetTrimCurveTopologyCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTrimCurveTopologyTypes (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTrimCurveTopologyTypes (
        long * retval ) = 0;
    virtual HRESULT __stdcall RemoveRedundantTopology (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateSheetBodyByFaceExtension (
        VARIANT boxLowIn,
        VARIANT boxHighIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSheetBodyByFaceExtension (
        double * boxLowIn,
        double * boxHighIn,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall GetArea (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetBox (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetBox (
        double * retval ) = 0;
    virtual HRESULT __stdcall RemoveInnerLoops (
        long numOfLoops,
        VARIANT innerLoopsIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IRemoveInnerLoops (
        long numOfLoops,
        struct ILoop2 * * innerLoopsIn,
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall CreateSheetBody (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSheetBody (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall GetSilhoutteEdges (
        double * root,
        double * Normal,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSilhoutteEdges (
        double * root,
        double * Normal,
        struct IEdge * * siledgesout ) = 0;
    virtual HRESULT __stdcall IGetSilhoutteEdgeCount (
        double * root,
        double * Normal,
        long * ret ) = 0;
    virtual HRESULT __stdcall IGetTrimCurveSize (
        VARIANT_BOOL wantCubic,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetTrimCurve (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetFaceId (
        int * retval ) = 0;
    virtual HRESULT __stdcall SetFaceId (
        int idIn ) = 0;
    virtual HRESULT __stdcall IGetTrimCurveSize2 (
        long wantCubic,
        long wantNRational,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSilhoutteEdgesVB (
        double xroot,
        double yroot,
        double zroot,
        double xnormal,
        double ynormal,
        double znormal,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall RemoveFaceId (
        int idIn ) = 0;
    virtual HRESULT __stdcall GetTrimCurves2 (
        VARIANT_BOOL wantCubic,
        VARIANT_BOOL wantNRational,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetShellType (
        int * retval ) = 0;
    virtual HRESULT __stdcall IGetFacetData (
        int facetMesh,
        int * nFacets,
        int * nStrips,
        int * stripVertexNums,
        float * vertexCoords,
        float * normalCoords ) = 0;
    virtual HRESULT __stdcall GetTessTriStripEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripEdges (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripEdgeSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall RemoveMaterialProperty (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetPatternSeedFeature (
        IDispatch * * seedFeature ) = 0;
    virtual HRESULT __stdcall IGetPatternSeedFeature (
        struct IFeature * * seedFeature ) = 0;
};

struct __declspec(uuid("83a33d42-27c5-11ce-bfd4-00400513bb57"))
IEdge : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetCurve (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetCurve (
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall GetCurveParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCurveParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall Evaluate (
        double Parameter,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IEvaluate (
        double Parameter,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetParameter (
        double x,
        double y,
        double z,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetParameter (
        double x,
        double y,
        double z,
        double * retval ) = 0;
    virtual HRESULT __stdcall EdgeInFaceSense (
        IDispatch * facedisp,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IEdgeInFaceSense (
        struct IFace * facedisp,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTwoAdjacentFaces (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTwoAdjacentFaces (
        struct IFace * * face1,
        struct IFace * * face2 ) = 0;
    virtual HRESULT __stdcall EnumCoEdges (
        struct IEnumCoEdges * * retval ) = 0;
    virtual HRESULT __stdcall GetStartVertex (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetStartVertex (
        struct IVertex * * retval ) = 0;
    virtual HRESULT __stdcall GetEndVertex (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetEndVertex (
        struct IVertex * * retval ) = 0;
    virtual HRESULT __stdcall GetClosestPointOn (
        double x,
        double y,
        double z,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetClosestPointOn (
        double x,
        double y,
        double z,
        double * retval ) = 0;
    virtual HRESULT __stdcall RemoveRedundantTopology (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetId (
        int * retval ) = 0;
    virtual HRESULT __stdcall SetId (
        int idIn ) = 0;
    virtual HRESULT __stdcall RemoveId ( ) = 0;
    virtual HRESULT __stdcall GetCurveParams2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCurveParams2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall IsParamReversed (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Highlight (
        VARIANT_BOOL state ) = 0;
    virtual HRESULT __stdcall GetCoEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IEdgeInFaceSense2 (
        struct IFace2 * facedisp,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTwoAdjacentFaces2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTwoAdjacentFaces2 (
        struct IFace2 * * face1,
        struct IFace2 * * face2 ) = 0;
    virtual HRESULT __stdcall Display (
        long width,
        double Red,
        double Green,
        double Blue,
        VARIANT_BOOL HighlightState ) = 0;
    virtual HRESULT __stdcall GetTangentEdgesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetTangentEdges (
        long count,
        struct IEdge * * edgeArr ) = 0;
    virtual HRESULT __stdcall GetTangentEdges (
        VARIANT * edgeArr ) = 0;
    virtual HRESULT __stdcall CreateWireBody (
        struct IBody2 * * pBody ) = 0;
    virtual HRESULT __stdcall GetBody (
        struct IBody2 * * pBody ) = 0;
};

struct __declspec(uuid("83a33d61-27c5-11ce-bfd4-00400513bb57"))
IEnumCoEdges : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct ICoEdge * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumCoEdges * * ppenum ) = 0;
};

struct __declspec(uuid("83a33d57-27c5-11ce-bfd4-00400513bb57"))
ICoEdge : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetEdge (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetEdge (
        struct IEdge * * retval ) = 0;
    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct ICoEdge * * retval ) = 0;
    virtual HRESULT __stdcall GetLoop (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetLoop (
        struct ILoop * * Body ) = 0;
    virtual HRESULT __stdcall GetSense (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetPartner (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetPartner (
        struct ICoEdge * * retval ) = 0;
    virtual HRESULT __stdcall GetCurveParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall Evaluate (
        double param,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCurveParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall IEvaluate (
        double param,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetCurve (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetCurve (
        struct ICurve * * Body ) = 0;
    virtual HRESULT __stdcall IGetLoop2 (
        struct ILoop2 * * loop ) = 0;
};

struct __declspec(uuid("83a33d53-27c5-11ce-bfd4-00400513bb57"))
ILoop : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct ILoop * * retval ) = 0;
    virtual HRESULT __stdcall GetEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEdges (
        struct IEdge * * * EdgeList ) = 0;
    virtual HRESULT __stdcall GetEdgeCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IsOuter (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetFirstCoEdge (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstCoEdge (
        struct ICoEdge * * retval ) = 0;
    virtual HRESULT __stdcall EnumEdges (
        struct IEnumEdges * * retval ) = 0;
    virtual HRESULT __stdcall EnumCoEdges (
        struct IEnumCoEdges * * retval ) = 0;
    virtual HRESULT __stdcall GetFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFace (
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall SweepPlanarLoop (
        double x,
        double y,
        double z,
        double draftAngle,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ISweepPlanarLoop (
        double x,
        double y,
        double z,
        double draftAngle,
        struct IFace * * stopFacesOut,
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall Dummy015 ( ) = 0;
    virtual HRESULT __stdcall Dummy016 ( ) = 0;
    virtual HRESULT __stdcall RevolvePlanarLoop (
        double x,
        double y,
        double z,
        double axisx,
        double axisy,
        double axisz,
        double revAngle,
        VARIANT * facesAndBody ) = 0;
    virtual HRESULT __stdcall IRevolvePlanarLoop (
        double x,
        double y,
        double z,
        double axisx,
        double axisy,
        double axisz,
        double revAngle,
        struct IFace * * stopFacesOut,
        struct IBody * * retval ) = 0;
};

struct __declspec(uuid("83a33d5f-27c5-11ce-bfd4-00400513bb57"))
IEnumEdges : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct IEdge * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumEdges * * ppenum ) = 0;
};

struct __declspec(uuid("9350ca6e-0adb-485a-8941-9407dd7b3b8e"))
ILoop2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct ILoop2 * * retval ) = 0;
    virtual HRESULT __stdcall GetEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEdges (
        struct IEdge * * EdgeList ) = 0;
    virtual HRESULT __stdcall GetEdgeCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IsOuter (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetFirstCoEdge (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstCoEdge (
        struct ICoEdge * * retval ) = 0;
    virtual HRESULT __stdcall EnumEdges (
        struct IEnumEdges * * retval ) = 0;
    virtual HRESULT __stdcall EnumCoEdges (
        struct IEnumCoEdges * * retval ) = 0;
    virtual HRESULT __stdcall GetFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFace (
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall SweepPlanarLoop (
        double x,
        double y,
        double z,
        double draftAngle,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ISweepPlanarLoop (
        double x,
        double y,
        double z,
        double draftAngle,
        struct IFace2 * * stopFacesOut,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall Dummy015 ( ) = 0;
    virtual HRESULT __stdcall Dummy016 ( ) = 0;
    virtual HRESULT __stdcall RevolvePlanarLoop (
        double x,
        double y,
        double z,
        double axisx,
        double axisy,
        double axisz,
        double revAngle,
        VARIANT * facesAndBody ) = 0;
    virtual HRESULT __stdcall IRevolvePlanarLoop (
        double x,
        double y,
        double z,
        double axisx,
        double axisy,
        double axisz,
        double revAngle,
        struct IFace2 * * stopFacesOut,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall IsSingular (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetVertexCount (
        long * numVertices ) = 0;
    virtual HRESULT __stdcall GetVertices (
        VARIANT * vertices ) = 0;
    virtual HRESULT __stdcall IGetVertices (
        long numVertices,
        struct IVertex * * vertices ) = 0;
};

struct __declspec(uuid("83a33d63-27c5-11ce-bfd4-00400513bb57"))
IVertex : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall EnumEdges (
        struct IEnumEdges * * retval ) = 0;
    virtual HRESULT __stdcall GetClosestPointOn (
        double x,
        double y,
        double z,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetClosestPointOn (
        double x,
        double y,
        double z,
        double * retval ) = 0;
    virtual HRESULT __stdcall EnumEdgesOriented (
        struct IEnumEdges * * retval ) = 0;
};

struct __declspec(uuid("83a33d38-27c5-11ce-bfd4-00400513bb57"))
IFeature : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall Parameter (
        BSTR Name,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IParameter (
        BSTR Name,
        struct IDimension * * retval ) = 0;
    virtual HRESULT __stdcall GetNextFeature (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextFeature (
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall GetTypeName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetSpecificFeature (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSpecificFeature (
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall GetUIState (
        long stateType,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetUIState (
        long stateType,
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall GetMaterialUserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialUserName (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetMaterialIdName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialIdName (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetMaterialPropertyValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialPropertyValues (
        VARIANT MaterialPropertyValues,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddPropertyExtension (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPropertyExtension (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
    virtual HRESULT __stdcall GetFirstSubFeature (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstSubFeature (
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall GetNextSubFeature (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextSubFeature (
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall IGetMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall ISetMaterialPropertyValues (
        double * MaterialPropertyValues,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsSuppressed (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetUpdateStamp (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetBody (
        IDispatch * bodyIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetBody (
        struct IBody * bodyIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBody (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetBody (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall EnumDisplayDimensions (
        struct IEnumDisplayDimensions * * retval ) = 0;
    virtual HRESULT __stdcall GetDefinition (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDefinition (
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall ModifyDefinition (
        IDispatch * data,
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IModifyDefinition (
        IUnknown * data,
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetFaceCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFaces (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetFaces (
        long * faceCount,
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstDisplayDimension (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall GetNextDisplayDimension (
        IDispatch * dispIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall GetErrorCode (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetChildCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetChildren (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetChildren (
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall IGetParentCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetParents (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetParents (
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall SetBody2 (
        IDispatch * bodyIn,
        VARIANT_BOOL applyUserIds,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetBody2 (
        struct IBody * bodyIn,
        VARIANT_BOOL applyUserIds,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetImportedFileName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetImportedFileName (
        BSTR ImpName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetSuppression (
        long suppressState,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall RemoveMaterialProperty (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Select (
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectByMark (
        VARIANT_BOOL appendFlag,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBox (
        VARIANT * bBox,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IGetBox (
        double * bBox,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IModifyDefinition2 (
        IUnknown * data,
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IGetFaces2 (
        long * faceCount,
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall IGetBody2 (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall ISetBody3 (
        struct IBody2 * bodyIn,
        VARIANT_BOOL applyUserIds,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ListExternalFileReferences (
        VARIANT * modelPathName,
        VARIANT * componentPathName,
        VARIANT * feature,
        VARIANT * dataType,
        VARIANT * status,
        VARIANT * refEntity,
        VARIANT * featCom ) = 0;
    virtual HRESULT __stdcall ListExternalFileReferencesCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IListExternalFileReferences (
        long numRefs,
        BSTR * modelPathName,
        BSTR * compPathName,
        BSTR * feature,
        BSTR * dataType,
        long * status,
        BSTR * refEntity,
        BSTR * featComp ) = 0;
    virtual HRESULT __stdcall Select2 (
        VARIANT_BOOL Append,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsRolledBack (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsBase (
        VARIANT_BOOL * bBase ) = 0;
    virtual HRESULT __stdcall get_Description (
        BSTR * Description ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR Description ) = 0;
    virtual HRESULT __stdcall MakeSubFeature (
        struct IFeature * subFeature,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_CreatedBy (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall get_DateCreated (
        BSTR * date ) = 0;
    virtual HRESULT __stdcall get_DateModified (
        BSTR * date ) = 0;
};

struct __declspec(uuid("83a33d3a-27c5-11ce-bfd4-00400513bb57"))
IDimension : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Value (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Value (
        double retval ) = 0;
    virtual HRESULT __stdcall get_SystemValue (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_SystemValue (
        double retval ) = 0;
    virtual HRESULT __stdcall GetUserValueIn (
        IDispatch * doc,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetUserValueIn (
        struct IModelDoc * doc,
        double * retval ) = 0;
    virtual HRESULT __stdcall SetUserValueIn (
        IDispatch * doc,
        double newValue ) = 0;
    virtual HRESULT __stdcall ISetUserValueIn (
        struct IModelDoc * doc,
        double newValue ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall GetToleranceType (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetToleranceType (
        long newType,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetToleranceValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetToleranceValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall SetToleranceValues (
        double tolMin,
        double tolMax,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetToleranceFontInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetToleranceFontInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall SetToleranceFontInfo (
        long useFontScale,
        double tolScale,
        double tolHeight,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetToleranceFitValues (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetToleranceFitValues (
        BSTR newLValue,
        BSTR newUValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_ReadOnly (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_ReadOnly (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_FullName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_DrivenState (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_DrivenState (
        long retval ) = 0;
    virtual HRESULT __stdcall IsReference (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsAppliedToAllConfigurations (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetSystemValue2 (
        double newValue,
        long whichConfigurations,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetValue2 (
        double newValue,
        long whichConfigurations,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetUserValueIn2 (
        IDispatch * doc,
        double newValue,
        long whichConfigurations,
        long * retval ) = 0;
    virtual HRESULT __stdcall ISetUserValueIn2 (
        struct IModelDoc * doc,
        double newValue,
        long whichConfigurations,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArcEndCondition (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetArcEndCondition (
        long index,
        long condition,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetValue2 (
        BSTR configName,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSystemValue2 (
        BSTR configName,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetUserValueIn2 (
        struct IModelDoc2 * doc,
        double * retval ) = 0;
    virtual HRESULT __stdcall ISetUserValueIn3 (
        struct IModelDoc2 * doc,
        double newValue,
        long whichConfigurations,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetType (
        long * retval ) = 0;
};

struct __declspec(uuid("b90793fb-ef3d-4b80-a5c4-99959cdb6ceb"))
IModelDoc2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_SelectionManager (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_ISelectionManager (
        struct ISelectionMgr * * retval ) = 0;
    virtual HRESULT __stdcall put_SelectionManager (
        IDispatch * retval ) = 0;
    virtual HRESULT __stdcall get_ActiveView (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_IActiveView (
        struct IModelView * * retval ) = 0;
    virtual HRESULT __stdcall put_ActiveView (
        IDispatch * retval ) = 0;
    virtual HRESULT __stdcall get_LengthUnit (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_LengthUnit (
        long retval ) = 0;
    virtual HRESULT __stdcall get_LightSourceUserName (
        long id,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_LightSourceUserName (
        long id,
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_LightSourcePropertyValues (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_LightSourcePropertyValues (
        long id,
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_SceneName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_SceneName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_SceneUserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_SceneUserName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall FeatureFillet (
        double r1,
        VARIANT_BOOL propagate,
        VARIANT_BOOL ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType ) = 0;
    virtual HRESULT __stdcall GridOptions (
        VARIANT_BOOL dispGrid,
        double gridSpacing,
        VARIANT_BOOL snap,
        VARIANT_BOOL dotStyle,
        short nMajor,
        short nMinor,
        VARIANT_BOOL align2edge,
        VARIANT_BOOL angleSnap,
        double angleUnit,
        VARIANT_BOOL minorAuto ) = 0;
    virtual HRESULT __stdcall SetUnits (
        short uType,
        short fractBase,
        short fractDenom,
        short sigDigits,
        VARIANT_BOOL roundToFraction ) = 0;
    virtual HRESULT __stdcall LBDownAt (
        long flags,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall LBUpAt (
        long flags,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall DragTo (
        long flags,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall SelectAt (
        long flags,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall CreateLineVB (
        double x1,
        double y1,
        double z1,
        double x2,
        double y2,
        double z2 ) = 0;
    virtual HRESULT __stdcall CreateLine (
        VARIANT P1,
        VARIANT P2,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateCenterLineVB (
        double x1,
        double y1,
        double z1,
        double x2,
        double y2,
        double z2 ) = 0;
    virtual HRESULT __stdcall CreateCenterLine (
        VARIANT P1,
        VARIANT P2,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateArcVB (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        double p3x,
        double p3y,
        double p3z,
        short dir ) = 0;
    virtual HRESULT __stdcall CreateArc (
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        short dir,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateCircleVB (
        double p1x,
        double p1y,
        double p1z,
        double radius ) = 0;
    virtual HRESULT __stdcall CreateCircleByRadius (
        VARIANT P1,
        double radius,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLines (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall SketchTrim (
        long op,
        long selEnd,
        double x,
        double y ) = 0;
    virtual HRESULT __stdcall SketchOffsetEdges (
        double val ) = 0;
    virtual HRESULT __stdcall SketchRectangle (
        double val1,
        double val2,
        double z1,
        double val3,
        double val4,
        double z2,
        VARIANT_BOOL val5 ) = 0;
    virtual HRESULT __stdcall SketchPoint (
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall FeatureCut (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2 ) = 0;
    virtual HRESULT __stdcall FeatureBoss (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2 ) = 0;
    virtual HRESULT __stdcall SimpleHole (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2 ) = 0;
    virtual HRESULT __stdcall FeatureLinearPattern (
        long num1,
        double spacing1,
        long num2,
        double spacing2,
        VARIANT_BOOL flipDir1,
        VARIANT_BOOL flipDir2,
        BSTR dName1,
        BSTR dName2 ) = 0;
    virtual HRESULT __stdcall NameView (
        BSTR vName ) = 0;
    virtual HRESULT __stdcall ShowNamedView (
        BSTR vName ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtOffset (
        double val,
        VARIANT_BOOL flipDir ) = 0;
    virtual HRESULT __stdcall Toolbars (
        VARIANT_BOOL m,
        VARIANT_BOOL vw,
        VARIANT_BOOL skMain,
        VARIANT_BOOL sk,
        VARIANT_BOOL feat,
        VARIANT_BOOL constr,
        VARIANT_BOOL macro ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtAngle (
        double val,
        VARIANT_BOOL flipDir ) = 0;
    virtual HRESULT __stdcall SetParamValue (
        double val ) = 0;
    virtual HRESULT __stdcall AddRelation (
        BSTR relStr ) = 0;
    virtual HRESULT __stdcall DeleteAllRelations ( ) = 0;
    virtual HRESULT __stdcall HoleWizard (
        double depth,
        short endType,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long hType,
        double d1,
        double d2,
        double d3,
        double d4,
        double d5,
        double d6,
        double d7,
        double d8,
        double d9,
        double d10,
        double d11,
        double d12 ) = 0;
    virtual HRESULT __stdcall SaveAs (
        BSTR newName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ActivateSelectedFeature ( ) = 0;
    virtual HRESULT __stdcall SelectByName (
        long flags,
        BSTR idStr ) = 0;
    virtual HRESULT __stdcall SketchAddConstraints (
        BSTR idStr ) = 0;
    virtual HRESULT __stdcall SketchConstraintsDel (
        long constrInd,
        BSTR idStr ) = 0;
    virtual HRESULT __stdcall SketchConstraintsDelAll ( ) = 0;
    virtual HRESULT __stdcall Lock ( ) = 0;
    virtual HRESULT __stdcall UnLock ( ) = 0;
    virtual HRESULT __stdcall InsertFeatureShell (
        double thickness,
        VARIANT_BOOL outward ) = 0;
    virtual HRESULT __stdcall SketchFillet (
        double rad ) = 0;
    virtual HRESULT __stdcall FeatureChamfer (
        double width,
        double angle,
        VARIANT_BOOL flip ) = 0;
    virtual HRESULT __stdcall InsertMfDraft (
        double angle,
        VARIANT_BOOL flipDir,
        VARIANT_BOOL isEdgeDraft,
        long propType ) = 0;
    virtual HRESULT __stdcall ParentChildRelationship ( ) = 0;
    virtual HRESULT __stdcall SketchSpline (
        long morePts,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall SelectSketchPoint (
        double x,
        double y,
        long incidence ) = 0;
    virtual HRESULT __stdcall SelectSketchLine (
        double x0,
        double y0,
        long inc0,
        double x1,
        double y1,
        long inc1 ) = 0;
    virtual HRESULT __stdcall SelectSketchArc (
        double x0,
        double y0,
        long inc0,
        double x1,
        double y1,
        long inc1,
        double xC,
        double yC,
        long incC,
        long rotDir ) = 0;
    virtual HRESULT __stdcall SelectSketchSpline (
        long size,
        double x0,
        double y0,
        long inc0,
        double x1,
        double y1,
        long inc1,
        double xC,
        double yC,
        long incC ) = 0;
    virtual HRESULT __stdcall CreateTangentArc (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Create3PointArc (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        double p3x,
        double p3y,
        double p3z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateArcByCenter (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        double p3x,
        double p3y,
        double p3z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateCircle (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddDimension (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddHorizontalDimension (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddVerticalDimension (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectSketchItem (
        long selOpt,
        BSTR Name,
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ClearSelection ( ) = 0;
    virtual HRESULT __stdcall Select (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall AndSelect (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall CreatePoint (
        double pointX,
        double pointY,
        double pointZ,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateLineDB (
        double sx,
        double sy,
        double sz,
        double ex,
        double ey,
        double ez,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateArcDB (
        double x1,
        double y1,
        double z1,
        double x2,
        double y2,
        double z2,
        double x3,
        double y3,
        double z3,
        short dir,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateCircleDB (
        double cx,
        double cy,
        double cz,
        double radius,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreatePointDB (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTitle (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetPathName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetType (
        long * retval ) = 0;
    virtual HRESULT __stdcall InsertObject ( ) = 0;
    virtual HRESULT __stdcall EditClearAll ( ) = 0;
    virtual HRESULT __stdcall EditCopy ( ) = 0;
    virtual HRESULT __stdcall EditCut ( ) = 0;
    virtual HRESULT __stdcall ObjectDisplayContent ( ) = 0;
    virtual HRESULT __stdcall ObjectDisplayAsIcon ( ) = 0;
    virtual HRESULT __stdcall ObjectResetsize ( ) = 0;
    virtual HRESULT __stdcall WindowRedraw ( ) = 0;
    virtual HRESULT __stdcall Dummy3 ( ) = 0;
    virtual HRESULT __stdcall SetPickMode ( ) = 0;
    virtual HRESULT __stdcall ViewRotateminusx ( ) = 0;
    virtual HRESULT __stdcall ViewRotateminusy ( ) = 0;
    virtual HRESULT __stdcall ViewRotateminusz ( ) = 0;
    virtual HRESULT __stdcall ViewRotateplusx ( ) = 0;
    virtual HRESULT __stdcall ViewRotateplusy ( ) = 0;
    virtual HRESULT __stdcall ViewRotateplusz ( ) = 0;
    virtual HRESULT __stdcall ViewTranslateminusx ( ) = 0;
    virtual HRESULT __stdcall ViewTranslateminusy ( ) = 0;
    virtual HRESULT __stdcall ViewTranslateplusx ( ) = 0;
    virtual HRESULT __stdcall ViewTranslateplusy ( ) = 0;
    virtual HRESULT __stdcall ViewRotXMinusNinety ( ) = 0;
    virtual HRESULT __stdcall ViewRotYMinusNinety ( ) = 0;
    virtual HRESULT __stdcall ViewRotYPlusNinety ( ) = 0;
    virtual HRESULT __stdcall ViewZoomin ( ) = 0;
    virtual HRESULT __stdcall ViewZoomout ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayHiddenremoved ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayWireframe ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayShaded ( ) = 0;
    virtual HRESULT __stdcall ViewRwShading ( ) = 0;
    virtual HRESULT __stdcall ViewOglShading ( ) = 0;
    virtual HRESULT __stdcall ViewZoomtofit ( ) = 0;
    virtual HRESULT __stdcall ViewRotate ( ) = 0;
    virtual HRESULT __stdcall ViewTranslate ( ) = 0;
    virtual HRESULT __stdcall ViewZoomto ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayHiddengreyed ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayFaceted ( ) = 0;
    virtual HRESULT __stdcall ViewConstraint ( ) = 0;
    virtual HRESULT __stdcall UserFavors ( ) = 0;
    virtual HRESULT __stdcall FeatureCirPattern (
        long num,
        double spacing,
        VARIANT_BOOL flipDir,
        BSTR dName ) = 0;
    virtual HRESULT __stdcall EditSketch ( ) = 0;
    virtual HRESULT __stdcall FeatEdit ( ) = 0;
    virtual HRESULT __stdcall FeatEditDef ( ) = 0;
    virtual HRESULT __stdcall InsertPoint ( ) = 0;
    virtual HRESULT __stdcall InsertFamilyTableNew ( ) = 0;
    virtual HRESULT __stdcall Dummy1 ( ) = 0;
    virtual HRESULT __stdcall InsertFamilyTableEdit ( ) = 0;
    virtual HRESULT __stdcall Dummy2 ( ) = 0;
    virtual HRESULT __stdcall ToolsMacro ( ) = 0;
    virtual HRESULT __stdcall ToolsGrid ( ) = 0;
    virtual HRESULT __stdcall SketchCenterline ( ) = 0;
    virtual HRESULT __stdcall SketchAlign ( ) = 0;
    virtual HRESULT __stdcall SketchArc ( ) = 0;
    virtual HRESULT __stdcall SketchTangentArc ( ) = 0;
    virtual HRESULT __stdcall SketchCircle ( ) = 0;
    virtual HRESULT __stdcall SketchUndo ( ) = 0;
    virtual HRESULT __stdcall UserPreferences ( ) = 0;
    virtual HRESULT __stdcall Lights ( ) = 0;
    virtual HRESULT __stdcall SketchConstrainCoincident ( ) = 0;
    virtual HRESULT __stdcall SketchConstrainConcentric ( ) = 0;
    virtual HRESULT __stdcall SketchConstrainPerp ( ) = 0;
    virtual HRESULT __stdcall SketchConstrainTangent ( ) = 0;
    virtual HRESULT __stdcall SketchConstrainParallel ( ) = 0;
    virtual HRESULT __stdcall SketchUseEdge ( ) = 0;
    virtual HRESULT __stdcall SketchUseEdgeCtrline ( ) = 0;
    virtual HRESULT __stdcall SketchMirror ( ) = 0;
    virtual HRESULT __stdcall Save ( ) = 0;
    virtual HRESULT __stdcall Close ( ) = 0;
    virtual HRESULT __stdcall ViewDispRefaxes ( ) = 0;
    virtual HRESULT __stdcall ViewDispRefplanes ( ) = 0;
    virtual HRESULT __stdcall InsertSketch ( ) = 0;
    virtual HRESULT __stdcall InsertProtrusionSwept (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        VARIANT_BOOL keepNormalConstant ) = 0;
    virtual HRESULT __stdcall InsertProtrusionBlend (
        VARIANT_BOOL closed ) = 0;
    virtual HRESULT __stdcall ToolsMassProps ( ) = 0;
    virtual HRESULT __stdcall PropertySheet ( ) = 0;
    virtual HRESULT __stdcall BlankRefGeom ( ) = 0;
    virtual HRESULT __stdcall UnBlankRefGeom ( ) = 0;
    virtual HRESULT __stdcall EditDelete ( ) = 0;
    virtual HRESULT __stdcall InsertProjectedSketch ( ) = 0;
    virtual HRESULT __stdcall CreatePlaneFixed (
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT_BOOL useGlobal,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Dummy5 ( ) = 0;
    virtual HRESULT __stdcall Dummy6 ( ) = 0;
    virtual HRESULT __stdcall DebugCheckBody ( ) = 0;
    virtual HRESULT __stdcall Dummy8 ( ) = 0;
    virtual HRESULT __stdcall DimPreferences ( ) = 0;
    virtual HRESULT __stdcall UnblankSketch ( ) = 0;
    virtual HRESULT __stdcall EditSketchOrSingleSketchFeature ( ) = 0;
    virtual HRESULT __stdcall DebugCheckIgesGeom ( ) = 0;
    virtual HRESULT __stdcall BlankSketch ( ) = 0;
    virtual HRESULT __stdcall GetDefaultTextHeight (
        double * retval ) = 0;
    virtual HRESULT __stdcall IsActive (
        BSTR compStr,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateEllipse (
        VARIANT center,
        VARIANT major,
        VARIANT minor,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateEllipseVB (
        double centerX,
        double centerY,
        double centerZ,
        double majorX,
        double majorY,
        double majorZ,
        double minorX,
        double minorY,
        double minorZ,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateEllipticalArcByCenter (
        VARIANT center,
        VARIANT major,
        VARIANT minor,
        VARIANT start,
        VARIANT end,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateEllipticalArcByCenterVB (
        double centerX,
        double centerY,
        double centerZ,
        double majorX,
        double majorY,
        double majorZ,
        double minorX,
        double minorY,
        double minorZ,
        double startX,
        double startY,
        double startZ,
        double endX,
        double endY,
        double endZ,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetActiveSketch (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetActiveSketch (
        struct ISketch * * retval ) = 0;
    virtual HRESULT __stdcall GetTessellationQuality (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetTessellationQuality (
        long qualityNum ) = 0;
    virtual HRESULT __stdcall Parameter (
        BSTR stringIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IParameter (
        BSTR stringIn,
        struct IDimension * * retval ) = 0;
    virtual HRESULT __stdcall SelectByID (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AndSelectByID (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Insert3DSketch ( ) = 0;
    virtual HRESULT __stdcall GetLightSourceName (
        long id,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall AddLightSource (
        BSTR idName,
        int lTyp,
        BSTR userName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddLightSourceExtProperty (
        long id,
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall ResetLightSourceExtProperty (
        long id ) = 0;
    virtual HRESULT __stdcall DeleteLightSource (
        long id ) = 0;
    virtual HRESULT __stdcall GetLightSourceExtProperty (
        long id,
        long PropertyId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall AddLightToScene (
        BSTR lpszNewValue,
        long * retval ) = 0;
    virtual HRESULT __stdcall AddSceneExtProperty (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall ResetSceneExtProperty ( ) = 0;
    virtual HRESULT __stdcall GetSceneExtProperty (
        long PropertyId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall FileSummaryInfo ( ) = 0;
    virtual HRESULT __stdcall GetGridSettings (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ToolsSketchTranslate ( ) = 0;
    virtual HRESULT __stdcall ToolsDistance ( ) = 0;
    virtual HRESULT __stdcall SkToolsAutoConstr ( ) = 0;
    virtual HRESULT __stdcall ToolsSketchScale ( ) = 0;
    virtual HRESULT __stdcall Paste ( ) = 0;
    virtual HRESULT __stdcall ToolsConfiguration ( ) = 0;
    virtual HRESULT __stdcall EntityProperties ( ) = 0;
    virtual HRESULT __stdcall GetArcCentersDisplayed (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetArcCentersDisplayed (
        VARIANT_BOOL setting ) = 0;
    virtual HRESULT __stdcall AutoSolveToggle ( ) = 0;
    virtual HRESULT __stdcall Dummy7 ( ) = 0;
    virtual HRESULT __stdcall IGetLines (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall ICreateEllipse (
        double * center,
        double * major,
        double * minor ) = 0;
    virtual HRESULT __stdcall ICreateEllipticalArcByCenter (
        double * center,
        double * major,
        double * minor,
        double * start,
        double * end ) = 0;
    virtual HRESULT __stdcall get_ILightSourcePropertyValues (
        long id,
        double * retval ) = 0;
    virtual HRESULT __stdcall put_ILightSourcePropertyValues (
        long id,
        double * retval ) = 0;
    virtual HRESULT __stdcall InsertCutSwept (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        VARIANT_BOOL keepNormalConstant ) = 0;
    virtual HRESULT __stdcall InsertCutBlend (
        VARIANT_BOOL closed ) = 0;
    virtual HRESULT __stdcall InsertHelix (
        VARIANT_BOOL reversed,
        VARIANT_BOOL clockwised,
        VARIANT_BOOL tapered,
        VARIANT_BOOL outward,
        long helixdef,
        double height,
        double pitch,
        double revolution,
        double taperangle,
        double startangle ) = 0;
    virtual HRESULT __stdcall ICreateLine (
        double * P1,
        double * P2 ) = 0;
    virtual HRESULT __stdcall ICreateCenterLine (
        double * P1,
        double * P2 ) = 0;
    virtual HRESULT __stdcall ICreateArc (
        double * P1,
        double * P2,
        double * P3,
        short dir ) = 0;
    virtual HRESULT __stdcall ICreateCircleByRadius (
        double * P1,
        double radius ) = 0;
    virtual HRESULT __stdcall GraphicsRedraw ( ) = 0;
    virtual HRESULT __stdcall GetVisibilityOfConstructPlanes (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayWhenAdded (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetDisplayWhenAdded (
        VARIANT_BOOL setting ) = 0;
    virtual HRESULT __stdcall GetAddToDB (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetAddToDB (
        VARIANT_BOOL setting ) = 0;
    virtual HRESULT __stdcall DeSelectByID (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall PrintDirect ( ) = 0;
    virtual HRESULT __stdcall PrintPreview ( ) = 0;
    virtual HRESULT __stdcall Quit ( ) = 0;
    virtual HRESULT __stdcall CreatePlaneThru3Points ( ) = 0;
    virtual HRESULT __stdcall ViewRotXPlusNinety ( ) = 0;
    virtual HRESULT __stdcall GetUnits (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall SetAngularUnits (
        short uType,
        short fractBase,
        short fractDenom,
        short sigDigits ) = 0;
    virtual HRESULT __stdcall GetAngularUnits (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetUnits (
        short * retval ) = 0;
    virtual HRESULT __stdcall ISetAngularUnits (
        short uType,
        short fractBase,
        short fractDenom,
        short sigDigits ) = 0;
    virtual HRESULT __stdcall IGetAngularUnits (
        short * retval ) = 0;
    virtual HRESULT __stdcall ShowConfiguration (
        BSTR configurationName ) = 0;
    virtual HRESULT __stdcall ResetConfiguration ( ) = 0;
    virtual HRESULT __stdcall AddConfiguration (
        BSTR Name,
        BSTR comment,
        BSTR alternateName,
        VARIANT_BOOL suppressByDefault,
        VARIANT_BOOL hideByDefault,
        VARIANT_BOOL minFeatureManager,
        VARIANT_BOOL inheritProperties,
        unsigned long flags ) = 0;
    virtual HRESULT __stdcall DeleteConfiguration (
        BSTR configurationName ) = 0;
    virtual HRESULT __stdcall EditConfiguration (
        BSTR Name,
        BSTR newName,
        BSTR comment,
        BSTR alternateName,
        VARIANT_BOOL suppressByDefault,
        VARIANT_BOOL hideByDefault,
        VARIANT_BOOL minFeatureManager,
        VARIANT_BOOL inheritProperties,
        unsigned long flags ) = 0;
    virtual HRESULT __stdcall CreatePlanePerCurveAndPassPoint (
        VARIANT_BOOL origAtCurve ) = 0;
    virtual HRESULT __stdcall CreateFeatureMgrView (
        long * bitmap,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall AddFeatureMgrView (
        long * bitmap,
        long * appView,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetStandardViewRotation (
        long viewId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetStandardViewRotation (
        long viewId,
        double * retval ) = 0;
    virtual HRESULT __stdcall FeatureExtruRefSurface (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2 ) = 0;
    virtual HRESULT __stdcall IGet3rdPartyStorage (
        BSTR stringIn,
        VARIANT_BOOL isStoring,
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall DeleteFeatureMgrView (
        long * appView ) = 0;
    virtual HRESULT __stdcall GetMassProperties (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMassProperties (
        double * mPropsData,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLightSourceCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLightSourceIdFromName (
        BSTR lightName,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetNextSelectionGroupId (
        long id ) = 0;
    virtual HRESULT __stdcall ISetNextSelectionGroupId (
        long id ) = 0;
    virtual HRESULT __stdcall InsertMidSurfaceExt (
        double placement,
        VARIANT_BOOL knitFlag,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertMidSurfaceExt (
        double placement,
        VARIANT_BOOL knitFlag,
        struct IMidSurface2 * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneFixed (
        double * P1,
        double * P2,
        double * P3,
        VARIANT_BOOL useGlobal ) = 0;
    virtual HRESULT __stdcall SelectByMark (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AndSelectByMark (
        BSTR selID,
        BSTR selParams,
        double x,
        double y,
        double z,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDependencies (
        long traverseflag,
        long searchflag,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDependencies (
        long traverseflag,
        long searchflag,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetNumDependencies (
        long traverseflag,
        long searchflag,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetNumDependencies (
        long traverseflag,
        long searchflag,
        long * retval ) = 0;
    virtual HRESULT __stdcall FirstFeature (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFirstFeature (
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall UnderiveSketch ( ) = 0;
    virtual HRESULT __stdcall DeriveSketch ( ) = 0;
    virtual HRESULT __stdcall IsExploded (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteSelection (
        VARIANT_BOOL confirmFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteNamedView (
        BSTR viewname,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetLightSourceName (
        long id,
        BSTR newName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Insert3DSplineCurve (
        VARIANT_BOOL curveClosed ) = 0;
    virtual HRESULT __stdcall SetLightSourcePropertyValuesVB (
        BSTR idName,
        int lType,
        double diff,
        long rgbColor,
        double dist,
        double dirX,
        double dirY,
        double dirZ,
        double spotDirX,
        double spotDirY,
        double spotDirZ,
        double spotAngle,
        double fallOff0,
        double fallOff1,
        double fallOff2,
        double ambient,
        double specular,
        double spotExponent,
        VARIANT_BOOL bDisable,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICreateFeatureMgrView (
        long * bitmap,
        struct IFeatMgrView * * retval ) = 0;
    virtual HRESULT __stdcall SelectedEdgeProperties (
        BSTR edgeName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectedFaceProperties (
        long rgbColor,
        double ambient,
        double diffuse,
        double specular,
        double shininess,
        double transparency,
        double emission,
        VARIANT_BOOL usePartProps,
        BSTR faceName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectedFeatureProperties (
        long rgbColor,
        double ambient,
        double diffuse,
        double specular,
        double shininess,
        double transparency,
        double emission,
        VARIANT_BOOL usePartProps,
        VARIANT_BOOL suppressed,
        BSTR featureName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertSplitLineSil ( ) = 0;
    virtual HRESULT __stdcall InsertSplitLineProject (
        VARIANT_BOOL isDirectional,
        VARIANT_BOOL flipDir ) = 0;
    virtual HRESULT __stdcall InsertRib (
        VARIANT_BOOL is2Sided,
        VARIANT_BOOL reverseThicknessDir,
        double thickness,
        long referenceEdgeIndex,
        VARIANT_BOOL reverseMaterialDir,
        VARIANT_BOOL isDrafted,
        VARIANT_BOOL draftOutward,
        double draftAngle ) = 0;
    virtual HRESULT __stdcall AddRadialDimension (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddDiameterDimension (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetModelViewNames (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetModelViewNames (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetModelViewCount (
        int * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceDoubleValue (
        long userPreferenceValue,
        double * Value ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceDoubleValue (
        long userPreferenceValue,
        double Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ViewDisplayCurvature ( ) = 0;
    virtual HRESULT __stdcall Scale ( ) = 0;
    virtual HRESULT __stdcall AddIns ( ) = 0;
    virtual HRESULT __stdcall InsertCurveFile (
        BSTR fileName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertCurveFileBegin ( ) = 0;
    virtual HRESULT __stdcall InsertCurveFilePoint (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertCurveFileEnd (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ChangeSketchPlane (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ViewOrientationUndo ( ) = 0;
    virtual HRESULT __stdcall PrintOut (
        long fromPage,
        long toPage,
        long numCopies,
        VARIANT_BOOL collate,
        BSTR printer,
        double Scale,
        VARIANT_BOOL printToFile ) = 0;
    virtual HRESULT __stdcall SketchOffsetEntities (
        double offset,
        VARIANT_BOOL flip ) = 0;
    virtual HRESULT __stdcall InsertLibraryFeature (
        BSTR libFeatPartNameIn ) = 0;
    virtual HRESULT __stdcall SketchModifyTranslate (
        double startX,
        double startY,
        double endX,
        double endY ) = 0;
    virtual HRESULT __stdcall SketchModifyRotate (
        double centerX,
        double centerY,
        double angle ) = 0;
    virtual HRESULT __stdcall SketchModifyFlip (
        int axisFlag ) = 0;
    virtual HRESULT __stdcall SketchModifyScale (
        double scaleFactor,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetActiveConfiguration (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetActiveConfiguration (
        struct IConfiguration * * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceToggle (
        long userPreferenceToggle,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceToggle (
        long userPreferenceValue,
        VARIANT_BOOL onFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertSweepRefSurface (
        VARIANT_BOOL propagate,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational ) = 0;
    virtual HRESULT __stdcall InsertLoftRefSurface (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational ) = 0;
    virtual HRESULT __stdcall InsertProtrusionSwept2 (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational ) = 0;
    virtual HRESULT __stdcall InsertProtrusionBlend2 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational ) = 0;
    virtual HRESULT __stdcall InsertCutSwept2 (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational ) = 0;
    virtual HRESULT __stdcall InsertCutBlend2 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational ) = 0;
    virtual HRESULT __stdcall IsEditingSelf (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ShowNamedView2 (
        BSTR vName,
        long viewId ) = 0;
    virtual HRESULT __stdcall InsertDome (
        double height,
        VARIANT_BOOL reverseDir,
        VARIANT_BOOL doEllipticSurface ) = 0;
    virtual HRESULT __stdcall get_MaterialUserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialUserName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaterialIdName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialIdName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaterialPropertyValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialPropertyValues (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall AddPropertyExtension (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPropertyExtension (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
    virtual HRESULT __stdcall GetUpdateStamp (
        long * retval ) = 0;
    virtual HRESULT __stdcall ViewZoomTo2 (
        double x1,
        double y1,
        double z1,
        double x2,
        double y2,
        double z2 ) = 0;
    virtual HRESULT __stdcall ScreenRotate ( ) = 0;
    virtual HRESULT __stdcall get_PrintSetup (
        long setupType,
        short * setupValue ) = 0;
    virtual HRESULT __stdcall put_PrintSetup (
        long setupType,
        short setupValue ) = 0;
    virtual HRESULT __stdcall GraphicsRedraw2 ( ) = 0;
    virtual HRESULT __stdcall InsertCosmeticThread (
        short type,
        double depth,
        double length,
        BSTR note ) = 0;
    virtual HRESULT __stdcall HideCosmeticThread ( ) = 0;
    virtual HRESULT __stdcall ShowCosmeticThread ( ) = 0;
    virtual HRESULT __stdcall SimpleHole2 (
        double dia,
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2 ) = 0;
    virtual HRESULT __stdcall IRelease3rdPartyStorage (
        BSTR stringIn ) = 0;
    virtual HRESULT __stdcall FeatureRevolve2 (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType,
        long options,
        long * retval ) = 0;
    virtual HRESULT __stdcall FeatureRevolveCut2 (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType,
        long options,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetSaveFlag ( ) = 0;
    virtual HRESULT __stdcall GetExternalReferenceName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SelectByRay (
        VARIANT doubleInfoIn,
        long typeWanted,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISelectByRay (
        double * pointIn,
        double * vectorIn,
        double radiusIn,
        long typeWanted,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetSceneBkgDIB (
        long l_dib ) = 0;
    virtual HRESULT __stdcall get_SceneBkgImageFileName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_SceneBkgImageFileName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall InsertBkgImage (
        BSTR newName ) = 0;
    virtual HRESULT __stdcall DeleteBkgImage ( ) = 0;
    virtual HRESULT __stdcall InsertSplinePoint (
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall InsertLoftRefSurface2 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        double tessToleranceFactor,
        short startMatchingType,
        short endMatchingType ) = 0;
    virtual HRESULT __stdcall InsertProtrusionBlend3 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        double tessToleranceFactor,
        short startMatchingType,
        short endMatchingType ) = 0;
    virtual HRESULT __stdcall InsertCutBlend3 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        double tessToleranceFactor,
        short startMatchingType,
        short endMatchingType ) = 0;
    virtual HRESULT __stdcall AlignDimensions ( ) = 0;
    virtual HRESULT __stdcall BreakDimensionAlignment ( ) = 0;
    virtual HRESULT __stdcall SketchFillet1 (
        double rad ) = 0;
    virtual HRESULT __stdcall FeatureChamferType (
        short chamferType,
        double width,
        double angle,
        VARIANT_BOOL flip,
        double otherDist,
        double vertexChamDist1,
        double vertexChamDist2,
        double vertexChamDist3 ) = 0;
    virtual HRESULT __stdcall FeatureCutThin (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        double thk1,
        double thk2,
        double endThk,
        long revThinDir,
        long capEnds,
        VARIANT_BOOL addBends,
        double bendRad ) = 0;
    virtual HRESULT __stdcall FeatureBossThin (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        double thk1,
        double thk2,
        double endThk,
        long revThinDir,
        long capEnds,
        VARIANT_BOOL addBends,
        double bendRad ) = 0;
    virtual HRESULT __stdcall InsertDatumTargetSymbol (
        BSTR datum1,
        BSTR datum2,
        BSTR datum3,
        short areaStyle,
        VARIANT_BOOL areaOutside,
        double value1,
        double value2,
        BSTR valueStr1,
        BSTR valueStr2,
        VARIANT_BOOL arrowsSmart,
        short arrowStyle,
        short leaderLineStyle,
        VARIANT_BOOL leaderBent,
        VARIANT_BOOL showArea,
        VARIANT_BOOL showSymbol,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditDatumTargetSymbol (
        BSTR datum1,
        BSTR datum2,
        BSTR datum3,
        short areaStyle,
        VARIANT_BOOL areaOutside,
        double value1,
        double value2,
        BSTR valueStr1,
        BSTR valueStr2,
        VARIANT_BOOL arrowsSmart,
        short arrowStyle,
        short leaderLineStyle,
        VARIANT_BOOL leaderBent,
        VARIANT_BOOL showArea,
        VARIANT_BOOL showSymbol,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertBOMBalloon ( ) = 0;
    virtual HRESULT __stdcall FeatureReferenceCurve (
        long numOfCurves,
        VARIANT baseCurves,
        VARIANT_BOOL merge,
        BSTR fromFileName,
        long * errorCode,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFeatureReferenceCurve (
        long numOfCurves,
        struct ICurve * * baseCurves,
        VARIANT_BOOL merge,
        BSTR fromFileName,
        long * errorCode,
        struct IReferenceCurve * * retval ) = 0;
    virtual HRESULT __stdcall FontBold (
        VARIANT_BOOL bold ) = 0;
    virtual HRESULT __stdcall FontItalic (
        VARIANT_BOOL italic ) = 0;
    virtual HRESULT __stdcall FontUnderline (
        VARIANT_BOOL underline ) = 0;
    virtual HRESULT __stdcall FontFace (
        BSTR face ) = 0;
    virtual HRESULT __stdcall FontPoints (
        short points ) = 0;
    virtual HRESULT __stdcall FontUnits (
        double units ) = 0;
    virtual HRESULT __stdcall SketchSplineByEqnParams (
        VARIANT paramsIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AlignParallelDimensions ( ) = 0;
    virtual HRESULT __stdcall SetBlockingState (
        long stateIn ) = 0;
    virtual HRESULT __stdcall ResetBlockingState ( ) = 0;
    virtual HRESULT __stdcall GetSceneBkgDIB (
        long * l_dib ) = 0;
    virtual HRESULT __stdcall InsertHatchedFace ( ) = 0;
    virtual HRESULT __stdcall GetColorTable (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetColorTable (
        struct IColorTable * * retval ) = 0;
    virtual HRESULT __stdcall InsertSweepRefSurface2 (
        VARIANT_BOOL propagate,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        short startMatchingType,
        short endMatchingType ) = 0;
    virtual HRESULT __stdcall InsertProtrusionSwept3 (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        short startMatchingType,
        short endMatchingType ) = 0;
    virtual HRESULT __stdcall InsertCutSwept3 (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        short startMatchingType,
        short endMatchingType ) = 0;
    virtual HRESULT __stdcall IsOpenedViewOnly (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsOpenedReadOnly (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ViewZoomToSelection ( ) = 0;
    virtual HRESULT __stdcall FeatureBossThicken (
        double thickness,
        long direction,
        long faceIndex ) = 0;
    virtual HRESULT __stdcall FeatureCutThicken (
        double thickness,
        long direction,
        long faceIndex ) = 0;
    virtual HRESULT __stdcall InsertAxis (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditUndo (
        unsigned long nSteps ) = 0;
    virtual HRESULT __stdcall SelectMidpoint ( ) = 0;
    virtual HRESULT __stdcall ISketchSplineByEqnParams (
        int * propArray,
        double * knotsArray,
        double * cntrlPntCoordArray,
        long * retval ) = 0;
    virtual HRESULT __stdcall VersionHistory (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IVersionHistory (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetVersionHistoryCount (
        int * retval ) = 0;
    virtual HRESULT __stdcall Rebuild (
        long options ) = 0;
    virtual HRESULT __stdcall InsertFeatureShellAddThickness (
        double thickness ) = 0;
    virtual HRESULT __stdcall InsertOffsetSurface (
        double thickness,
        VARIANT_BOOL reverse ) = 0;
    virtual HRESULT __stdcall SimplifySpline (
        double toleranceIn ) = 0;
    virtual HRESULT __stdcall get_SummaryInfo (
        long FieldId,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_SummaryInfo (
        long FieldId,
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_CustomInfo (
        BSTR FieldName,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_CustomInfo (
        BSTR FieldName,
        BSTR retval ) = 0;
    virtual HRESULT __stdcall GetCustomInfoCount (
        long * count ) = 0;
    virtual HRESULT __stdcall GetCustomInfoType (
        BSTR FieldName,
        BSTR * type ) = 0;
    virtual HRESULT __stdcall GetCustomInfoNames (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCustomInfoNames (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall AddCustomInfo (
        BSTR FieldName,
        BSTR FieldType,
        BSTR FieldValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteCustomInfo (
        BSTR FieldName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall PrintOut2 (
        long fromPage,
        long toPage,
        long numCopies,
        VARIANT_BOOL collate,
        BSTR printer,
        double Scale,
        VARIANT_BOOL printToFile,
        BSTR ptfName ) = 0;
    virtual HRESULT __stdcall SetReadOnlyState (
        VARIANT_BOOL setReadOnly,
        VARIANT_BOOL * success ) = 0;
    virtual HRESULT __stdcall InsertFamilyTableOpen (
        BSTR fileName,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall MultiSelectByRay (
        VARIANT doubleInfoIn,
        long typeWanted,
        VARIANT_BOOL Append,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IMultiSelectByRay (
        double * pointIn,
        double * vectorIn,
        double radiusIn,
        long typeWanted,
        VARIANT_BOOL Append,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertNewNote3 (
        BSTR upperText,
        VARIANT_BOOL noLeader,
        VARIANT_BOOL bentLeader,
        short arrowStyle,
        short leaderSide,
        double angle,
        short balloonStyle,
        short balloonFit,
        VARIANT_BOOL smartArrow ) = 0;
    virtual HRESULT __stdcall InsertWeldSymbol2 (
        BSTR dim1,
        BSTR symbol,
        BSTR dim2,
        VARIANT_BOOL symmetric,
        VARIANT_BOOL fieldWeld,
        VARIANT_BOOL showOtherSide,
        VARIANT_BOOL dashOnTop,
        VARIANT_BOOL peripheral,
        VARIANT_BOOL hasProcess,
        BSTR processValue ) = 0;
    virtual HRESULT __stdcall InsertSurfaceFinishSymbol2 (
        long symType,
        long leaderType,
        double locX,
        double locY,
        double locZ,
        long laySymbol,
        long arrowType,
        BSTR machAllowance,
        BSTR otherVals,
        BSTR prodMethod,
        BSTR sampleLen,
        BSTR maxRoughness,
        BSTR minRoughness,
        BSTR roughnessSpacing,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SaveSilent (
        long * status ) = 0;
    virtual HRESULT __stdcall SaveAsSilent (
        BSTR newName,
        VARIANT_BOOL saveAsCopy,
        long * status ) = 0;
    virtual HRESULT __stdcall AddCustomInfo2 (
        BSTR FieldName,
        long FieldType,
        BSTR FieldValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetCustomInfoType2 (
        BSTR FieldName,
        long * type ) = 0;
    virtual HRESULT __stdcall InsertRefPoint (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall FeatureFillet2 (
        double r1,
        VARIANT_BOOL propagate,
        VARIANT_BOOL ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType,
        int nRadii,
        VARIANT radii,
        long * res ) = 0;
    virtual HRESULT __stdcall IFeatureFillet2 (
        double r1,
        VARIANT_BOOL propagate,
        VARIANT_BOOL ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType,
        int nRadii,
        double * radii,
        long * res ) = 0;
    virtual HRESULT __stdcall GetFirstAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall InsertCoordinateSystem (
        VARIANT_BOOL xFlippedIn,
        VARIANT_BOOL yFlippedIn,
        VARIANT_BOOL zFlippedIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetToolbarVisibility (
        long toolbar,
        VARIANT_BOOL * visibility ) = 0;
    virtual HRESULT __stdcall SetToolbarVisibility (
        long toolbar,
        VARIANT_BOOL visibility ) = 0;
    virtual HRESULT __stdcall ViewDispCoordinateSystems ( ) = 0;
    virtual HRESULT __stdcall ViewDispTempRefaxes ( ) = 0;
    virtual HRESULT __stdcall ViewDispRefPoints ( ) = 0;
    virtual HRESULT __stdcall ViewDispOrigins ( ) = 0;
    virtual HRESULT __stdcall GetCoordinateSystemXformByName (
        BSTR nameIn,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCoordinateSystemXformByName (
        BSTR nameIn,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetCurrentCoordinateSystemName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall EnumModelViews (
        struct IEnumModelViews * * retval ) = 0;
    virtual HRESULT __stdcall InsertCompositeCurve (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SketchParabola (
        double val1,
        double val2,
        double z1,
        double val3,
        double val4,
        double z2,
        double val5,
        double val6,
        double z3,
        double val7,
        double val8,
        double z4 ) = 0;
    virtual HRESULT __stdcall InsertRadiateSurface (
        double distance,
        VARIANT_BOOL flipDir,
        VARIANT_BOOL tangentPropagate ) = 0;
    virtual HRESULT __stdcall InsertSewRefSurface ( ) = 0;
    virtual HRESULT __stdcall InsertShape (
        long pressureOn,
        long tangentsOn,
        double pressureGain,
        double tangentGain,
        double curveSpringGain,
        double alpha,
        double beta,
        double gamma,
        double delta,
        long degree,
        long split,
        long tuning,
        long * retval ) = 0;
    virtual HRESULT __stdcall InsertMfDraft2 (
        double angle,
        VARIANT_BOOL flipDir,
        VARIANT_BOOL isEdgeDraft,
        long propType,
        VARIANT_BOOL stepDraft ) = 0;
    virtual HRESULT __stdcall GetConfigurationCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetConfigurationNames (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetConfigurationNames (
        long * count,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall FeatureCut2 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        long keepPieceIndex ) = 0;
    virtual HRESULT __stdcall InsertCutSurface (
        VARIANT_BOOL flip,
        long keepPieceIndex ) = 0;
    virtual HRESULT __stdcall GetDetailingDefaults (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDetailingDefaults (
        struct IDetailingDefaults * * retval ) = 0;
    virtual HRESULT __stdcall ListExternalFileReferencesCount (
        VARIANT_BOOL useSearchRules,
        long * retval ) = 0;
    virtual HRESULT __stdcall ListExternalFileReferences (
        VARIANT_BOOL useSearchRules,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IListExternalFileReferences (
        VARIANT_BOOL useSearchRules,
        long numRefs,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SketchSplineByEqnParams2 (
        VARIANT paramsIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetFirstModelView (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstModelView (
        struct IModelView * * retval ) = 0;
    virtual HRESULT __stdcall InsertPlanarRefSurface (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetNext (
        IDispatch * * nextDoc ) = 0;
    virtual HRESULT __stdcall GetSaveFlag (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddCustomInfo3 (
        BSTR configuration,
        BSTR FieldName,
        long FieldType,
        BSTR FieldValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_CustomInfo2 (
        BSTR configuration,
        BSTR FieldName,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_CustomInfo2 (
        BSTR configuration,
        BSTR FieldName,
        BSTR retval ) = 0;
    virtual HRESULT __stdcall DeleteCustomInfo2 (
        BSTR configuration,
        BSTR FieldName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetCustomInfoCount2 (
        BSTR configuration,
        long * count ) = 0;
    virtual HRESULT __stdcall GetCustomInfoNames2 (
        BSTR configuration,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCustomInfoNames2 (
        BSTR configuration,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetCustomInfoType3 (
        BSTR configuration,
        BSTR FieldName,
        long * type ) = 0;
    virtual HRESULT __stdcall GetConsiderLeadersAsLines (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetConsiderLeadersAsLines (
        VARIANT_BOOL leadersAsLines,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertRevolvedRefSurface (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        int revType ) = 0;
    virtual HRESULT __stdcall GetBendState (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetBendState (
        long bendState,
        long * retval ) = 0;
    virtual HRESULT __stdcall get_ShowFeatureErrorDialog (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_ShowFeatureErrorDialog (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall ClearUndoList ( ) = 0;
    virtual HRESULT __stdcall GetFeatureManagerWidth (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetFeatureManagerWidth (
        long width,
        long * retval ) = 0;
    virtual HRESULT __stdcall InsertProjectedSketch2 (
        long reverse,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertProjectedSketch2 (
        long reverse,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall GetFeatureCount (
        long * num ) = 0;
    virtual HRESULT __stdcall FeatureByPositionReverse (
        long num,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFeatureByPositionReverse (
        long num,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall RayIntersections (
        VARIANT bodiesIn,
        VARIANT basePointsIn,
        VARIANT vectorsIn,
        long options,
        double hitRadius,
        double offset,
        long * retval ) = 0;
    virtual HRESULT __stdcall IRayIntersections (
        struct IBody2 * * bodiesIn,
        long numBodies,
        double * basePointsIn,
        double * vectorsIn,
        long numRays,
        long options,
        double hitRadius,
        double offset,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetRayIntersectionsPoints (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetRayIntersectionsPoints (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetRayIntersectionsTopology (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetRayIntersectionsTopology (
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall EditSeedFeat ( ) = 0;
    virtual HRESULT __stdcall EditSuppress (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditUnsuppress (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditUnsuppressDependent (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditRollback (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Save2 (
        VARIANT_BOOL silent,
        long * retval ) = 0;
    virtual HRESULT __stdcall SaveAs2 (
        BSTR newName,
        long saveAsVersion,
        VARIANT_BOOL saveAsCopy,
        VARIANT_BOOL silent,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetPopupMenuMode (
        int modeIn ) = 0;
    virtual HRESULT __stdcall GetPopupMenuMode (
        int * retval ) = 0;
    virtual HRESULT __stdcall CloseFamilyTable ( ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtSurface (
        int interIndex,
        VARIANT_BOOL projOpt,
        VARIANT_BOOL reverseDir,
        VARIANT_BOOL normalPlane,
        double angle ) = 0;
    virtual HRESULT __stdcall SketchOffset (
        double offset,
        VARIANT_BOOL contourMode ) = 0;
    virtual HRESULT __stdcall CreateLinearSketchStepAndRepeat (
        long numX,
        long numY,
        double spacingX,
        double spacingY,
        double angleX,
        double angleY,
        BSTR deleteInstances,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetAmbientLightProperties (
        BSTR Name,
        double ambient,
        double diffuse,
        double specular,
        long colour,
        VARIANT_BOOL enabled,
        VARIANT_BOOL fixed,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall GetAmbientLightProperties (
        BSTR Name,
        double * ambient,
        double * diffuse,
        double * specular,
        long * colour,
        VARIANT_BOOL * enabled,
        VARIANT_BOOL * fixed,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall SetPointLightProperties (
        BSTR Name,
        double ambient,
        double diffuse,
        double specular,
        long colour,
        VARIANT_BOOL enabled,
        VARIANT_BOOL fixed,
        double x,
        double y,
        double z,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall GetPointLightProperties (
        BSTR Name,
        double * ambient,
        double * diffuse,
        double * specular,
        long * colour,
        VARIANT_BOOL * enabled,
        VARIANT_BOOL * fixed,
        double * x,
        double * y,
        double * z,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall SetDirectionLightProperties (
        BSTR Name,
        double ambient,
        double diffuse,
        double specular,
        long colour,
        VARIANT_BOOL enabled,
        VARIANT_BOOL fixed,
        double x,
        double y,
        double z,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall GetDirectionLightProperties (
        BSTR Name,
        double * ambient,
        double * diffuse,
        double * specular,
        long * colour,
        VARIANT_BOOL * enabled,
        VARIANT_BOOL * fixed,
        double * x,
        double * y,
        double * z,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall SetSpotlightProperties (
        BSTR Name,
        double ambient,
        double diffuse,
        double specular,
        long colour,
        VARIANT_BOOL enabled,
        VARIANT_BOOL fixed,
        double posx,
        double posy,
        double posz,
        double targetx,
        double targety,
        double targetz,
        double coneAngle,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall GetSpotlightProperties (
        BSTR Name,
        double * ambient,
        double * diffuse,
        double * specular,
        long * colour,
        VARIANT_BOOL * enabled,
        VARIANT_BOOL * fixed,
        double * x,
        double * y,
        double * z,
        double * targetx,
        double * targety,
        double * targetz,
        double * coneAngle,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall SplitOpenSegment (
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall AutoInferToggle ( ) = 0;
    virtual HRESULT __stdcall SketchRectangleAtAnyAngle (
        double val1,
        double val2,
        double z1,
        double val3,
        double val4,
        double z2,
        double val3x,
        double val3y,
        double z3,
        VARIANT_BOOL val5 ) = 0;
    virtual HRESULT __stdcall CreateCircularSketchStepAndRepeat (
        double arcRadius,
        double arcAngle,
        long patternNum,
        double patternSpacing,
        VARIANT_BOOL patternRotate,
        BSTR deleteInstances,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SplitClosedSegment (
        double x0,
        double y0,
        double z0,
        double x1,
        double y1,
        double z1 ) = 0;
    virtual HRESULT __stdcall IsLightLockedToModel (
        long lightId,
        VARIANT_BOOL * IsFixed ) = 0;
    virtual HRESULT __stdcall LockLightToModel (
        long lightId,
        VARIANT_BOOL fix,
        VARIANT_BOOL * success ) = 0;
    virtual HRESULT __stdcall FeatureFillet3 (
        double r1,
        VARIANT_BOOL propagate,
        int ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType,
        int nRadii,
        VARIANT radii,
        VARIANT_BOOL useHelpPoint,
        VARIANT_BOOL useTangentHoldLine,
        long * res ) = 0;
    virtual HRESULT __stdcall IFeatureFillet3 (
        double r1,
        VARIANT_BOOL propagate,
        int ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType,
        int nRadii,
        double * radii,
        VARIANT_BOOL useHelpPoint,
        VARIANT_BOOL useTangentHoldLine,
        long * res ) = 0;
    virtual HRESULT __stdcall InsertConnectionPoint ( ) = 0;
    virtual HRESULT __stdcall InsertRoutePoint ( ) = 0;
    virtual HRESULT __stdcall FeatureBossThicken2 (
        double thickness,
        long direction,
        long faceIndex,
        VARIANT_BOOL fillVolume ) = 0;
    virtual HRESULT __stdcall FeatureCutThicken2 (
        double thickness,
        long direction,
        long faceIndex,
        VARIANT_BOOL fillVolume ) = 0;
    virtual HRESULT __stdcall GetConfigurationByName (
        BSTR Name,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetConfigurationByName (
        BSTR Name,
        struct IConfiguration * * retval ) = 0;
    virtual HRESULT __stdcall CreatePoint2 (
        double pointX,
        double pointY,
        double pointZ,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePoint2 (
        double pointX,
        double pointY,
        double pointZ,
        struct ISketchPoint * * retval ) = 0;
    virtual HRESULT __stdcall CreateLine2 (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateLine2 (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall GetActiveSketch2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetActiveSketch2 (
        struct ISketch * * retval ) = 0;
    virtual HRESULT __stdcall DrawLightIcons ( ) = 0;
    virtual HRESULT __stdcall GetLayerManager (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetLayerManager (
        struct ILayerMgr * * retval ) = 0;
    virtual HRESULT __stdcall CreateCircle2 (
        double xC,
        double yC,
        double zc,
        double xp,
        double yp,
        double zp,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateCircle2 (
        double xC,
        double yC,
        double zc,
        double xp,
        double yp,
        double zp,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall CreateCircleByRadius2 (
        double xC,
        double yC,
        double zc,
        double radius,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateCircleByRadius2 (
        double xC,
        double yC,
        double zc,
        double radius,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall CreateArc2 (
        double xC,
        double yC,
        double zc,
        double xp1,
        double yp1,
        double zp1,
        double xp2,
        double yp2,
        double zp2,
        short direction,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateArc2 (
        double xC,
        double yC,
        double zc,
        double xp1,
        double yp1,
        double zp1,
        double xp2,
        double yp2,
        double zp2,
        short direction,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall CreateEllipse2 (
        double centerX,
        double centerY,
        double centerZ,
        double majorX,
        double majorY,
        double majorZ,
        double minorX,
        double minorY,
        double minorZ,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateEllipse2 (
        double centerX,
        double centerY,
        double centerZ,
        double majorX,
        double majorY,
        double majorZ,
        double minorX,
        double minorY,
        double minorZ,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall CreateEllipticalArc2 (
        double centerX,
        double centerY,
        double centerZ,
        double majorX,
        double majorY,
        double majorZ,
        double minorX,
        double minorY,
        double minorZ,
        double startX,
        double startY,
        double startZ,
        double endX,
        double endY,
        double endZ,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateEllipticalArc2 (
        double centerX,
        double centerY,
        double centerZ,
        double majorX,
        double majorY,
        double majorZ,
        double minorX,
        double minorY,
        double minorZ,
        double startX,
        double startY,
        double startZ,
        double endX,
        double endY,
        double endZ,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall CreateSpline (
        VARIANT pointData,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSpline (
        long PointCount,
        double * pointData,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall ViewZoomtofit2 ( ) = 0;
    virtual HRESULT __stdcall SetInferenceMode (
        VARIANT_BOOL inferenceMode ) = 0;
    virtual HRESULT __stdcall GetInferenceMode (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetTitle2 (
        BSTR newTitle,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SketchFillet2 (
        double rad,
        short constrainedCorners,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsTessellationValid (
        VARIANT_BOOL * isValid ) = 0;
    virtual HRESULT __stdcall EditRoute ( ) = 0;
    virtual HRESULT __stdcall FileReload ( ) = 0;
    virtual HRESULT __stdcall GetDesignTable (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDesignTable (
        struct IDesignTable * * retval ) = 0;
    virtual HRESULT __stdcall GetEntityName (
        IDispatch * entity,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetEntityName (
        struct IEntity * entity,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct IModelDoc2 * * nextDoc ) = 0;
    virtual HRESULT __stdcall ShowConfiguration2 (
        BSTR configurationName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddConfiguration2 (
        BSTR Name,
        BSTR comment,
        BSTR alternateName,
        VARIANT_BOOL suppressByDefault,
        VARIANT_BOOL hideByDefault,
        VARIANT_BOOL minFeatureManager,
        VARIANT_BOOL inheritProperties,
        unsigned long flags,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteConfiguration2 (
        BSTR configurationName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditConfiguration2 (
        BSTR Name,
        BSTR newName,
        BSTR comment,
        BSTR alternateName,
        VARIANT_BOOL suppressByDefault,
        VARIANT_BOOL hideByDefault,
        VARIANT_BOOL minFeatureManager,
        VARIANT_BOOL inheritProperties,
        unsigned long flags,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateSplineByEqnParams (
        VARIANT paramsIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSplineByEqnParams (
        int * propArray,
        double * knotsArray,
        double * cntrlPntCoordArray,
        struct ISketchSegment * * retval ) = 0;
    virtual HRESULT __stdcall CreateFeatureMgrView2 (
        long * bitmap,
        BSTR toolTip,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateFeatureMgrView2 (
        long * bitmap,
        BSTR toolTip,
        struct IFeatMgrView * * retval ) = 0;
    virtual HRESULT __stdcall AddFeatureMgrView2 (
        long * bitmap,
        long * appView,
        BSTR toolTip,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall FeatureCut3 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        long keepPieceIndex ) = 0;
    virtual HRESULT __stdcall GetFirstAnnotation2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstAnnotation2 (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall InsertExtendSurface (
        VARIANT_BOOL extendLinear,
        long endCondition,
        double distance ) = 0;
    virtual HRESULT __stdcall InsertTangencySurface (
        VARIANT_BOOL oneSide,
        VARIANT_BOOL isFlip ) = 0;
    virtual HRESULT __stdcall CreateSplinesByEqnParams (
        VARIANT paramsIn,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ICreateSplinesByEqnParams (
        int * propArray,
        double * knotsArray,
        double * cntrlPntCoordArray,
        struct IEnumSketchSegments * * retval ) = 0;
    virtual HRESULT __stdcall CreateClippedSplines (
        VARIANT paramsIn,
        double x1,
        double y1,
        double x2,
        double y2,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ICreateClippedSplines (
        int * propArray,
        double * knotsArray,
        double * cntrlPntCoordArray,
        double x1,
        double y1,
        double x2,
        double y2,
        struct IEnumSketchSegments * * retval ) = 0;
    virtual HRESULT __stdcall EditSuppress2 (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditUnsuppress2 (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditUnsuppressDependent2 (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditRollback2 (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall HideDimension ( ) = 0;
    virtual HRESULT __stdcall ShowFeatureDimensions ( ) = 0;
    virtual HRESULT __stdcall HideFeatureDimensions ( ) = 0;
    virtual HRESULT __stdcall Sketch3DIntersections ( ) = 0;
    virtual HRESULT __stdcall FeatureFillet4 (
        double r1,
        VARIANT_BOOL propagate,
        VARIANT_BOOL uniformRadius,
        int ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType,
        int nRadii,
        VARIANT radii,
        VARIANT_BOOL useHelpPoint,
        VARIANT_BOOL useTangentHoldLine,
        VARIANT_BOOL cornerType,
        int setbackDistCount,
        VARIANT setBackDistances,
        long * res ) = 0;
    virtual HRESULT __stdcall IFeatureFillet4 (
        double r1,
        VARIANT_BOOL propagate,
        VARIANT_BOOL uniformRadius,
        int ftyp,
        VARIANT_BOOL varRadTyp,
        long overFlowType,
        int nRadii,
        double * radii,
        VARIANT_BOOL useHelpPoint,
        VARIANT_BOOL useTangentHoldLine,
        VARIANT_BOOL cornerType,
        int setbackDistCount,
        double * setBackDistances,
        long * res ) = 0;
    virtual HRESULT __stdcall InsertDeleteFace ( ) = 0;
    virtual HRESULT __stdcall GetDependencies2 (
        VARIANT_BOOL traverseflag,
        VARIANT_BOOL searchflag,
        VARIANT_BOOL addReadOnlyInfo,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDependencies2 (
        VARIANT_BOOL traverseflag,
        VARIANT_BOOL searchflag,
        VARIANT_BOOL addReadOnlyInfo,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetNumDependencies2 (
        VARIANT_BOOL traverseflag,
        VARIANT_BOOL searchflag,
        VARIANT_BOOL addReadOnlyInfo,
        long * retval ) = 0;
    virtual HRESULT __stdcall InsertScale (
        double scaleFactor_x,
        double scaleFactor_y,
        double scaleFactor_z,
        VARIANT_BOOL isUniform,
        int scaleType ) = 0;
    virtual HRESULT __stdcall LockAllExternalReferences ( ) = 0;
    virtual HRESULT __stdcall UnlockAllExternalReferences ( ) = 0;
    virtual HRESULT __stdcall BreakAllExternalReferences ( ) = 0;
    virtual HRESULT __stdcall EditDimensionProperties (
        long tolType,
        double tolMax,
        double tolMin,
        BSTR tolMaxFit,
        BSTR tolMinFit,
        VARIANT_BOOL useDocPrec,
        long precision,
        long arrowsIn,
        VARIANT_BOOL useDocArrows,
        long arrow1,
        long arrow2,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SketchPolygon (
        double xCenter,
        double yCenter,
        double xEdge,
        double yEdge,
        int nSides,
        VARIANT_BOOL bInscribed,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBlockingState (
        long * count ) = 0;
    virtual HRESULT __stdcall CreateFeatureMgrView3 (
        long * bitmap,
        BSTR toolTip,
        long whichPane,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateFeatureMgrView3 (
        long * bitmap,
        BSTR toolTip,
        long whichPane,
        struct IFeatMgrView * * retval ) = 0;
    virtual HRESULT __stdcall AddFeatureMgrView3 (
        long * bitmap,
        long * appView,
        BSTR toolTip,
        long whichPane,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtOffset2 (
        double val,
        VARIANT_BOOL flipDir,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneAtOffset2 (
        double val,
        VARIANT_BOOL flipDir,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtAngle2 (
        double val,
        VARIANT_BOOL flipDir,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneAtAngle2 (
        double val,
        VARIANT_BOOL flipDir,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneThru3Points2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneThru3Points2 (
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlanePerCurveAndPassPoint2 (
        VARIANT_BOOL origAtCurve,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlanePerCurveAndPassPoint2 (
        VARIANT_BOOL origAtCurve,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtSurface2 (
        int interIndex,
        VARIANT_BOOL projOpt,
        VARIANT_BOOL reverseDir,
        VARIANT_BOOL normalPlane,
        double angle,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneAtSurface2 (
        int interIndex,
        VARIANT_BOOL projOpt,
        VARIANT_BOOL reverseDir,
        VARIANT_BOOL normalPlane,
        double angle,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceIntegerValue (
        long userPreferenceValue,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceIntegerValue (
        long userPreferenceValue,
        long Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceTextFormat (
        long userPreferenceValue,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetUserPreferenceTextFormat (
        long userPreferenceValue,
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceTextFormat (
        long userPreferenceValue,
        IDispatch * Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetUserPreferenceTextFormat (
        long userPreferenceValue,
        struct ITextFormat * Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertRib2 (
        VARIANT_BOOL is2Sided,
        VARIANT_BOOL reverseThicknessDir,
        double thickness,
        long referenceEdgeIndex,
        VARIANT_BOOL reverseMaterialDir,
        VARIANT_BOOL isDrafted,
        VARIANT_BOOL draftOutward,
        double draftAngle,
        VARIANT_BOOL isNormToSketch ) = 0;
    virtual HRESULT __stdcall InsertObjectFromFile (
        BSTR filePath,
        VARIANT_BOOL createLink,
        double xx,
        double yy,
        double zz,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InspectCurvature ( ) = 0;
    virtual HRESULT __stdcall RemoveInspectCurvature ( ) = 0;
    virtual HRESULT __stdcall InsertDatumTag2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertDatumTag2 (
        struct IDatumTag * * retval ) = 0;
    virtual HRESULT __stdcall ActivateFeatureMgrView (
        long * appView,
        long * paneType ) = 0;
    virtual HRESULT __stdcall FeatureSketchDrivenPattern (
        VARIANT_BOOL useCentroid ) = 0;
    virtual HRESULT __stdcall HideShowBodies ( ) = 0;
    virtual HRESULT __stdcall HideSolidBody ( ) = 0;
    virtual HRESULT __stdcall ShowSolidBody ( ) = 0;
    virtual HRESULT __stdcall InsertFramePoint (
        double xx,
        double yy,
        double zz ) = 0;
    virtual HRESULT __stdcall LockFramePoint ( ) = 0;
    virtual HRESULT __stdcall UnlockFramePoint ( ) = 0;
    virtual HRESULT __stdcall InsertGtol (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertGtol (
        struct IGtol * * retval ) = 0;
    virtual HRESULT __stdcall DeActivateFeatureMgrView (
        long * appView,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertNote (
        BSTR text,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertNote (
        BSTR text,
        struct INote * * retval ) = 0;
    virtual HRESULT __stdcall SetSaveAsFileName (
        BSTR fileName ) = 0;
    virtual HRESULT __stdcall ClosePrintPreview ( ) = 0;
    virtual HRESULT __stdcall HideComponent2 ( ) = 0;
    virtual HRESULT __stdcall ShowComponent2 ( ) = 0;
    virtual HRESULT __stdcall SaveBMP (
        BSTR filenameIn,
        long widthIn,
        long heightIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertSketch2 (
        VARIANT_BOOL updateEditRebuild ) = 0;
    virtual HRESULT __stdcall Insert3DSketch2 (
        VARIANT_BOOL updateEditRebuild ) = 0;
    virtual HRESULT __stdcall InsertDeleteHole ( ) = 0;
    virtual HRESULT __stdcall PreTrimSurface (
        VARIANT_BOOL bMutualTrimIn ) = 0;
    virtual HRESULT __stdcall PostTrimSurface (
        VARIANT_BOOL bSewSurfaceIn ) = 0;
    virtual HRESULT __stdcall SketchConvertIsoCurves (
        double percentRatio,
        VARIANT_BOOL vORuDir,
        VARIANT_BOOL doConstrain,
        VARIANT_BOOL skipHoles ) = 0;
    virtual HRESULT __stdcall SelectLoop ( ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalBaseFlange (
        double thickness,
        VARIANT_BOOL thickenDir,
        double radius,
        double extrudeDist1,
        double extrudeDist2,
        VARIANT_BOOL flipExtruDir,
        long endCondition1,
        long endCondition2,
        long dirToUse ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalFold ( ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalUnfold ( ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalMiterFlange (
        VARIANT_BOOL useReliefRatio,
        VARIANT_BOOL useDefaultGap,
        VARIANT_BOOL useAutoRelief,
        double globalRadius,
        double ripGap,
        double autoReliefRatio,
        double autoReliefWidth,
        double autoReliefDepth,
        long reliefType,
        long ripLocation,
        VARIANT_BOOL trimSideBends ) = 0;
    virtual HRESULT __stdcall CreateGroup ( ) = 0;
    virtual HRESULT __stdcall RemoveItemsFromGroup ( ) = 0;
    virtual HRESULT __stdcall RemoveGroups ( ) = 0;
    virtual HRESULT __stdcall InsertBOMBalloon2 (
        long Style,
        long size,
        long upperTextStyle,
        BSTR upperText,
        long lowerTextStyle,
        BSTR lowerText,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertBOMBalloon2 (
        long Style,
        long size,
        long upperTextStyle,
        BSTR upperText,
        long lowerTextStyle,
        BSTR lowerText,
        struct INote * * retval ) = 0;
    virtual HRESULT __stdcall EditRedo (
        unsigned long nSteps ) = 0;
    virtual HRESULT __stdcall InsertProtrusionBlend4 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        double tessToleranceFactor,
        short startMatchingType,
        short endMatchingType,
        VARIANT_BOOL isThinBody,
        double thickness1,
        double thickness2,
        short thinType ) = 0;
    virtual HRESULT __stdcall InsertCutBlend4 (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        double tessToleranceFactor,
        short startMatchingType,
        short endMatchingType,
        VARIANT_BOOL isThinBody,
        double thickness1,
        double thickness2,
        short thinType ) = 0;
    virtual HRESULT __stdcall InsertProtrusionSwept4 (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        short startMatchingType,
        short endMatchingType,
        VARIANT_BOOL isThinBody,
        double thickness1,
        double thickness2,
        short thinType ) = 0;
    virtual HRESULT __stdcall InsertCutSwept4 (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        short startMatchingType,
        short endMatchingType,
        VARIANT_BOOL isThinBody,
        double thickness1,
        double thickness2,
        short thinType ) = 0;
    virtual HRESULT __stdcall SelectTangency ( ) = 0;
    virtual HRESULT __stdcall InsertBendTableOpen (
        BSTR fileName,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall InsertBendTableNew (
        BSTR fileName,
        BSTR units,
        BSTR type,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall InsertBendTableEdit ( ) = 0;
    virtual HRESULT __stdcall DeleteBendTable ( ) = 0;
    virtual HRESULT __stdcall InsertSheetMetal3dBend (
        double angle,
        double radius,
        VARIANT_BOOL flipDir,
        short bendPos ) = 0;
    virtual HRESULT __stdcall CreateTangentArc2 (
        double p1x,
        double p1y,
        double p1z,
        double p2x,
        double p2y,
        double p2z,
        long arcTypeIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetMassProperties2 (
        long * status,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMassProperties2 (
        long * status,
        double * mPropsData ) = 0;
    virtual HRESULT __stdcall SketchChamfer (
        double angleORdist,
        double dist1,
        long options ) = 0;
    virtual HRESULT __stdcall FeatureCut4 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        long keepPieceIndex,
        VARIANT_BOOL normalCut ) = 0;
    virtual HRESULT __stdcall GetPropertyManagerPage (
        long dialogId,
        BSTR title,
        IUnknown * handler,
        struct IPropertyManagerPage * * retval ) = 0;
    virtual HRESULT __stdcall AlignOrdinate ( ) = 0;
    virtual HRESULT __stdcall EditOrdinate ( ) = 0;
    virtual HRESULT __stdcall ReattachOrdinate (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditBalloonProperties (
        long Style,
        long size,
        long upperTextStyle,
        BSTR upperText,
        long lowerTextStyle,
        BSTR lowerText,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall EditDimensionProperties2 (
        long tolType,
        double tolMax,
        double tolMin,
        BSTR tolMaxFit,
        BSTR tolMinFit,
        VARIANT_BOOL useDocPrec,
        long precision,
        long arrowsIn,
        VARIANT_BOOL useDocArrows,
        long arrow1,
        long arrow2,
        BSTR prefixText,
        BSTR suffixText,
        VARIANT_BOOL showValue,
        BSTR calloutText1,
        BSTR calloutText2,
        VARIANT_BOOL centerText,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalClosedCorner ( ) = 0;
    virtual HRESULT __stdcall SketchUseEdge2 (
        VARIANT_BOOL chain,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SketchOffsetEntities2 (
        double offset,
        VARIANT_BOOL bothDirections,
        VARIANT_BOOL chain,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SketchOffset2 (
        double offset,
        VARIANT_BOOL bothDirections,
        VARIANT_BOOL chain,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddDimension2 (
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddDimension2 (
        double x,
        double y,
        double z,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall AddHorizontalDimension2 (
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddHorizontalDimension2 (
        double x,
        double y,
        double z,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall AddVerticalDimension2 (
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddVerticalDimension2 (
        double x,
        double y,
        double z,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall AddRadialDimension2 (
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddRadialDimension2 (
        double x,
        double y,
        double z,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall AddDiameterDimension2 (
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddDiameterDimension2 (
        double x,
        double y,
        double z,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall GetUserUnit (
        long UnitType,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetUserUnit (
        long UnitType,
        struct IUserUnit * * retval ) = 0;
    virtual HRESULT __stdcall InsertWeldSymbol3 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertWeldSymbol3 (
        struct IWeldSymbol * * retval ) = 0;
    virtual HRESULT __stdcall SaveAs3 (
        BSTR newName,
        long saveAsVersion,
        long options,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetUserPreferenceStringValue (
        long userPreference,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetUserPreferenceStringValue (
        long userPreference,
        BSTR Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteDesignTable ( ) = 0;
    virtual HRESULT __stdcall EditRebuild3 (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ForceRebuild3 (
        VARIANT_BOOL topOnly,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall FeatureFillet5 (
        long options,
        double r1,
        long ftyp,
        long overFlowType,
        VARIANT radii,
        VARIANT setBackDistances,
        VARIANT pointRadiusArray,
        long * retval ) = 0;
    virtual HRESULT __stdcall IFeatureFillet5 (
        long options,
        double r1,
        long ftyp,
        long overFlowType,
        long nRadii,
        double * radii,
        long setbackDistCount,
        double * setBackDistances,
        long PointCount,
        double * pointRadiusArray,
        long * retval ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalBreakCorner (
        long type,
        double distance ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalHem (
        long type,
        long position,
        VARIANT_BOOL reverse,
        double dLength,
        double dGap,
        double dRad,
        double dAngle,
        double dMiterGap ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtOffset3 (
        double val,
        VARIANT_BOOL flipDir,
        VARIANT_BOOL autoSize,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneAtOffset3 (
        double val,
        VARIANT_BOOL flipDir,
        VARIANT_BOOL autoSize,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtAngle3 (
        double val,
        VARIANT_BOOL flipDir,
        VARIANT_BOOL autoSize,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneAtAngle3 (
        double val,
        VARIANT_BOOL flipDir,
        VARIANT_BOOL autoSize,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneThru3Points3 (
        VARIANT_BOOL autoSize,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneThru3Points3 (
        VARIANT_BOOL autoSize,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneThruPtParallelToPlane (
        VARIANT_BOOL autoSize,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneThruPtParallelToPlane (
        VARIANT_BOOL autoSize,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneThruLineAndPt (
        VARIANT_BOOL autoSize,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneThruLineAndPt (
        VARIANT_BOOL autoSize,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlanePerCurveAndPassPoint3 (
        VARIANT_BOOL origAtCurve,
        VARIANT_BOOL autoSize,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlanePerCurveAndPassPoint3 (
        VARIANT_BOOL origAtCurve,
        VARIANT_BOOL autoSize,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneAtSurface3 (
        short interIndex,
        VARIANT_BOOL projOpt,
        VARIANT_BOOL reverseDir,
        VARIANT_BOOL normalPlane,
        double angle,
        VARIANT_BOOL autoSize,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneAtSurface3 (
        short interIndex,
        VARIANT_BOOL projOpt,
        VARIANT_BOOL reverseDir,
        VARIANT_BOOL normalPlane,
        double angle,
        VARIANT_BOOL autoSize,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall InsertAxis2 (
        VARIANT_BOOL autoSize,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertSketchPicture (
        BSTR fileName,
        VARIANT_BOOL * pResult ) = 0;
    virtual HRESULT __stdcall GetZebraStripeData (
        double * size,
        double * ratio,
        long * color1,
        long * color2 ) = 0;
    virtual HRESULT __stdcall SetZebraStripeData (
        double size,
        double ratio,
        long color1,
        long color2 ) = 0;
    virtual HRESULT __stdcall InsertSketchPictureData (
        short width,
        short height,
        long pDataIn ) = 0;
    virtual HRESULT __stdcall FeatureCurvePattern (
        long num1,
        double spacing1,
        long num2,
        double spacing2,
        VARIANT_BOOL flipDir1,
        VARIANT_BOOL flipDir2,
        VARIANT_BOOL equalSpacing1,
        VARIANT_BOOL equalSpacing2,
        VARIANT_BOOL useCentroid,
        VARIANT_BOOL alignToSeed,
        VARIANT_BOOL offsetCurve,
        VARIANT_BOOL patternSeedOnly ) = 0;
    virtual HRESULT __stdcall InsertFeatureReplaceFace ( ) = 0;
    virtual HRESULT __stdcall InsertRip (
        double gap ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalEdgeFlange (
        IDispatch * flangeEdge,
        IDispatch * sketchFeat,
        long booleanOptions,
        double dAngle,
        double dRadius,
        long bendPosition,
        double dOffsetDist,
        long reliefType,
        double dReliefRatio,
        double dReliefWidth,
        double dReliefDepth,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertSheetMetalEdgeFlange (
        struct IEdge * flangeEdge,
        struct IFeature * sketchFeat,
        long booleanOptions,
        double dAngle,
        double dRadius,
        long bendPosition,
        double dOffsetDist,
        long reliefType,
        double dReliefRatio,
        double dReliefWidth,
        double dReliefDepth,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall InsertSketchText (
        double Ptx,
        double Pty,
        double Ptz,
        BSTR text,
        long alignment,
        long flipDirection,
        long horizontalMirror,
        long WidthFactor,
        long spaceBetweenChars,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertSketchText (
        double Ptx,
        double Pty,
        double Ptz,
        BSTR text,
        long alignment,
        long flipDirection,
        long horizontalMirror,
        long WidthFactor,
        long spaceBetweenChars,
        struct ISketchText * * retval ) = 0;
    virtual HRESULT __stdcall DissolveSketchText ( ) = 0;
    virtual HRESULT __stdcall MoldDraftAnalysis (
        double angle,
        long options,
        VARIANT colors,
        long shows ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalJog (
        double angle,
        double radius,
        double offsetDist,
        VARIANT_BOOL flipDir,
        VARIANT_BOOL fixProjLen,
        short dimPos,
        short bendPos ) = 0;
    virtual HRESULT __stdcall InsertSketchForEdgeFlange (
        IDispatch * flangeEdge,
        double dAngle,
        VARIANT_BOOL flipDir,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertSketchForEdgeFlange (
        struct IEdge * flangeEdge,
        double dAngle,
        VARIANT_BOOL flipDir,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall ClearSelection2 (
        VARIANT_BOOL All ) = 0;
    virtual HRESULT __stdcall ListExternalFileReferences2 (
        VARIANT * modelPathName,
        VARIANT * componentPathName,
        VARIANT * feature,
        VARIANT * dataType,
        VARIANT * status,
        VARIANT * refEntity,
        VARIANT * featCom ) = 0;
    virtual HRESULT __stdcall ListExternalFileReferencesCount2 (
        long * retval ) = 0;
    virtual HRESULT __stdcall IListExternalFileReferences2 (
        long numRefs,
        BSTR * modelPathName,
        BSTR * compPathName,
        BSTR * feature,
        BSTR * dataType,
        long * status,
        BSTR * refEntity,
        BSTR * featComp ) = 0;
    virtual HRESULT __stdcall InsertDeleteFace2 (
        long refill,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddLoftSection ( ) = 0;
    virtual HRESULT __stdcall InsertMacroFeature (
        BSTR cmdFile,
        BSTR cmdModule,
        BSTR cmdProcedure,
        VARIANT paramNames,
        VARIANT paramTypes,
        VARIANT paramValues,
        BSTR pmFile,
        BSTR pmModule,
        BSTR pmProcedure,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertMacroFeature (
        BSTR cmdFile,
        BSTR cmdModule,
        BSTR cmdProcedure,
        long paramCount,
        BSTR * paramNames,
        long * paramTypes,
        BSTR * paramValues,
        BSTR pmFile,
        BSTR pmModule,
        BSTR pmProcedure,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall ListAuxiliaryExternalFileReferences (
        VARIANT * feature,
        VARIANT * externalFileName ) = 0;
    virtual HRESULT __stdcall ListAuxiliaryExternalFileReferencesCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IListAuxiliaryExternalFileReferences (
        long numRefs,
        BSTR * feature,
        BSTR * externalFileName ) = 0;
    virtual HRESULT __stdcall FeatureCut5 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL translateSurface1,
        VARIANT_BOOL translateSurface2,
        long keepPieceIndex,
        VARIANT_BOOL normalCut ) = 0;
    virtual HRESULT __stdcall FeatureBoss2 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL translateSurface1,
        VARIANT_BOOL translateSurface2 ) = 0;
    virtual HRESULT __stdcall DissolveLibraryFeature (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall FeatureExtruRefSurface2 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL translateSurface1,
        VARIANT_BOOL translateSurface2 ) = 0;
    virtual HRESULT __stdcall FeatureCutThin2 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL translateSurface1,
        VARIANT_BOOL translateSurface2,
        double thk1,
        double thk2,
        double endThk,
        long revThinDir,
        long capEnds,
        VARIANT_BOOL addBends,
        double bendRad ) = 0;
    virtual HRESULT __stdcall FeatureBossThin2 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL translateSurface1,
        VARIANT_BOOL translateSurface2,
        double thk1,
        double thk2,
        double endThk,
        long revThinDir,
        long capEnds,
        VARIANT_BOOL addBends,
        double bendRad ) = 0;
    virtual HRESULT __stdcall SimpleHole3 (
        double dia,
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL translateSurface1,
        VARIANT_BOOL translateSurface2 ) = 0;
    virtual HRESULT __stdcall EditUndo2 (
        long Steps ) = 0;
    virtual HRESULT __stdcall EditRedo2 (
        long Steps ) = 0;
    virtual HRESULT __stdcall AddConfiguration3 (
        BSTR Name,
        BSTR comment,
        BSTR alternateName,
        long options,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddConfiguration3 (
        BSTR Name,
        BSTR comment,
        BSTR alternateName,
        long options,
        struct IConfiguration * * retval ) = 0;
    virtual HRESULT __stdcall EditConfiguration3 (
        BSTR Name,
        BSTR newName,
        BSTR comment,
        BSTR alternateName,
        long options,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetEquationMgr (
        struct IEquationMgr * * retval ) = 0;
    virtual HRESULT __stdcall ClosestDistance (
        IDispatch * object1,
        IDispatch * object2,
        VARIANT * point1,
        VARIANT * point2,
        double * retval ) = 0;
    virtual HRESULT __stdcall IClosestDistance (
        IDispatch * object1,
        IDispatch * object2,
        double * point1,
        double * point2,
        double * retval ) = 0;
    virtual HRESULT __stdcall ReloadOrReplace (
        VARIANT_BOOL ReadOnly,
        BSTR ReplaceFileName,
        VARIANT_BOOL DiscardChanges,
        long * Errors ) = 0;
    virtual HRESULT __stdcall get_FeatureManagerSplitterPosition (
        double * SplitterPosition ) = 0;
    virtual HRESULT __stdcall put_FeatureManagerSplitterPosition (
        double SplitterPosition ) = 0;
    virtual HRESULT __stdcall GetCustomInfoValue (
        BSTR configuration,
        BSTR FieldName,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_printer (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_printer (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_PageSetup (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_IPageSetup (
        struct IPageSetup * * retval ) = 0;
    virtual HRESULT __stdcall InsertStackedBalloon (
        long Style,
        long size,
        long upperTextStyle,
        BSTR upperText,
        long lowerTextStyle,
        BSTR lowerText,
        struct INote * * retval ) = 0;
    virtual HRESULT __stdcall SaveAs4 (
        BSTR Name,
        long Version,
        long options,
        long * Errors,
        long * Warnings,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Save3 (
        long options,
        long * Errors,
        long * Warnings,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreatePlaneFixed2 (
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT_BOOL useGlobal,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlaneFixed2 (
        double * P1,
        double * P2,
        double * P3,
        VARIANT_BOOL useGlobal,
        struct IRefPlane * * retval ) = 0;
    virtual HRESULT __stdcall get_LargeAssemblyMode (
        VARIANT_BOOL * Large ) = 0;
    virtual HRESULT __stdcall put_LargeAssemblyMode (
        VARIANT_BOOL Large ) = 0;
    virtual HRESULT __stdcall AddOrEditConfiguration (
        BSTR configName,
        VARIANT params,
        VARIANT values,
        long * retval ) = 0;
    virtual HRESULT __stdcall IAddOrEditConfiguration (
        BSTR configName,
        long paramCount,
        BSTR * paramNames,
        BSTR * paramValues,
        long * retval ) = 0;
    virtual HRESULT __stdcall ForceReleaseLocks (
        long * status ) = 0;
    virtual HRESULT __stdcall get_FeatureManager (
        struct IFeatureManager * * pFeatMgr ) = 0;
    virtual HRESULT __stdcall get_ModelViewManager (
        struct IModelViewManager * * pModelViewMgr ) = 0;
    virtual HRESULT __stdcall get_Extension (
        struct IModelDocExtension * * modelDocExt ) = 0;
    virtual HRESULT __stdcall get_ConfigurationManager (
        struct IConfigurationManager * * configMgr ) = 0;
};

struct __declspec(uuid("83a33d4c-27c5-11ce-bfd4-00400513bb57"))
IModelView : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_xform (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_xform (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Orientation (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Orientation (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Translation (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Translation (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Scale (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Scale (
        double retval ) = 0;
    virtual HRESULT __stdcall get_IXform (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IXform (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_IOrientation (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IOrientation (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_ITranslation (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_ITranslation (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetViewHWnd (
        long * retval ) = 0;
    virtual HRESULT __stdcall StartDynamics ( ) = 0;
    virtual HRESULT __stdcall StopDynamics ( ) = 0;
    virtual HRESULT __stdcall AddPerspective ( ) = 0;
    virtual HRESULT __stdcall RemovePerspective ( ) = 0;
    virtual HRESULT __stdcall HasPerspective (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetEyePoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEyePoint (
        double * eyept ) = 0;
    virtual HRESULT __stdcall GetViewPlaneDistance (
        double * retval ) = 0;
    virtual HRESULT __stdcall InitializeShading ( ) = 0;
    virtual HRESULT __stdcall get_Orientation2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Orientation2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_Translation2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_Translation2 (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_IOrientation2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IOrientation2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_ITranslation2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_ITranslation2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayState (
        long displayType,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetViewDIB (
        long * retval ) = 0;
    virtual HRESULT __stdcall ZoomByFactor (
        double factor ) = 0;
    virtual HRESULT __stdcall TranslateBy (
        double x,
        double y ) = 0;
    virtual HRESULT __stdcall RotateAboutCenter (
        double xAngle,
        double yAngle ) = 0;
    virtual HRESULT __stdcall RotateAboutPoint (
        double xAngle,
        double yAngle,
        double Ptx,
        double Pty,
        double Ptz ) = 0;
    virtual HRESULT __stdcall RotateAboutAxis (
        double angle,
        double Ptx,
        double Pty,
        double Ptz,
        double AxisVecX,
        double AxisVecY,
        double AxisVecZ ) = 0;
    virtual HRESULT __stdcall SetEyePoint (
        VARIANT eyept,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetEyePoint (
        double * eyept,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetStereoSeparation (
        VARIANT dfSeparation,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetStereoSeparation (
        double * dfSeparation,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetStereoSeparation (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetStereoSeparation (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetDIBHeader (
        long ldib ) = 0;
    virtual HRESULT __stdcall GetStripsOfDIB (
        long ldib,
        long nScanLinesPerStrip,
        long stripIndex ) = 0;
    virtual HRESULT __stdcall put_FrameLeft (
        int _arg1 ) = 0;
    virtual HRESULT __stdcall put_FrameTop (
        int _arg1 ) = 0;
    virtual HRESULT __stdcall put_FrameWidth (
        int _arg1 ) = 0;
    virtual HRESULT __stdcall put_FrameHeight (
        int _arg1 ) = 0;
    virtual HRESULT __stdcall put_FrameState (
        int _arg1 ) = 0;
    virtual HRESULT __stdcall get_ObjectSizesAway (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_ObjectSizesAway (
        double retval ) = 0;
    virtual HRESULT __stdcall get_DynamicMode (
        long * retval ) = 0;
    virtual HRESULT __stdcall DrawHighlightedItems ( ) = 0;
    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct IModelView * * retval ) = 0;
    virtual HRESULT __stdcall get_Scale2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Scale2 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_HlrQuality (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_HlrQuality (
        long retval ) = 0;
    virtual HRESULT __stdcall get_XorHighlight (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_XorHighlight (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_DisplayZebraStripes (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_DisplayZebraStripes (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_Transform (
        struct IMathTransform * * xform ) = 0;
    virtual HRESULT __stdcall put_Transform (
        struct IMathTransform * xform ) = 0;
    virtual HRESULT __stdcall get_Orientation3 (
        struct IMathTransform * * xform ) = 0;
    virtual HRESULT __stdcall put_Orientation3 (
        struct IMathTransform * xform ) = 0;
    virtual HRESULT __stdcall get_Translation3 (
        struct IMathVector * * VectorObj ) = 0;
    virtual HRESULT __stdcall put_Translation3 (
        struct IMathVector * VectorObj ) = 0;
    virtual HRESULT __stdcall ProjectModelPoint (
        double x,
        double y,
        double z,
        double * xOut,
        double * yOut,
        double * zOut ) = 0;
    virtual HRESULT __stdcall UnprojectModelPoint (
        double x,
        double y,
        double z,
        double * xOut,
        double * yOut,
        double * zOut ) = 0;
};

struct __declspec(uuid("f7d97f82-162e-11d4-aeab-00c04fa0ac51"))
IMathTransform : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Multiply (
        IDispatch * TransformObjIn,
        IDispatch * * TransformObjOut ) = 0;
    virtual HRESULT __stdcall IMultiply (
        struct IMathTransform * TransformObjIn,
        struct IMathTransform * * TransformObjOut ) = 0;
    virtual HRESULT __stdcall get_ArrayData (
        VARIANT * ArrayDataOut ) = 0;
    virtual HRESULT __stdcall put_ArrayData (
        VARIANT ArrayDataOut ) = 0;
    virtual HRESULT __stdcall get_IArrayData (
        double * ArrayDataOut ) = 0;
    virtual HRESULT __stdcall put_IArrayData (
        double * ArrayDataOut ) = 0;
    virtual HRESULT __stdcall GetData (
        IDispatch * * xAxisObjOut,
        IDispatch * * yAxisObjOut,
        IDispatch * * zAxisObjOut,
        IDispatch * * TransformObjOut,
        double * scaleOut ) = 0;
    virtual HRESULT __stdcall IGetData (
        struct IMathVector * * xAxisObjOut,
        struct IMathVector * * yAxisObjOut,
        struct IMathVector * * zAxisObjOut,
        struct IMathVector * * TransformObjOut,
        double * scaleOut ) = 0;
    virtual HRESULT __stdcall SetData (
        IDispatch * xAxisObjIn,
        IDispatch * yAxisObjIn,
        IDispatch * zAxisObjIn,
        IDispatch * TransformObjIn,
        double scaleValIn ) = 0;
    virtual HRESULT __stdcall ISetData (
        struct IMathVector * xAxisObjIn,
        struct IMathVector * yAxisObjIn,
        struct IMathVector * zAxisObjIn,
        struct IMathVector * TransformObjIn,
        double scaleValIn ) = 0;
    virtual HRESULT __stdcall Inverse (
        IDispatch * * TransformObjOut ) = 0;
    virtual HRESULT __stdcall IInverse (
        struct IMathTransform * * TransformObjOut ) = 0;
};

struct __declspec(uuid("f7d97f86-162e-11d4-aeab-00c04fa0ac51"))
IMathVector : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall MultiplyTransform (
        IDispatch * TransformObjIn,
        IDispatch * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall IMultiplyTransform (
        struct IMathTransform * TransformObjIn,
        struct IMathVector * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall get_ArrayData (
        VARIANT * ArrayDataOut ) = 0;
    virtual HRESULT __stdcall put_ArrayData (
        VARIANT ArrayDataOut ) = 0;
    virtual HRESULT __stdcall get_IArrayData (
        double * ArrayDataOut ) = 0;
    virtual HRESULT __stdcall put_IArrayData (
        double * ArrayDataOut ) = 0;
    virtual HRESULT __stdcall Add (
        IDispatch * vectorObjIn,
        IDispatch * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall IAdd (
        struct IMathVector * vectorObjIn,
        struct IMathVector * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall Subtract (
        IDispatch * vectorObjIn,
        IDispatch * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall ISubtract (
        struct IMathVector * vectorObjIn,
        struct IMathVector * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall Scale (
        double valueIn,
        IDispatch * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall IScale (
        double valueIn,
        struct IMathVector * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall GetLength (
        double * valueOut ) = 0;
    virtual HRESULT __stdcall Dot (
        IDispatch * vectorObjIn,
        double * valOut ) = 0;
    virtual HRESULT __stdcall IDot (
        struct IMathVector * vectorObjIn,
        double * valOut ) = 0;
    virtual HRESULT __stdcall Cross (
        IDispatch * vectorObjIn,
        IDispatch * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall ICross (
        struct IMathVector * vectorObjIn,
        struct IMathVector * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall ConvertToPoint (
        IDispatch * * pointObjOut ) = 0;
    virtual HRESULT __stdcall IConvertToPoint (
        struct IMathPoint * * pointObjOut ) = 0;
    virtual HRESULT __stdcall Normalise (
        struct IMathVector * * retval ) = 0;
};

struct __declspec(uuid("f7d97f84-162e-11d4-aeab-00c04fa0ac51"))
IMathPoint : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall MultiplyTransform (
        IDispatch * TransformObjIn,
        IDispatch * * pointObjOut ) = 0;
    virtual HRESULT __stdcall IMultiplyTransform (
        struct IMathTransform * TransformObjIn,
        struct IMathPoint * * pointObjOut ) = 0;
    virtual HRESULT __stdcall get_ArrayData (
        VARIANT * ArrayDataOut ) = 0;
    virtual HRESULT __stdcall put_ArrayData (
        VARIANT ArrayDataOut ) = 0;
    virtual HRESULT __stdcall get_IArrayData (
        double * ArrayDataOut ) = 0;
    virtual HRESULT __stdcall put_IArrayData (
        double * ArrayDataOut ) = 0;
    virtual HRESULT __stdcall AddVector (
        IDispatch * vectorObjIn,
        IDispatch * * pointObjOut ) = 0;
    virtual HRESULT __stdcall IAddVector (
        struct IMathVector * vectorObjIn,
        struct IMathPoint * * pointObjOut ) = 0;
    virtual HRESULT __stdcall SubtractVector (
        IDispatch * vectorObjIn,
        IDispatch * * pointObjOut ) = 0;
    virtual HRESULT __stdcall ISubtractVector (
        struct IMathVector * vectorObjIn,
        struct IMathPoint * * pointObjOut ) = 0;
    virtual HRESULT __stdcall Subtract (
        IDispatch * pointObjIn,
        IDispatch * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall ISubtract (
        struct IMathPoint * pointObjIn,
        struct IMathVector * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall Scale (
        double valueIn,
        IDispatch * * pointObjOut ) = 0;
    virtual HRESULT __stdcall IScale (
        double valueIn,
        struct IMathPoint * * pointObjOut ) = 0;
    virtual HRESULT __stdcall ConvertToVector (
        IDispatch * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall IConvertToVector (
        struct IMathVector * * vectorObjOut ) = 0;
};

struct __declspec(uuid("83a33d51-27c5-11ce-bfd4-00400513bb57"))
ISketch : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ModelToSketchXform (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ModelToSketchXform (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall GetLines (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLines (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArcs (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcs (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPolylines (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetPolylines (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetPolyLineCount (
        long * PointCount,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSplines (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSplines (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSplineCount (
        long * PointCount,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetEllipses (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEllipses (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEllipseCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_IModelToSketchXform (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetUserPoints (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetUserPoints (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetUserPointsCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSplinesInterpolate (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSplinesInterpolate (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSplineInterpolateCount (
        long * PointCount,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetAutomaticSolve (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetAutomaticSolve (
        VARIANT_BOOL solveFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ConstrainAll (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSplineParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSplineParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSplineParamsCount (
        long * size,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetParabolas (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetParabolas (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetParabolaCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetEllipses2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEllipses2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSketchPoints (
        VARIANT * points ) = 0;
    virtual HRESULT __stdcall IEnumSketchPoints (
        struct IEnumSketchPoints * * points ) = 0;
    virtual HRESULT __stdcall GetSketchSegments (
        VARIANT * segments ) = 0;
    virtual HRESULT __stdcall IEnumSketchSegments (
        struct IEnumSketchSegments * * segments ) = 0;
    virtual HRESULT __stdcall Is3D (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetSketchPointsCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSketchHatches (
        VARIANT * hatches ) = 0;
    virtual HRESULT __stdcall IEnumSketchHatches (
        struct IEnumSketchHatches * * hatches ) = 0;
    virtual HRESULT __stdcall GetSplineParams2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSplineParams2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSplineParamsCount2 (
        long * size,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSketchTextSegments (
        VARIANT * textSegments ) = 0;
    virtual HRESULT __stdcall IEnumSketchTextSegments (
        struct IEnumSketchSegments * * textSegments ) = 0;
    virtual HRESULT __stdcall GetConstrainedStatus (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetEntityCount (
        long entityType,
        long entityCount,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CheckFeatureUse (
        long featureType,
        long * openCount,
        long * closedCount,
        long * retval ) = 0;
    virtual HRESULT __stdcall MergePoints (
        double distance,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetReferenceEntity (
        long * lEntityType,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall GetContourEdgeCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetContourEdges (
        VARIANT xform,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetContourEdges (
        double * xform,
        long edgeCount,
        struct IEdge * * edges ) = 0;
    virtual HRESULT __stdcall get_ModelToSketchTransform (
        struct IMathTransform * * xform ) = 0;
    virtual HRESULT __stdcall put_ModelToSketchTransform (
        struct IMathTransform * xform ) = 0;
    virtual HRESULT __stdcall AutoDimension (
        long entitiesToDimension,
        long horizontalScheme,
        long horizontalPlacement,
        long verticalScheme,
        long verticalPlacement,
        long * status ) = 0;
    virtual HRESULT __stdcall GetLineCount2 (
        short crossHatchOption,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLines2 (
        short crossHatchOption,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLines2 (
        short crossHatchOption,
        long arraySize,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcs2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcs2 (
        long arraySize,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetUserPoints2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetUserPoints2 (
        long arraySize,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEllipses3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEllipses3 (
        long arraySize,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetParabolas2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetParabolas2 (
        long arraySize,
        double * retval ) = 0;
    virtual HRESULT __stdcall IsShared (
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33dcd-27c5-11ce-bfd4-00400513bb57"))
IEnumSketchPoints : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct ISketchPoint * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumSketchPoints * * ppenum ) = 0;
};

struct __declspec(uuid("83a33dbd-27c5-11ce-bfd4-00400513bb57"))
ISketchPoint : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_x (
        double * x ) = 0;
    virtual HRESULT __stdcall get_y (
        double * y ) = 0;
    virtual HRESULT __stdcall get_z (
        double * z ) = 0;
    virtual HRESULT __stdcall GetCoords (
        double * coords ) = 0;
    virtual HRESULT __stdcall GetId (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetID (
        long * retval ) = 0;
    virtual HRESULT __stdcall Select (
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectByMark (
        VARIANT_BOOL appendFlag,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Layer (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Layer (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_LayerOverride (
        int * retval ) = 0;
    virtual HRESULT __stdcall put_LayerOverride (
        int retval ) = 0;
    virtual HRESULT __stdcall get_Color (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Color (
        long retval ) = 0;
    virtual HRESULT __stdcall SetCoords (
        double xx,
        double yy,
        double zz,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetFramePointTangent (
        VARIANT_BOOL * status,
        VARIANT * vectorOut ) = 0;
    virtual HRESULT __stdcall IGetFramePointTangent (
        VARIANT_BOOL * status,
        double * vectorOut ) = 0;
    virtual HRESULT __stdcall SetFramePointTangent (
        VARIANT toVector,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetFramePointTangent (
        double * toVector,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetSketch (
        struct ISketch * * sketch ) = 0;
    virtual HRESULT __stdcall Select2 (
        VARIANT_BOOL Append,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Select3 (
        VARIANT_BOOL Append,
        long mark,
        struct ICallout * Callout,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("9caaa1aa-f2fc-11d5-af66-00c04f603faf"))
ICallout : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Label (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Label (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_TargetStyle (
        long * Style ) = 0;
    virtual HRESULT __stdcall put_TargetStyle (
        long Style ) = 0;
    virtual HRESULT __stdcall get_TextBox (
        VARIANT_BOOL * Box ) = 0;
    virtual HRESULT __stdcall put_TextBox (
        VARIANT_BOOL Box ) = 0;
};

struct __declspec(uuid("83a33dcf-27c5-11ce-bfd4-00400513bb57"))
IEnumSketchSegments : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct ISketchSegment * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumSketchSegments * * ppenum ) = 0;
};

struct __declspec(uuid("83a33dbf-27c5-11ce-bfd4-00400513bb57"))
ISketchSegment : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Layer (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Layer (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_LayerOverride (
        int * retval ) = 0;
    virtual HRESULT __stdcall put_LayerOverride (
        int retval ) = 0;
    virtual HRESULT __stdcall get_Color (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Color (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Style (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Style (
        long retval ) = 0;
    virtual HRESULT __stdcall get_width (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_width (
        long retval ) = 0;
    virtual HRESULT __stdcall GetType (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetId (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetID (
        long * retval ) = 0;
    virtual HRESULT __stdcall Select (
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectByMark (
        VARIANT_BOOL appendFlag,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_ConstructionGeometry (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_ConstructionGeometry (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall GetCurve (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetCurve (
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall GetSketch (
        struct ISketch * * sketch ) = 0;
    virtual HRESULT __stdcall GetConstraints (
        VARIANT * constraints ) = 0;
    virtual HRESULT __stdcall IGetConstraintsCount (
        long * numConstraints ) = 0;
    virtual HRESULT __stdcall IGetConstraints (
        BSTR * constraints ) = 0;
    virtual HRESULT __stdcall GetLength (
        double * valueOut ) = 0;
    virtual HRESULT __stdcall Select2 (
        VARIANT_BOOL Append,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Select3 (
        VARIANT_BOOL Append,
        long mark,
        struct ICallout * Callout,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("54729b8e-4086-11d3-ae9b-00c04f683cba"))
IEnumSketchHatches : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct ISketchHatch * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumSketchHatches * * ppenum ) = 0;
};

struct __declspec(uuid("c3d00926-4068-11d3-ae9b-00c04f683cba"))
ISketchHatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetId (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetID (
        long * retval ) = 0;
    virtual HRESULT __stdcall Select (
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectByMark (
        VARIANT_BOOL appendFlag,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Layer (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Layer (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_LayerOverride (
        int * retval ) = 0;
    virtual HRESULT __stdcall put_LayerOverride (
        int retval ) = 0;
    virtual HRESULT __stdcall get_Color (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Color (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Pattern (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Pattern (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Scale (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Scale (
        double retval ) = 0;
    virtual HRESULT __stdcall get_angle (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_angle (
        double retval ) = 0;
    virtual HRESULT __stdcall GetFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFace (
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall GetSketch (
        struct ISketch * * sketch ) = 0;
    virtual HRESULT __stdcall get_Scale2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Scale2 (
        double retval ) = 0;
    virtual HRESULT __stdcall IGetFace2 (
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall Select2 (
        VARIANT_BOOL Append,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Select3 (
        VARIANT_BOOL Append,
        long mark,
        struct ICallout * Callout,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_SolidFill (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_SolidFill (
        VARIANT_BOOL retval ) = 0;
};

struct __declspec(uuid("5b6e8476-461f-43af-b784-90d3cd74337c"))
IMidSurface2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetFacePairCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFirstFacePair (
        double * thickness,
        IDispatch * * partnerFaceDisp,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstFacePair (
        double * thickness,
        struct IFace2 * * partnerFaceDisp,
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall GetNextFacePair (
        double * thickness,
        IDispatch * * partnerFaceDisp,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextFacePair (
        double * thickness,
        struct IFace2 * * partnerFaceDisp,
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstNeutralSheet (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstNeutralSheet (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall GetNextNeutralSheet (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextNeutralSheet (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall GetNeutralSheetCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFaceCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFirstFace (
        IDispatch * * fromFace1Disp,
        IDispatch * * fromFace2Disp,
        double * thickness,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstFace (
        struct IFace2 * * fromFace1Disp,
        struct IFace2 * * fromFace2Disp,
        double * thickness,
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall GetNextFace (
        IDispatch * * fromFace1Disp,
        IDispatch * * fromFace2Disp,
        double * thickness,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextFace (
        struct IFace2 * * fromFace1Disp,
        struct IFace2 * * fromFace2Disp,
        double * thickness,
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall EdgeGetFace (
        IDispatch * edgeInDisp,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IEdgeGetFace (
        struct IEdge * edgeInDisp,
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstFaceArray (
        struct IFace2 * * fromFrontFaceListDisp,
        long * sizeOfFrontFaceList,
        struct IFace2 * * fromFaceBackListDisp,
        long * sizeOfBackFaceList,
        double * thickness,
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextFaceArray (
        struct IFace2 * * fromFrontFaceListDisp,
        long * sizeOfFrontFaceList,
        struct IFace2 * * fromFaceBackListDisp,
        long * sizeOfBackFaceList,
        double * thickness,
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstFaceArray (
        double * thickness,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetNextFaceArray (
        double * thickness,
        VARIANT * retval ) = 0;
};

struct __declspec(uuid("83a33d75-27c5-11ce-bfd4-00400513bb57"))
IFeatMgrView : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetFeatMgrViewWnd (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetControl (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetControl (
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall ActivateView (
        long * paneType ) = 0;
    virtual HRESULT __stdcall DeActivateView (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteView (
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33d98-27c5-11ce-bfd4-00400513bb57"))
IConfiguration : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetRootComponent (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetRootComponent (
        struct IComponent * * retval ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_comment (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_comment (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_alternateName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_alternateName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_UseAlternateNameInBOM (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_UseAlternateNameInBOM (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_SuppressNewFeatures (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_SuppressNewFeatures (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_HideNewComponentModels (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_HideNewComponentModels (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_SuppressNewComponentModels (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_SuppressNewComponentModels (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_ShowChildComponentsInBOM (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_ShowChildComponentsInBOM (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall GetNumberOfExplodeSteps (
        int * retval ) = 0;
    virtual HRESULT __stdcall GetExplodeStep (
        long explodeStepIndex,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetExplodeStep (
        long explodeStepIndex,
        struct IExplodeStep * * retval ) = 0;
    virtual HRESULT __stdcall AddExplodeStep (
        double explDist,
        VARIANT_BOOL reverseDir,
        VARIANT_BOOL rigidSubassembly,
        VARIANT_BOOL explodeRelated,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddExplodeStep (
        double explDist,
        VARIANT_BOOL reverseDir,
        VARIANT_BOOL rigidSubassembly,
        VARIANT_BOOL explodeRelated,
        struct IExplodeStep * * retval ) = 0;
    virtual HRESULT __stdcall DeleteExplodeStep (
        BSTR explodeStepName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetStreamName (
        BSTR * streamName ) = 0;
    virtual HRESULT __stdcall IGetRootComponent2 (
        struct IComponent2 * * retval ) = 0;
    virtual HRESULT __stdcall GetComponentSuppressionState (
        BSTR compName,
        VARIANT_BOOL * suppressed ) = 0;
    virtual HRESULT __stdcall GetComponentConfigName (
        BSTR compName,
        BSTR * ReferencedConfiguration ) = 0;
    virtual HRESULT __stdcall get_Lock (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Lock (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall GetCustomProperties (
        VARIANT * propNames,
        VARIANT * propValues,
        VARIANT * propTypes,
        long * numProps ) = 0;
    virtual HRESULT __stdcall GetCustomPropertiesCount (
        long * numProps ) = 0;
    virtual HRESULT __stdcall IGetCustomProperties (
        long numProps,
        BSTR * propNames,
        BSTR * propValues,
        long * propTypes ) = 0;
    virtual HRESULT __stdcall SetColor (
        long colorIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Description (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR retval ) = 0;
};

struct __declspec(uuid("7241680b-0bc6-11d4-aeee-00c04f61025c"))
IExplodeStep : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNumOfComponents (
        int * retval ) = 0;
    virtual HRESULT __stdcall GetComponentName (
        int index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetComponentXform (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetComponentXform (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetComponent (
        int index,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetComponent (
        int index,
        struct IComponent * * retval ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall IsSubAssemblyRigid (
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("655d6f2a-5441-45d1-8cba-d35fb26988e4"))
IComponent2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetChildren (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetChildren (
        struct IComponent2 * * retval ) = 0;
    virtual HRESULT __stdcall IGetChildrenCount (
        int * retval ) = 0;
    virtual HRESULT __stdcall GetXform (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetXform (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetBody (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetBody (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall get_MaterialPropertyValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialPropertyValues (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall AddPropertyExtension (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPropertyExtension (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
    virtual HRESULT __stdcall GetMaterialIdName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialIdName (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetMaterialUserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetMaterialUserName (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetSectionedBodies (
        IDispatch * viewIn,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetBox (
        VARIANT_BOOL includeRefPlanes,
        VARIANT_BOOL includeSketches,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetBox (
        VARIANT_BOOL includeRefPlanes,
        VARIANT_BOOL includeSketches,
        double * retval ) = 0;
    virtual HRESULT __stdcall SetXform (
        VARIANT xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetXform (
        double * xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetModelDoc (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetModelDoc (
        struct IModelDoc2 * * retval ) = 0;
    virtual HRESULT __stdcall IsFixed (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EnumRelatedBodies (
        struct IEnumBodies2 * * retval ) = 0;
    virtual HRESULT __stdcall IsSuppressed (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EnumSectionedBodies (
        struct IModelView * viewIn,
        struct IEnumBodies2 * * retval ) = 0;
    virtual HRESULT __stdcall IsHidden (
        VARIANT_BOOL considerSuppressed,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ReferencedConfiguration (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ReferencedConfiguration (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetSuppression (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetSuppression (
        long state,
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Visible (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Visible (
        long retval ) = 0;
    virtual HRESULT __stdcall GetPathName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetXformAndSolve (
        VARIANT xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetXformAndSolve (
        double * xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriangles (
        VARIANT_BOOL noConversion,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriangles (
        VARIANT_BOOL noConversion,
        float * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTessNorms (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessNorms (
        float * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStrips (
        VARIANT_BOOL noConversion,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStrips (
        VARIANT_BOOL noConversion,
        float * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStripNorms (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripNorms (
        float * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStripEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripEdges (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripEdgeSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall IsDisplayDataOutOfDate (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetConstrainedStatus (
        long * retval ) = 0;
    virtual HRESULT __stdcall RemoveMaterialProperty (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IGetTemporaryBodyID (
        long * retval ) = 0;
    virtual HRESULT __stdcall FindAttribute (
        IDispatch * attributeDef,
        long whichOne,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFindAttribute (
        struct IAttributeDef * attributeDef,
        long whichOne,
        struct IAttribute * * retval ) = 0;
    virtual HRESULT __stdcall Select (
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectByMark (
        VARIANT_BOOL appendFlag,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Name2 (
        BSTR * newName ) = 0;
    virtual HRESULT __stdcall put_Name2 (
        BSTR newName ) = 0;
    virtual HRESULT __stdcall get_Solving (
        long * retval ) = 0;
    virtual HRESULT __stdcall ListExternalFileReferences (
        VARIANT * modelPathName,
        VARIANT * componentPathName,
        VARIANT * feature,
        VARIANT * dataType,
        VARIANT * status,
        VARIANT * refEntity,
        VARIANT * featCom ) = 0;
    virtual HRESULT __stdcall ListExternalFileReferencesCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IListExternalFileReferences (
        long numRefs,
        BSTR * modelPathName,
        BSTR * compPathName,
        BSTR * feature,
        BSTR * dataType,
        long * status,
        BSTR * refEntity,
        BSTR * featComp ) = 0;
    virtual HRESULT __stdcall ReplaceReference (
        BSTR fileName,
        long * retval ) = 0;
    virtual HRESULT __stdcall Select2 (
        VARIANT_BOOL Append,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetCorrespondingEntity (
        IDispatch * entity,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetCorrespondingEntity (
        struct IEntity * pEntity,
        struct IEntity * * retval ) = 0;
    virtual HRESULT __stdcall IsEnvelope (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Transform (
        struct IMathTransform * * xform ) = 0;
    virtual HRESULT __stdcall put_Transform (
        struct IMathTransform * xform ) = 0;
    virtual HRESULT __stdcall SetTransformAndSolve (
        struct IMathTransform * xformIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetParent (
        struct IComponent2 * * parent ) = 0;
    virtual HRESULT __stdcall FirstFeature (
        struct IFeature * * pFeature ) = 0;
    virtual HRESULT __stdcall get_PresentationTransform (
        struct IMathTransform * * xform ) = 0;
    virtual HRESULT __stdcall put_PresentationTransform (
        struct IMathTransform * xform ) = 0;
    virtual HRESULT __stdcall RemovePresentationTransform ( ) = 0;
    virtual HRESULT __stdcall EnumBodies (
        long bodyType,
        struct IEnumBodies2 * * EnumBodies ) = 0;
    virtual HRESULT __stdcall GetBodies (
        long bodyType,
        VARIANT * bodiesVar ) = 0;
    virtual HRESULT __stdcall GetTotalTransform (
        VARIANT_BOOL includePresentationXform,
        struct IMathTransform * * xform ) = 0;
    virtual HRESULT __stdcall get_Transform2 (
        struct IMathTransform * * xform ) = 0;
    virtual HRESULT __stdcall put_Transform2 (
        struct IMathTransform * xform ) = 0;
    virtual HRESULT __stdcall SetTransformAndSolve2 (
        struct IMathTransform * xformIn,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("97a9befa-6814-4fa6-acb4-8cc84f76fb99"))
IEnumBodies2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct IBody2 * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumBodies2 * * ppenum ) = 0;
};

struct __declspec(uuid("83a33d67-27c5-11ce-bfd4-00400513bb57"))
IAttributeDef : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall CreateInstance (
        IDispatch * ownerDoc,
        IDispatch * ownerEntity,
        BSTR nameIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateInstance (
        struct IModelDoc * ownerDoc,
        struct IEntity * ownerEntity,
        BSTR nameIn,
        struct IAttribute * * retval ) = 0;
    virtual HRESULT __stdcall AddParameter (
        BSTR nameIn,
        long type,
        double defaultValue,
        long options,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetOption (
        long whichOption,
        long optionValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetOption (
        long whichOption,
        long * retval ) = 0;
    virtual HRESULT __stdcall AddCallback (
        long whichCallback,
        BSTR CallbackFcnAndModule,
        long whichOption,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Register (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateInstance2 (
        IDispatch * ownerDoc,
        IDispatch * ownerEntity,
        BSTR nameIn,
        long options,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateInstance2 (
        struct IModelDoc * ownerDoc,
        struct IEntity * ownerEntity,
        BSTR nameIn,
        long options,
        struct IAttribute * * retval ) = 0;
    virtual HRESULT __stdcall CreateInstance3 (
        IDispatch * ownerDoc,
        IDispatch * ownerComp,
        IDispatch * ownerEntity,
        BSTR nameIn,
        long options,
        long configurationOption,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateInstance3 (
        struct IModelDoc * ownerDoc,
        struct IComponent * ownerComp,
        struct IEntity * ownerEntity,
        BSTR nameIn,
        long options,
        long configurationOption,
        struct IAttribute * * retval ) = 0;
    virtual HRESULT __stdcall ICreateInstance4 (
        struct IModelDoc2 * ownerDoc,
        struct IComponent2 * ownerComp,
        struct IEntity * ownerEntity,
        BSTR nameIn,
        long options,
        long configurationOption,
        struct IAttribute * * retval ) = 0;
    virtual HRESULT __stdcall CreateInstance4 (
        struct IModelDoc2 * ownerDoc,
        IDispatch * ownerObj,
        BSTR nameIn,
        long options,
        long configurationOption,
        struct IAttribute * * retval ) = 0;
};

struct __declspec(uuid("83a33d65-27c5-11ce-bfd4-00400513bb57"))
IEntity : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall CreateStringAttributeDefinition (
        BSTR identifierString,
        long * retval ) = 0;
    virtual HRESULT __stdcall CreateStringAttribute (
        long definitionTag,
        BSTR StringValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall FindStringAttribute (
        long definitionTag,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall RemoveStringAttribute (
        long definitionTag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall FindAttribute (
        IDispatch * attributeDef,
        long whichOne,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFindAttribute (
        struct IAttributeDef * attributeDef,
        long whichOne,
        struct IAttribute * * retval ) = 0;
    virtual HRESULT __stdcall Select (
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetType (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetComponent (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetComponent (
        struct IComponent * * retval ) = 0;
    virtual HRESULT __stdcall SelectByMark (
        VARIANT_BOOL appendFlag,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_ModelName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_ModelName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall DeleteModelName ( ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IGetComponent2 (
        struct IComponent2 * * retval ) = 0;
    virtual HRESULT __stdcall Select2 (
        VARIANT_BOOL Append,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Select3 (
        VARIANT_BOOL Append,
        long mark,
        struct ICallout * Callout,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_IsSafe (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetSafeEntity (
        struct IEntity * * ppSafeEntity ) = 0;
};

struct __declspec(uuid("83a33d71-27c5-11ce-bfd4-00400513bb57"))
IAttribute : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetParameter (
        BSTR nameIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetParameter (
        BSTR nameIn,
        struct IParameter * * retval ) = 0;
    virtual HRESULT __stdcall GetEntity (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetEntity (
        struct IEntity * * retval ) = 0;
    virtual HRESULT __stdcall GetDefinition (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDefinition (
        struct IAttributeDef * * retval ) = 0;
    virtual HRESULT __stdcall GetName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetEntityState (
        long whichState,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetComponent (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetComponent (
        struct IComponent * * retval ) = 0;
    virtual HRESULT __stdcall IGetComponent2 (
        struct IComponent2 * * retval ) = 0;
    virtual HRESULT __stdcall GetEntity2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetEntity2 (
        struct IEntity * * retval ) = 0;
    virtual HRESULT __stdcall GetBody (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall Delete (
        VARIANT_BOOL buildTree,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33d69-27c5-11ce-bfd4-00400513bb57"))
IParameter : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetDoubleValue (
        double * retval ) = 0;
    virtual HRESULT __stdcall SetDoubleValue (
        double Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetType (
        long * optionValue ) = 0;
    virtual HRESULT __stdcall GetName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetOption (
        long whichOption,
        long * optionValue ) = 0;
    virtual HRESULT __stdcall SetOption (
        long whichOption,
        long optionValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetStringValue (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetStringValue (
        BSTR StringValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetVector (
        double * x,
        double * y,
        double * z ) = 0;
    virtual HRESULT __stdcall SetVector (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetVectorVB (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall SetDoubleValue2 (
        double Value,
        long configurationOption,
        BSTR configurationName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetStringValue2 (
        BSTR StringValue,
        long configurationOption,
        BSTR configurationName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetVector2 (
        double x,
        double y,
        double z,
        long configurationOption,
        BSTR configurationName,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33da3-27c5-11ce-bfd4-00400513bb57"))
IReferenceCurve : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetSegmentCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFirstSegment (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstSegment (
        struct IEdge * * retval ) = 0;
    virtual HRESULT __stdcall GetNextSegment (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextSegment (
        struct IEdge * * retval ) = 0;
    virtual HRESULT __stdcall SetColor (
        long colorIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetVisible (
        VARIANT_BOOL Visible,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33da5-27c5-11ce-bfd4-00400513bb57"))
IColorTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetNameAtIndex (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetColorRefAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetStandardCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetColorRefAtIndex (
        long index,
        long colorRef,
        int applyTo ) = 0;
    virtual HRESULT __stdcall GetBasicColorCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetBasicColors (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetBasicColors (
        long ColorCount,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetCustomColorCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetCustomColors (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCustomColors (
        long ColorCount,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetCustomColor (
        long index,
        long colorRef,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33da9-27c5-11ce-bfd4-00400513bb57"))
IAnnotation : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayData (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDisplayData (
        struct IDisplayData * * retval ) = 0;
    virtual HRESULT __stdcall GetType (
        long * type ) = 0;
    virtual HRESULT __stdcall GetSpecificAnnotation (
        IDispatch * * specific ) = 0;
    virtual HRESULT __stdcall IGetSpecificAnnotation (
        IUnknown * * specific ) = 0;
    virtual HRESULT __stdcall GetPosition (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetPosition (
        double * retval ) = 0;
    virtual HRESULT __stdcall SetPosition (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderPointsAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLeaderPointsAtIndex (
        long index,
        long PointCount,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadStyleAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetArrowHeadStyleAtIndex (
        long index,
        long arrowHeadStyle,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLeader (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBentLeader (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderSide (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSmartArrowHeadStyle (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetLeader (
        VARIANT_BOOL leader,
        long leaderSide,
        VARIANT_BOOL smartArrowHeadStyle,
        VARIANT_BOOL bentLeader,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetName (
        BSTR nameIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetVisualProperties (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetVisualProperties (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Layer (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Layer (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_LayerOverride (
        int * retval ) = 0;
    virtual HRESULT __stdcall put_LayerOverride (
        int retval ) = 0;
    virtual HRESULT __stdcall get_Color (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Color (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Style (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Style (
        long retval ) = 0;
    virtual HRESULT __stdcall get_width (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_width (
        long retval ) = 0;
    virtual HRESULT __stdcall IGetAttachedEntityCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetAttachedEntities (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetAttachedEntities (
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall GetAttachedEntityTypes (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetAttachedEntityTypes (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetNext2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext2 (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall get_Visible (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Visible (
        long retval ) = 0;
    virtual HRESULT __stdcall GetTextFormatCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetUseDocTextFormat (
        long index,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTextFormat (
        long index,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetTextFormat (
        long index,
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetTextFormat (
        long index,
        VARIANT_BOOL useDoc,
        IDispatch * textFormat,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetTextFormat (
        long index,
        VARIANT_BOOL useDoc,
        struct ITextFormat * textFormat,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderPerpendicular (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderAllAround (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetLeader2 (
        VARIANT_BOOL leader,
        long leaderSide,
        VARIANT_BOOL smartArrowHeadStyle,
        VARIANT_BOOL bentLeader,
        VARIANT_BOOL perpendicular,
        VARIANT_BOOL allAround,
        long * retval ) = 0;
    virtual HRESULT __stdcall Select (
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SelectByMark (
        VARIANT_BOOL appendFlag,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Select2 (
        VARIANT_BOOL Append,
        long mark,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33d9c-27c5-11ce-bfd4-00400513bb57"))
IDisplayData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetTextCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextAtIndex (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetTextHeightAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextPositionAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTextPositionAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextAngleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextInvertAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextFontAtIndex (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLineAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArcAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTriangleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetPolyLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPolylineSizeAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPolylineAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetPolylineAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEllipseCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetEllipseAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEllipseAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextLineSpacingAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetLineAtIndex2 (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLineAtIndex2 (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcAtIndex2 (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcAtIndex2 (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetPolylineSizeAtIndex2 (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPolylineAtIndex2 (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetPolylineAtIndex2 (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEllipseAtIndex2 (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEllipseAtIndex2 (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall Dummy1 ( ) = 0;
    virtual HRESULT __stdcall Dummy2 ( ) = 0;
    virtual HRESULT __stdcall Dummy3 ( ) = 0;
    virtual HRESULT __stdcall Dummy4 ( ) = 0;
    virtual HRESULT __stdcall GetParabolaCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetParabolaAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetParabolaAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetPolygonCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPolygonSizeAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPolygonAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetPolygonAtIndex (
        long index,
        double * retval ) = 0;
};

struct __declspec(uuid("83a33db9-27c5-11ce-bfd4-00400513bb57"))
ITextFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetAllValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetAllValues (
        long count,
        double * retval ) = 0;
    virtual HRESULT __stdcall get_italic (
        VARIANT_BOOL * italic ) = 0;
    virtual HRESULT __stdcall put_italic (
        VARIANT_BOOL italic ) = 0;
    virtual HRESULT __stdcall get_underline (
        VARIANT_BOOL * underline ) = 0;
    virtual HRESULT __stdcall put_underline (
        VARIANT_BOOL underline ) = 0;
    virtual HRESULT __stdcall get_Strikeout (
        VARIANT_BOOL * Strikeout ) = 0;
    virtual HRESULT __stdcall put_Strikeout (
        VARIANT_BOOL Strikeout ) = 0;
    virtual HRESULT __stdcall get_bold (
        VARIANT_BOOL * bold ) = 0;
    virtual HRESULT __stdcall put_bold (
        VARIANT_BOOL bold ) = 0;
    virtual HRESULT __stdcall get_Escapement (
        double * Escapement ) = 0;
    virtual HRESULT __stdcall put_Escapement (
        double Escapement ) = 0;
    virtual HRESULT __stdcall get_LineSpacing (
        double * spacing ) = 0;
    virtual HRESULT __stdcall put_LineSpacing (
        double spacing ) = 0;
    virtual HRESULT __stdcall get_CharHeight (
        double * height ) = 0;
    virtual HRESULT __stdcall put_CharHeight (
        double height ) = 0;
    virtual HRESULT __stdcall get_CharHeightInPts (
        int * height ) = 0;
    virtual HRESULT __stdcall put_CharHeightInPts (
        int height ) = 0;
    virtual HRESULT __stdcall IsHeightSpecifiedInPts (
        VARIANT_BOOL * inPts ) = 0;
    virtual HRESULT __stdcall get_TypeFaceName (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_TypeFaceName (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_WidthFactor (
        double * spacing ) = 0;
    virtual HRESULT __stdcall put_WidthFactor (
        double spacing ) = 0;
    virtual HRESULT __stdcall get_ObliqueAngle (
        double * ObliqueAngle ) = 0;
    virtual HRESULT __stdcall put_ObliqueAngle (
        double ObliqueAngle ) = 0;
    virtual HRESULT __stdcall get_LineLength (
        double * LineLength ) = 0;
    virtual HRESULT __stdcall put_LineLength (
        double LineLength ) = 0;
    virtual HRESULT __stdcall get_Vertical (
        VARIANT_BOOL * Vertical ) = 0;
    virtual HRESULT __stdcall put_Vertical (
        VARIANT_BOOL Vertical ) = 0;
    virtual HRESULT __stdcall get_BackWards (
        VARIANT_BOOL * BackWards ) = 0;
    virtual HRESULT __stdcall put_BackWards (
        VARIANT_BOOL BackWards ) = 0;
    virtual HRESULT __stdcall get_UpsideDown (
        VARIANT_BOOL * UpsideDown ) = 0;
    virtual HRESULT __stdcall put_UpsideDown (
        VARIANT_BOOL UpsideDown ) = 0;
    virtual HRESULT __stdcall get_CharSpacingFactor (
        double * factor ) = 0;
    virtual HRESULT __stdcall put_CharSpacingFactor (
        double factor ) = 0;
};

struct __declspec(uuid("83a33db1-27c5-11ce-bfd4-00400513bb57"))
IEnumModelViews : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct IModelView * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumModelViews * * ppenum ) = 0;
};

struct __declspec(uuid("83a33db7-27c5-11ce-bfd4-00400513bb57"))
IDetailingDefaults : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetAllValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetAllValues (
        long count,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextFormat (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetTextFormat (
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetTextFormat (
        IDispatch * textFormat ) = 0;
    virtual HRESULT __stdcall ISetTextFormat (
        struct ITextFormat * textFormat ) = 0;
    virtual HRESULT __stdcall GetDimensionTextFormat (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionTextFormat (
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetDimensionTextFormat (
        IDispatch * textFormat ) = 0;
    virtual HRESULT __stdcall ISetDimensionTextFormat (
        struct ITextFormat * textFormat ) = 0;
    virtual HRESULT __stdcall GetSectionTextFormat (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSectionTextFormat (
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetSectionTextFormat (
        IDispatch * textFormat ) = 0;
    virtual HRESULT __stdcall ISetSectionTextFormat (
        struct ITextFormat * textFormat ) = 0;
    virtual HRESULT __stdcall GetDetailTextFormat (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDetailTextFormat (
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetDetailTextFormat (
        IDispatch * textFormat ) = 0;
    virtual HRESULT __stdcall ISetDetailTextFormat (
        struct ITextFormat * textFormat ) = 0;
};

struct __declspec(uuid("75173e30-f19e-11d2-b8e9-00c04f8ef738"))
ILayerMgr : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddLayer (
        BSTR nameIn,
        BSTR descIn,
        long colorIn,
        long styleIn,
        long widthIn,
        int * retval ) = 0;
    virtual HRESULT __stdcall SetCurrentLayer (
        BSTR nameIn,
        int * retval ) = 0;
    virtual HRESULT __stdcall GetCurrentLayer (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetLayer (
        BSTR nameIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetLayer (
        BSTR nameIn,
        struct ILayer * * retval ) = 0;
    virtual HRESULT __stdcall GetCount (
        int * retval ) = 0;
    virtual HRESULT __stdcall GetLayerList (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLayerList (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetLayerById (
        short layerId,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetLayerById (
        short layerId,
        struct ILayer * * retval ) = 0;
    virtual HRESULT __stdcall DeleteLayer (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("04b7287c-f19d-11d2-b8e9-00c04f8ef738"))
ILayer : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_Color (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Style (
        int * retval ) = 0;
    virtual HRESULT __stdcall get_width (
        int * retval ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_Description (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Description (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall GetId (
        long * retval ) = 0;
};

struct __declspec(uuid("ce1eaa88-25ad-11d3-ae91-00c04f683cba"))
IDesignTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetRowCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetColumnCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetHeaderText (
        long col,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetEntryText (
        long row,
        long col,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall Attach (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Detach ( ) = 0;
    virtual HRESULT __stdcall GetEntryValue (
        long row,
        long col,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetTitle (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetTotalRowCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTotalColumnCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetVisibleRowCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetVisibleColumnCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetEntryText (
        long row,
        long col,
        BSTR textIn ) = 0;
    virtual HRESULT __stdcall AddRow (
        VARIANT cellValues,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall UpdateModel (
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33d84-27c5-11ce-bfd4-00400513bb57"))
IRefPlane : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetRefPlaneParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetRefPlaneParams (
        double * retval ) = 0;
};

struct __declspec(uuid("83a33d90-27c5-11ce-bfd4-00400513bb57"))
IDatumTag : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct IDatumTag * * retval ) = 0;
    virtual HRESULT __stdcall GetTextCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextAtIndex (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetTextHeightAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextPositionAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTextPositionAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextAngleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextInvertAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLineAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArcAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTriangleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall GetLabel (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetLabel (
        BSTR Label,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_FilledTriangle (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_FilledTriangle (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_Shoulder (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Shoulder (
        VARIANT_BOOL retval ) = 0;
};

struct __declspec(uuid("83a33d4a-27c5-11ce-bfd4-00400513bb57"))
IGtol : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall SetFrameValues (
        short frameNumber,
        BSTR tol1,
        BSTR tol2,
        BSTR datum1,
        BSTR datum2,
        BSTR datum3 ) = 0;
    virtual HRESULT __stdcall SetFrameSymbols (
        short frameNumber,
        short GCS,
        VARIANT_BOOL tolDia1,
        short tolMC1,
        VARIANT_BOOL tolDia2,
        short tolMC2,
        short datumMC1,
        short datumMC2,
        short datumMC3 ) = 0;
    virtual HRESULT __stdcall SetPTZHeight (
        BSTR ptzHt,
        VARIANT_BOOL displayIn ) = 0;
    virtual HRESULT __stdcall SetDatumIdentifier (
        BSTR datumIdentifier ) = 0;
    virtual HRESULT __stdcall GetNextGTOL (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextGTOL (
        struct IGtol * * retval ) = 0;
    virtual HRESULT __stdcall GetFrameValues (
        short frameNumber,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetFrameSymbols (
        short frameNumber,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetPTZHeight (
        BSTR * ptzHt ) = 0;
    virtual HRESULT __stdcall GetDatumIdentifier (
        BSTR * datumIdentifier ) = 0;
    virtual HRESULT __stdcall GetHeight (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetAttachPos (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetFontInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IsAttached (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall HasExtraLeader (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Dummy1 ( ) = 0;
    virtual HRESULT __stdcall Dummy2 ( ) = 0;
    virtual HRESULT __stdcall GetTextPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetAttachPos (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetFontInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetLeaderInfo (
        long * PointCount,
        double * retval ) = 0;
    virtual HRESULT __stdcall Dummy3 ( ) = 0;
    virtual HRESULT __stdcall IGetTextPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSymName (
        short symIdx,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetSymDesc (
        short symIdx,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetSymText (
        short symIdx,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetSymEdgeCounts (
        short symIdx,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetSymLines (
        short symIdx,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetSymArcs (
        short symIdx,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetSymCircles (
        short symIdx,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetSymTextPoints (
        short symIdx,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSymEdgeCounts (
        short symIdx,
        short * retval ) = 0;
    virtual HRESULT __stdcall IGetSymLines (
        short symIdx,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetSymArcs (
        short symIdx,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetSymCircles (
        short symIdx,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetSymTextPoints (
        short symIdx,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextAtIndex (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetTextHeightAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextPositionAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTextPositionAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextAngleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextInvertAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLineAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArcAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTriangleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetFrameValues (
        short frameNumber,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetFrameSymbols (
        short frameNumber,
        short * retval ) = 0;
    virtual HRESULT __stdcall IGetSymText (
        short symIdx,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetFrameSymbols2 (
        short frameNumber,
        BSTR GCS,
        VARIANT_BOOL tolDia1,
        BSTR tolMC1,
        VARIANT_BOOL tolDia2,
        BSTR tolMC2,
        BSTR datumMC1,
        BSTR datumMC2,
        BSTR datumMC3 ) = 0;
    virtual HRESULT __stdcall GetTextFont (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLeaderAtIndex (
        long index,
        long * PointCount,
        double * retval ) = 0;
    virtual HRESULT __stdcall SetPosition (
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall GetUseDocTextFormat (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTextFormat (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetTextFormat (
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetTextFormat (
        long textFormatType,
        IDispatch * textFormat,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetTextFormat (
        long textFormatType,
        struct ITextFormat * textFormat,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetCompositeFrame (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetCompositeFrame (
        VARIANT_BOOL composite ) = 0;
    virtual HRESULT __stdcall GetBetweenTwoPoints (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBetweenTwoPointsText (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetBetweenTwoPoints (
        VARIANT_BOOL between,
        BSTR textFrom,
        BSTR textTo ) = 0;
    virtual HRESULT __stdcall GetAllAround (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderSide (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetLeader (
        VARIANT_BOOL leader,
        long leaderSide,
        VARIANT_BOOL bentLeader,
        VARIANT_BOOL allAround ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall GetFrameSymbols2 (
        short frameNumber,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetFrameSymbols2 (
        short frameNumber,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetFrameDiameterSymbols (
        short frameNumber,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetFrameDiameterSymbols (
        short frameNumber,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetFrameCount (
        short * retval ) = 0;
};

struct __declspec(uuid("83a33d55-27c5-11ce-bfd4-00400513bb57"))
INote : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct INote * * retval ) = 0;
    virtual HRESULT __stdcall GetText (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetHeight (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetAttachPos (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetFontInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IsAttached (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall HasExtraLeader (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall HasBalloon (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBalloonInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetTextPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetAttachPos (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetFontInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetLeaderInfo (
        long * PointCount,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetBalloonInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetTextPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetUpperRight (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetUpperRight (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetExtent (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetExtent (
        double * retval ) = 0;
    virtual HRESULT __stdcall IsCompoundNote (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddText (
        BSTR txt,
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTextCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextAtIndex (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetHeightAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextOffsetAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTextOffsetAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall BeginSketchEdit ( ) = 0;
    virtual HRESULT __stdcall EndSketchEdit ( ) = 0;
    virtual HRESULT __stdcall GetExtentAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetExtentAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall SetTextOffsetAtIndex (
        long index,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall GetSketch (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSketch (
        struct ISketch * * retval ) = 0;
    virtual HRESULT __stdcall SetTextAtIndex (
        long index,
        BSTR txt,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetText (
        BSTR txt,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetZeroLengthLeader (
        VARIANT_BOOL flag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetHeight (
        double heightIn ) = 0;
    virtual HRESULT __stdcall GetHeightInPoints (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetHeightInPoints (
        long heightIn ) = 0;
    virtual HRESULT __stdcall GetName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetName (
        BSTR nameIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTextHeightAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextPositionAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTextPositionAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextAngleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextInvertAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLineAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArcAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTriangleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextFontAtIndex (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetTextPoint (
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall GetTextLineSpacingAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLeaderAtIndex (
        long index,
        long * PointCount,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextFormat (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetTextFormat (
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetTextFormat (
        long textFormatType,
        IDispatch * textFormat,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetTextFormat (
        long textFormatType,
        struct ITextFormat * textFormat,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTextFormatAtIndex (
        long index,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetTextFormatAtIndex (
        long index,
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetTextFormatAtIndex (
        long index,
        IDispatch * textFormat ) = 0;
    virtual HRESULT __stdcall ISetTextFormatAtIndex (
        long index,
        struct ITextFormat * textFormat ) = 0;
    virtual HRESULT __stdcall GetTextJustification (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetTextJustification (
        long justification ) = 0;
    virtual HRESULT __stdcall GetTextJustificationAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetTextJustificationAtIndex (
        long index,
        long justification ) = 0;
    virtual HRESULT __stdcall GetUseDocTextFormat (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetHyperlinkText (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetHyperlinkText (
        BSTR text,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall get_angle (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_angle (
        double retval ) = 0;
    virtual HRESULT __stdcall GetBalloonStyle (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetBalloonSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetBalloon (
        long Style,
        long size,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IGetTextTokenCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextTokens (
        VARIANT * positions,
        VARIANT * widths,
        VARIANT * heights,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTextTokens (
        double * positions,
        double * widths,
        double * heights,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IsBomBalloon (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBomBalloonTextStyle (
        VARIANT_BOOL whichOne,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetBomBalloonText (
        VARIANT_BOOL whichOne,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetBomBalloonText (
        long upperTextStyle,
        BSTR upperText,
        long lowerTextStyle,
        BSTR lowerText,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_ReadOnly (
        VARIANT_BOOL * ReadOnlyOut ) = 0;
    virtual HRESULT __stdcall put_ReadOnly (
        VARIANT_BOOL ReadOnlyOut ) = 0;
    virtual HRESULT __stdcall get_PromptText (
        BSTR * PromptTextOut ) = 0;
    virtual HRESULT __stdcall put_PromptText (
        BSTR PromptTextOut ) = 0;
    virtual HRESULT __stdcall get_TagName (
        BSTR * TagNameOut ) = 0;
    virtual HRESULT __stdcall put_TagName (
        BSTR TagNameOut ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * VisibleOut ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL VisibleOut ) = 0;
    virtual HRESULT __stdcall IsAttribute (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsStackedBalloon (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsStackedBalloonMaster (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBalloonStack (
        struct IBalloonStack * * retval ) = 0;
};

struct __declspec(uuid("4944f9e6-bf50-11d5-af56-00c04f603faf"))
IBalloonStack : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Master (
        struct INote * * Master ) = 0;
    virtual HRESULT __stdcall get_count (
        long * count ) = 0;
    virtual HRESULT __stdcall get_Stack (
        VARIANT * Stack ) = 0;
    virtual HRESULT __stdcall IGetStack (
        long count,
        struct INote * * retval ) = 0;
    virtual HRESULT __stdcall get_length (
        long * length ) = 0;
    virtual HRESULT __stdcall put_length (
        long length ) = 0;
    virtual HRESULT __stdcall get_direction (
        long * direction ) = 0;
    virtual HRESULT __stdcall put_direction (
        long direction ) = 0;
    virtual HRESULT __stdcall AddTo (
        long upperTextStyle,
        BSTR upperText,
        long lowerTextStyle,
        BSTR lowerText,
        struct INote * * retval ) = 0;
};

struct __declspec(uuid("e981b4fa-7e86-11d4-aef2-00c04f603faf"))
IPropertyManagerPage : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall SetButtons (
        long ButtonTypes,
        long * status ) = 0;
    virtual HRESULT __stdcall SetGroupRange (
        long FirstGroupId,
        long FirstCheckId,
        long GroupCount,
        long * status ) = 0;
    virtual HRESULT __stdcall Show (
        long * status ) = 0;
    virtual HRESULT __stdcall GetDialogWindow (
        long * status,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetGroupVisible (
        long GroupId,
        long * status,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetGroupVisible (
        long GroupId,
        VARIANT_BOOL Visible,
        long * status ) = 0;
    virtual HRESULT __stdcall GetGroupExpanded (
        long GroupId,
        long * status,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetGroupExpanded (
        long GroupId,
        VARIANT_BOOL Expanded,
        long * status ) = 0;
};

struct __declspec(uuid("83a33da1-27c5-11ce-bfd4-00400513bb57"))
IDisplayDimension : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayData (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDisplayData (
        struct IDisplayData * * retval ) = 0;
    virtual HRESULT __stdcall get_WitnessVisibility (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_WitnessVisibility (
        long retval ) = 0;
    virtual HRESULT __stdcall get_LeaderVisibility (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_LeaderVisibility (
        long retval ) = 0;
    virtual HRESULT __stdcall get_BrokenLeader (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_BrokenLeader (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_SmartWitness (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_SmartWitness (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_ShowParenthesis (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_ShowParenthesis (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_ArrowSide (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_ArrowSide (
        long retval ) = 0;
    virtual HRESULT __stdcall get_ShowDimensionValue (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_ShowDimensionValue (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall GetText (
        long whichText,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetText (
        long whichText,
        BSTR text ) = 0;
    virtual HRESULT __stdcall GetDimension (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDimension (
        struct IDimension * * retval ) = 0;
    virtual HRESULT __stdcall GetUseDocTextFormat (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTextFormat (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetTextFormat (
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetTextFormat (
        long textFormatType,
        IDispatch * textFormat,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetTextFormat (
        long textFormatType,
        struct ITextFormat * textFormat,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall get_SolidLeader (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_SolidLeader (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_Diametric (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Diametric (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_DisplayAsLinear (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_DisplayAsLinear (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall GetUseDocSecondArrow (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetSecondArrow (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetSecondArrow (
        VARIANT_BOOL useDoc,
        VARIANT_BOOL secondArrow ) = 0;
    virtual HRESULT __stdcall get_ShortenedRadius (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_ShortenedRadius (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_DimensionToInside (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_DimensionToInside (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall GetUseDocDual (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetDual (
        VARIANT_BOOL useDoc ) = 0;
    virtual HRESULT __stdcall GetUseDocArrowHeadStyle (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadStyle (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetArrowHeadStyle (
        VARIANT_BOOL useDoc,
        long arrowHeadStyle ) = 0;
    virtual HRESULT __stdcall get_centerText (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_centerText (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_Inspection (
        VARIANT_BOOL * Inspection ) = 0;
    virtual HRESULT __stdcall put_Inspection (
        VARIANT_BOOL Inspection ) = 0;
    virtual HRESULT __stdcall GetUseDocPrecision (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetPrimaryPrecision (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetAlternatePrecision (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPrimaryTolPrecision (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetAlternateTolPrecision (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetPrecision (
        VARIANT_BOOL useDoc,
        long primary,
        long alternate,
        long primaryTol,
        long alternateTol,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetAutoArcLengthLeader (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetArcLengthLeader (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetArcLengthLeader (
        VARIANT_BOOL autoLeader,
        long leaderType,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetUseDocUnits (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetUnits (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFractionBase (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFractionValue (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetRoundToFraction (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetUnits (
        VARIANT_BOOL useDoc,
        long uType,
        long fractBase,
        long fractDenom,
        VARIANT_BOOL roundToFraction,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetUseDocBrokenLeader (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBrokenLeader2 (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetBrokenLeader2 (
        VARIANT_BOOL useDoc,
        long broken,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetNext2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext2 (
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall GetType (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Scale2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Scale2 (
        double retval ) = 0;
    virtual HRESULT __stdcall get_DisplayAsChain (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_DisplayAsChain (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall GetNext3 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext3 (
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall AddDisplayEnt (
        int type,
        VARIANT data,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IAddDisplayEnt (
        int type,
        double * data,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddDisplayText (
        BSTR text,
        VARIANT position,
        IDispatch * format,
        int attachment,
        double WidthFactor,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IAddDisplayText (
        BSTR text,
        double * position,
        struct ITextFormat * format,
        int attachment,
        double WidthFactor,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Jogged (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Jogged (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall AutoJogOrdinate (
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("82071121-8b32-4f51-8983-9304756503e7"))
IUserUnit : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_FractionBase (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_FractionBase (
        long Value ) = 0;
    virtual HRESULT __stdcall get_FractionValue (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_FractionValue (
        long Value ) = 0;
    virtual HRESULT __stdcall get_roundToFraction (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_roundToFraction (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_SignificantDigits (
        long * numDigits ) = 0;
    virtual HRESULT __stdcall put_SignificantDigits (
        long numDigits ) = 0;
    virtual HRESULT __stdcall get_DisplayLeadingZero (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_DisplayLeadingZero (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_PadZero (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_PadZero (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_SeparatorCharacter (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_SeparatorCharacter (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall GetConversionFactor (
        double * conversionFactor ) = 0;
    virtual HRESULT __stdcall IsMetric (
        VARIANT_BOOL * metric ) = 0;
    virtual HRESULT __stdcall GetFullUnitName (
        VARIANT_BOOL plural,
        BSTR * unitName ) = 0;
    virtual HRESULT __stdcall ConvertToUserUnit (
        double valueIn,
        VARIANT_BOOL showUsernames,
        VARIANT_BOOL nameInEnglish,
        BSTR * OutputString ) = 0;
    virtual HRESULT __stdcall ConvertToSystemValue (
        BSTR unitText,
        double * computedValue,
        VARIANT_BOOL * status ) = 0;
    virtual HRESULT __stdcall ConvertDoubleToSystemValue (
        double userValue,
        double * SystemValue ) = 0;
    virtual HRESULT __stdcall GetUnitsString (
        VARIANT_BOOL inEnglish,
        BSTR * unitString ) = 0;
    virtual HRESULT __stdcall get_UnitType (
        long * UnitType ) = 0;
    virtual HRESULT __stdcall get_SpecificUnitType (
        long * SpecificUnitType ) = 0;
    virtual HRESULT __stdcall put_SpecificUnitType (
        long SpecificUnitType ) = 0;
    virtual HRESULT __stdcall GetUserAngleTolerance (
        double * angleTolerance ) = 0;
};

struct __declspec(uuid("83a33d94-27c5-11ce-bfd4-00400513bb57"))
IWeldSymbol : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct IWeldSymbol * * retval ) = 0;
    virtual HRESULT __stdcall GetTextCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextAtIndex (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetTextHeightAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextPositionAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTextPositionAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextAngleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextInvertAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLineAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArcAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTriangleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall IsAttached (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall HasExtraLeader (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLeaderAtIndex (
        long index,
        long * PointCount,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall GetText (
        long whichText,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetContour (
        VARIANT_BOOL top,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSymmetric (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPeripheral (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetFieldWeld (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetProcess (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetProcessReference (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetStagger (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetText (
        VARIANT_BOOL top,
        BSTR left,
        BSTR symbol,
        BSTR right,
        BSTR stagger,
        long contour,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetSymmetric (
        long symmetric,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetPeripheral (
        VARIANT_BOOL peripheral,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetFieldWeld (
        long fieldWeld,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetProcess (
        VARIANT_BOOL process,
        BSTR text,
        VARIANT_BOOL reference,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetStagger (
        VARIANT_BOOL stagger,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33dc5-27c5-11ce-bfd4-00400513bb57"))
ISketchText : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall EnumEdges (
        struct IEnumEdges * * retval ) = 0;
    virtual HRESULT __stdcall get_text (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_text (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall GetCoordinates (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCoordinates (
        double * retval ) = 0;
    virtual HRESULT __stdcall SetCoordinates (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetUseDocTextFormat (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTextFormat (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetTextFormat (
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetTextFormat (
        VARIANT_BOOL useDoc,
        IDispatch * textFormat,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetTextFormat (
        VARIANT_BOOL useDoc,
        struct ITextFormat * textFormat,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("02272ce8-fe52-4b94-b120-6d1826fdbe32"))
IEquationMgr : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Suppression (
        long index,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Suppression (
        long index,
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall Add (
        long index,
        BSTR equation,
        long * retval ) = 0;
    virtual HRESULT __stdcall Delete (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall ChangeSuppressionForAllConfigurations (
        long index,
        VARIANT_BOOL state,
        long * retval ) = 0;
    virtual HRESULT __stdcall ChangeSuppressionForConfiguration (
        long index,
        BSTR configName,
        VARIANT_BOOL state,
        long * retval ) = 0;
    virtual HRESULT __stdcall get_status (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_Value (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall get_equation (
        long index,
        BSTR * equation ) = 0;
    virtual HRESULT __stdcall put_equation (
        long index,
        BSTR equation ) = 0;
    virtual HRESULT __stdcall GetCount (
        long * retval ) = 0;
};

struct __declspec(uuid("931374cc-ce0e-11d5-af59-00c04f603faf"))
IPageSetup : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ScaleToFit (
        VARIANT_BOOL * Fit ) = 0;
    virtual HRESULT __stdcall put_ScaleToFit (
        VARIANT_BOOL Fit ) = 0;
    virtual HRESULT __stdcall get_Scale2 (
        double * Scale ) = 0;
    virtual HRESULT __stdcall put_Scale2 (
        double Scale ) = 0;
    virtual HRESULT __stdcall get_Orientation (
        long * Orientation ) = 0;
    virtual HRESULT __stdcall put_Orientation (
        long Orientation ) = 0;
    virtual HRESULT __stdcall get_LeftHeader (
        BSTR * Header ) = 0;
    virtual HRESULT __stdcall put_LeftHeader (
        BSTR Header ) = 0;
    virtual HRESULT __stdcall get_CenterHeader (
        BSTR * Header ) = 0;
    virtual HRESULT __stdcall put_CenterHeader (
        BSTR Header ) = 0;
    virtual HRESULT __stdcall get_RightHeader (
        BSTR * Header ) = 0;
    virtual HRESULT __stdcall put_RightHeader (
        BSTR Header ) = 0;
    virtual HRESULT __stdcall SetHeader (
        BSTR left,
        BSTR center,
        BSTR right,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_LeftFooter (
        BSTR * Footer ) = 0;
    virtual HRESULT __stdcall put_LeftFooter (
        BSTR Footer ) = 0;
    virtual HRESULT __stdcall get_CenterFooter (
        BSTR * Footer ) = 0;
    virtual HRESULT __stdcall put_CenterFooter (
        BSTR Footer ) = 0;
    virtual HRESULT __stdcall get_RightFooter (
        BSTR * Footer ) = 0;
    virtual HRESULT __stdcall put_RightFooter (
        BSTR Footer ) = 0;
    virtual HRESULT __stdcall SetFooter (
        BSTR left,
        BSTR center,
        BSTR right,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_HeaderTextFormat (
        struct ITextFormat * * textFormat ) = 0;
    virtual HRESULT __stdcall get_FooterTextFormat (
        struct ITextFormat * * textFormat ) = 0;
    virtual HRESULT __stdcall GetHeaderFooterString (
        long whichOne,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_UsePageSetupOnSheets (
        VARIANT_BOOL * UseSheet ) = 0;
    virtual HRESULT __stdcall put_UsePageSetupOnSheets (
        VARIANT_BOOL UseSheet ) = 0;
    virtual HRESULT __stdcall get_PrinterPaperSize (
        long * size ) = 0;
    virtual HRESULT __stdcall put_PrinterPaperSize (
        long size ) = 0;
    virtual HRESULT __stdcall get_PrinterPaperLength (
        long * length ) = 0;
    virtual HRESULT __stdcall put_PrinterPaperLength (
        long length ) = 0;
    virtual HRESULT __stdcall get_PrinterPaperWidth (
        long * width ) = 0;
    virtual HRESULT __stdcall put_PrinterPaperWidth (
        long width ) = 0;
    virtual HRESULT __stdcall get_PrinterPaperSource (
        long * Source ) = 0;
    virtual HRESULT __stdcall put_PrinterPaperSource (
        long Source ) = 0;
};

struct __declspec(uuid("6b39655e-381b-4bd0-89f5-640d48593f15"))
IFeatureManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall CreateCustomBendAllowance (
        struct ICustomBendAllowance * * pCBA ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalBaseFlange (
        double thickness,
        VARIANT_BOOL thickenDir,
        double radius,
        double extrudeDist1,
        double extrudeDist2,
        VARIANT_BOOL flipExtruDir,
        long endCondition1,
        long endCondition2,
        long dirToUse,
        struct ICustomBendAllowance * pCBA,
        VARIANT_BOOL useDefaultRelief,
        long reliefType,
        double reliefWidth,
        double reliefDepth,
        double releifRatio,
        VARIANT_BOOL useReleifRatio,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall InsertDeleteBody (
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall FeatureExtrusion (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL translateSurface1,
        VARIANT_BOOL translateSurface2,
        VARIANT_BOOL merge,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * pFeat ) = 0;
    virtual HRESULT __stdcall FeatureExtrusionThin (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL translateSurface1,
        VARIANT_BOOL translateSurface2,
        VARIANT_BOOL merge,
        double thk1,
        double thk2,
        double endThk,
        long revThinDir,
        long capEnds,
        VARIANT_BOOL addBends,
        double bendRad,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * pFeat ) = 0;
    virtual HRESULT __stdcall FeatureCut (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL translateSurface1,
        VARIANT_BOOL translateSurface2,
        VARIANT_BOOL normalCut,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * pFeat ) = 0;
    virtual HRESULT __stdcall FeatureCutThin (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL translateSurface1,
        VARIANT_BOOL translateSurface2,
        double thk1,
        double thk2,
        double endThk,
        long revThinDir,
        long capEnds,
        VARIANT_BOOL addBends,
        double bendRad,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * pFeat ) = 0;
    virtual HRESULT __stdcall FeatureRevolve (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType,
        long options,
        VARIANT_BOOL merge,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSel,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall FeatureRevolveCut (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType,
        long options,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall FeatureRevolveThin (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType,
        double thickness1,
        double thickness2,
        long reverseThinDir,
        VARIANT_BOOL merge,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall FeatureRevolveThinCut (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType,
        double thickness1,
        double thickness2,
        long reverseThinDir,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall FeatureBossThicken (
        double thickness,
        long direction,
        long faceIndex,
        VARIANT_BOOL fillVolume,
        VARIANT_BOOL merge,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall FeatureCutThicken (
        double thickness,
        long direction,
        long faceIndex,
        VARIANT_BOOL fillVolume,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall InsertProtrusionSwept (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        short startMatchingType,
        short endMatchingType,
        VARIANT_BOOL isThinBody,
        double thickness1,
        double thickness2,
        short thinType,
        VARIANT_BOOL merge,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall InsertCutSwept (
        VARIANT_BOOL propagate,
        VARIANT_BOOL alignment,
        short twistCtrlOption,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        short startMatchingType,
        short endMatchingType,
        VARIANT_BOOL isThinBody,
        double thickness1,
        double thickness2,
        short thinType,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall InsertProtrusionBlend (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        double tessToleranceFactor,
        short startMatchingType,
        short endMatchingType,
        double startTangentLength,
        double endTangentLength,
        VARIANT_BOOL startTangentDir,
        VARIANT_BOOL endTangentDir,
        VARIANT_BOOL isThinBody,
        double thickness1,
        double thickness2,
        short thinType,
        VARIANT_BOOL merge,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall InsertCutBlend (
        VARIANT_BOOL closed,
        VARIANT_BOOL keepTangency,
        VARIANT_BOOL forceNonRational,
        double tessToleranceFactor,
        short startMatchingType,
        short endMatchingType,
        VARIANT_BOOL isThinBody,
        double thickness1,
        double thickness2,
        short thinType,
        VARIANT_BOOL useFeatScope,
        VARIANT_BOOL useAutoSelect,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall HoleWizard (
        long genericHoleType,
        long standardIndex,
        long fastenerTypeIndex,
        BSTR sSize,
        short endType,
        double diameter,
        double depth,
        double value1,
        double value2,
        double value3,
        double value4,
        double value5,
        double value6,
        double value7,
        double value8,
        double value9,
        double value10,
        double value11,
        double value12,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall InsertMacroFeature (
        BSTR baseName,
        BSTR progId,
        VARIANT macroMethods,
        VARIANT paramNames,
        VARIANT paramTypes,
        VARIANT paramValues,
        struct IBody2 * editBody,
        long options,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall IInsertMacroFeature (
        BSTR baseName,
        BSTR progId,
        BSTR * macroMethods,
        long paramCount,
        BSTR * paramNames,
        long * paramTypes,
        BSTR * paramValues,
        struct IBody2 * editBody,
        long options,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall get_EnableFeatureTree (
        VARIANT_BOOL * pState ) = 0;
    virtual HRESULT __stdcall put_EnableFeatureTree (
        VARIANT_BOOL pState ) = 0;
    virtual HRESULT __stdcall UpdateFeatureTree ( ) = 0;
    virtual HRESULT __stdcall InsertFeatureTreeFolder (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalCornerTrim (
        long internalCornerFlag,
        long breakType,
        double breakDist,
        long reliefType,
        double param,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall get_ShowFeatureName (
        VARIANT_BOOL * showName ) = 0;
    virtual HRESULT __stdcall put_ShowFeatureName (
        VARIANT_BOOL showName ) = 0;
    virtual HRESULT __stdcall get_ShowFeatureDescription (
        VARIANT_BOOL * showDescription ) = 0;
    virtual HRESULT __stdcall put_ShowFeatureDescription (
        VARIANT_BOOL showDescription ) = 0;
    virtual HRESULT __stdcall InsertFillSurface (
        long resolution,
        struct IFeature * * bRet ) = 0;
    virtual HRESULT __stdcall EditRollback (
        long Location,
        BSTR feature,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertSheetMetalLoftedBend (
        long thickDirType,
        double thickness,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall MakeStyledCurves (
        double tol,
        long mode ) = 0;
    virtual HRESULT __stdcall HideBodies ( ) = 0;
    virtual HRESULT __stdcall ShowBodies ( ) = 0;
    virtual HRESULT __stdcall InsertMirrorFeature (
        VARIANT_BOOL bMirrorBody,
        VARIANT_BOOL bGeometryPattern,
        VARIANT_BOOL bMerge,
        VARIANT_BOOL bKnit,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall InsertMoveCopyBody (
        double transX,
        double transY,
        double transZ,
        double transDist,
        double rotPointX,
        double rotPointY,
        double rotPointZ,
        double rotAngleX,
        double rotAngleY,
        double rotAngleZ,
        VARIANT_BOOL bCopy,
        long numCopies,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall get_Document (
        struct IModelDoc2 * * modelDoc ) = 0;
    virtual HRESULT __stdcall InsertCombineFeature (
        long operationType,
        struct IBody2 * mainBody,
        VARIANT toolVar,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall IInsertCombineFeature (
        long operationType,
        struct IBody2 * mainBody,
        long toolsCount,
        struct IBody2 * * toolsArr,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall InsertDwgOrDxfFile (
        BSTR fileName,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall FeatureLinearPattern (
        long num1,
        double spacing1,
        long num2,
        double spacing2,
        VARIANT_BOOL flipDir1,
        VARIANT_BOOL flipDir2,
        BSTR dName1,
        BSTR dName2,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall FeatureCircularPattern (
        long num,
        double spacing,
        VARIANT_BOOL flipDir,
        BSTR dName,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall InsertTableDrivenPattern (
        BSTR fileName,
        VARIANT pointVar,
        VARIANT_BOOL useCentrod,
        VARIANT_BOOL geomPatt,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall IInsertTableDrivenPattern (
        BSTR fileName,
        long count,
        double * pointArr,
        VARIANT_BOOL useCentrod,
        VARIANT_BOOL geomPatt,
        struct IFeature * * retval ) = 0;
};

struct __declspec(uuid("442b6462-0350-4f5c-a168-3f753f6ca792"))
ICustomBendAllowance : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_type (
        long * type ) = 0;
    virtual HRESULT __stdcall put_type (
        long type ) = 0;
    virtual HRESULT __stdcall get_BendTableFile (
        BSTR * BendTableFile ) = 0;
    virtual HRESULT __stdcall put_BendTableFile (
        BSTR BendTableFile ) = 0;
    virtual HRESULT __stdcall get_KFactor (
        double * KFactor ) = 0;
    virtual HRESULT __stdcall put_KFactor (
        double KFactor ) = 0;
    virtual HRESULT __stdcall get_BendAllowance (
        double * BendAllowance ) = 0;
    virtual HRESULT __stdcall put_BendAllowance (
        double BendAllowance ) = 0;
    virtual HRESULT __stdcall get_BendDeduction (
        double * BendDeduction ) = 0;
    virtual HRESULT __stdcall put_BendDeduction (
        double BendDeduction ) = 0;
};

struct __declspec(uuid("1aa249ff-b758-440a-8b88-26512f385bf3"))
IModelViewManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddControl (
        BSTR Name,
        BSTR controlName,
        BSTR bstrLicKey,
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall GetControl (
        BSTR Name,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetControl (
        BSTR Name,
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall DeleteControlTab (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ActivateControlTab (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ActivateModelTab (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsControlTabActive (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsModelTabActive (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateFeatureMgrView (
        IDispatch * pPicture,
        BSTR toolTip,
        long whichPane,
        struct IFeatMgrView * * retval ) = 0;
    virtual HRESULT __stdcall CreateFeatureMgrControl (
        IDispatch * pPicture,
        BSTR Class,
        BSTR LicKey,
        BSTR toolTip,
        long whichPane,
        struct IFeatMgrView * * retval ) = 0;
    virtual HRESULT __stdcall get_Document (
        struct IModelDoc2 * * modelDoc ) = 0;
};

struct __declspec(uuid("99f4d4af-f268-4ee1-8c55-041f7becf879"))
IModelDocExtension : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Document (
        struct IModelDoc2 * * modelDoc ) = 0;
    virtual HRESULT __stdcall GetMassProperties (
        long Accuracy,
        long * status,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMassProperties (
        long Accuracy,
        long * status,
        double * mPropsData ) = 0;
    virtual HRESULT __stdcall InsertDwgOrDxfFile (
        BSTR fileName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall PrintOut (
        long fromPage,
        long toPage,
        long Copies,
        VARIANT_BOOL collate,
        BSTR printer,
        BSTR PrintFileName ) = 0;
    virtual HRESULT __stdcall SelectByID (
        BSTR Name,
        BSTR type,
        double x,
        double y,
        double z,
        VARIANT_BOOL Append,
        long mark,
        struct ICallout * Callout,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IGet3rdPartyStorageStore (
        BSTR subStorageName,
        VARIANT_BOOL isStoring,
        IUnknown * * retval ) = 0;
    virtual HRESULT __stdcall IRelease3rdPartyStorageStore (
        BSTR subStorageName,
        VARIANT_BOOL * status ) = 0;
    virtual HRESULT __stdcall get_UsePageSetup (
        long * whichOne ) = 0;
    virtual HRESULT __stdcall put_UsePageSetup (
        long whichOne ) = 0;
    virtual HRESULT __stdcall get_AppPageSetup (
        struct IPageSetup * * retval ) = 0;
    virtual HRESULT __stdcall GetSectionProperties (
        VARIANT sections,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSectionProperties (
        long count,
        IUnknown * * sections,
        double * retval ) = 0;
};

struct __declspec(uuid("8db64337-f36e-47cc-bbbc-b4b979d31505"))
IConfigurationManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Document (
        struct IModelDoc2 * * modelDoc ) = 0;
    virtual HRESULT __stdcall GetConfigurationParams (
        BSTR configName,
        VARIANT * params,
        VARIANT * values,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IGetConfigurationParams (
        BSTR configName,
        long paramCount,
        BSTR * paramNames,
        BSTR * paramValues,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetConfigurationParamsCount (
        BSTR configName,
        long * retval ) = 0;
};

struct __declspec(uuid("83a33dab-27c5-11ce-bfd4-00400513bb57"))
IEnumDisplayDimensions : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct IDisplayDimension * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumDisplayDimensions * * ppenum ) = 0;
};

struct __declspec(uuid("9a6ad388-3fc9-48de-bfa5-b8953433ab36"))
IEnumLoops2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct ILoop2 * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumLoops2 * * ppenum ) = 0;
};

struct __declspec(uuid("61ecff18-ac2c-405e-b9b8-30d85fdb5087"))
IEnumFaces2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct IFace2 * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumFaces2 * * ppenum ) = 0;
};

struct __declspec(uuid("83a33d32-27c5-11ce-bfd4-00400513bb57"))
IPartDoc : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_MaterialUserName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialUserName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaterialIdName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialIdName (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_MaterialPropertyValues (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_MaterialPropertyValues (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall FirstFeature (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFirstFeature (
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall FeatureByName (
        BSTR Name,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFeatureByName (
        BSTR Name,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall FeatureById (
        long id,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFeatureById (
        long id,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall Body (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IBodyObject (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall Dummy18 ( ) = 0;
    virtual HRESULT __stdcall FeatureExtrusion (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2 ) = 0;
    virtual HRESULT __stdcall FeatureRevolve (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType ) = 0;
    virtual HRESULT __stdcall FeatureRevolveCut (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType ) = 0;
    virtual HRESULT __stdcall GetTessTriangles (
        VARIANT_BOOL noConversion,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetTessNorms (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetProcessedBody (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetProcessedBody (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall GetPartBox (
        VARIANT_BOOL noConversion,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall CreateNewBody (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateNewBody (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall EditRebuild ( ) = 0;
    virtual HRESULT __stdcall Dummy17 ( ) = 0;
    virtual HRESULT __stdcall Dummy19 ( ) = 0;
    virtual HRESULT __stdcall ForceRebuild ( ) = 0;
    virtual HRESULT __stdcall EditUnsuppressDependent ( ) = 0;
    virtual HRESULT __stdcall EditRollforward ( ) = 0;
    virtual HRESULT __stdcall InsertStockTurned ( ) = 0;
    virtual HRESULT __stdcall EditUnsuppress ( ) = 0;
    virtual HRESULT __stdcall MakeSection ( ) = 0;
    virtual HRESULT __stdcall Dumpfacets ( ) = 0;
    virtual HRESULT __stdcall FeatureStock ( ) = 0;
    virtual HRESULT __stdcall EditRollback ( ) = 0;
    virtual HRESULT __stdcall EditSuppress ( ) = 0;
    virtual HRESULT __stdcall AddPropertyExtension (
        VARIANT PropertyExtension,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPropertyExtension (
        long id,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall MirrorFeature ( ) = 0;
    virtual HRESULT __stdcall ResetPropertyExtension ( ) = 0;
    virtual HRESULT __stdcall Dummy1 ( ) = 0;
    virtual HRESULT __stdcall Dummy2 ( ) = 0;
    virtual HRESULT __stdcall Dummy3 ( ) = 0;
    virtual HRESULT __stdcall Dummy4 ( ) = 0;
    virtual HRESULT __stdcall Dummy5 ( ) = 0;
    virtual HRESULT __stdcall Dummy6 ( ) = 0;
    virtual HRESULT __stdcall Dummy7 ( ) = 0;
    virtual HRESULT __stdcall Dummy8 ( ) = 0;
    virtual HRESULT __stdcall Dummy9 ( ) = 0;
    virtual HRESULT __stdcall Dummy10 ( ) = 0;
    virtual HRESULT __stdcall Dummy11 ( ) = 0;
    virtual HRESULT __stdcall Dummy12 ( ) = 0;
    virtual HRESULT __stdcall Dummy13 ( ) = 0;
    virtual HRESULT __stdcall Dummy14 ( ) = 0;
    virtual HRESULT __stdcall Dummy15 ( ) = 0;
    virtual HRESULT __stdcall Dummy16 ( ) = 0;
    virtual HRESULT __stdcall GetProcessedBodyWithSelFace (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetProcessedBodyWithSelFace (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStrips (
        VARIANT_BOOL noConversion,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStripNorms (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall MirrorPart ( ) = 0;
    virtual HRESULT __stdcall IGetTessTriangles (
        VARIANT_BOOL noConversion,
        float * retval ) = 0;
    virtual HRESULT __stdcall IGetTessNorms (
        float * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetPartBox (
        VARIANT_BOOL noConversion,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStrips (
        VARIANT_BOOL noConversion,
        float * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripNorms (
        float * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStripSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetEntityByName (
        BSTR Name,
        long entityType,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetEntityByName (
        BSTR Name,
        long entityType,
        struct IEntity * * retval ) = 0;
    virtual HRESULT __stdcall GetEntityName (
        IDispatch * entity,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetEntityName (
        struct IEntity * entity,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetEntityName (
        IDispatch * entity,
        BSTR StringValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetEntityName (
        struct IEntity * entity,
        BSTR StringValue,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ReorderFeature (
        BSTR featureToMove,
        BSTR moveAfterFeature,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EnumRelatedBodies (
        struct IEnumBodies * * retval ) = 0;
    virtual HRESULT __stdcall GetSectionedBody (
        IDispatch * viewIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSectionedBody (
        struct IModelView * viewIn,
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall EnumRelatedSectionedBodies (
        struct IModelView * viewIn,
        struct IEnumBodies * * retval ) = 0;
    virtual HRESULT __stdcall get_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IMaterialPropertyValues (
        double * retval ) = 0;
    virtual HRESULT __stdcall FeatureRevolveThin (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType,
        double thickness1,
        double thickness2,
        long reverseThinDir ) = 0;
    virtual HRESULT __stdcall FeatureRevolveThinCut (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType,
        double thickness1,
        double thickness2,
        long reverseThinDir ) = 0;
    virtual HRESULT __stdcall FeatureExtrusionThin (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        double thk1,
        double thk2,
        double endThk,
        long revThinDir,
        long capEnds,
        VARIANT_BOOL addBends,
        double bendRad ) = 0;
    virtual HRESULT __stdcall InsertBends (
        double radius,
        BSTR useBendTable,
        double useKfactor,
        double useBendAllowance,
        VARIANT_BOOL useAutoRelief,
        double offsetRatio,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateFeatureFromBody (
        IDispatch * Body,
        IDispatch * * feature ) = 0;
    virtual HRESULT __stdcall ICreateFeatureFromBody (
        struct IBody * Body,
        struct IFeature * * feature ) = 0;
    virtual HRESULT __stdcall CreateFeatureFromBody2 (
        IDispatch * Body,
        VARIANT_BOOL makeRefSurface,
        IDispatch * * feature ) = 0;
    virtual HRESULT __stdcall ICreateFeatureFromBody2 (
        struct IBody * Body,
        VARIANT_BOOL makeRefSurface,
        struct IFeature * * feature ) = 0;
    virtual HRESULT __stdcall ImportDiagnosis (
        VARIANT_BOOL closeAllGaps,
        VARIANT_BOOL removeFaces,
        VARIANT_BOOL fixFaces,
        long options,
        long * retval ) = 0;
    virtual HRESULT __stdcall DeleteEntityName (
        IDispatch * entity,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IDeleteEntityName (
        struct IEntity * entity,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTessTriStripEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripEdges (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetTessTriStripEdgeSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall EnumBodies (
        long bodyType,
        struct IEnumBodies * * retval ) = 0;
    virtual HRESULT __stdcall GetBodies (
        long bodyType,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetRelatedBodies (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetRelatedSectionedBodies (
        IDispatch * viewIn,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall InsertBends2 (
        double radius,
        BSTR useBendTable,
        double useKfactor,
        double useBendAllowance,
        VARIANT_BOOL useAutoRelief,
        double offsetRatio,
        VARIANT_BOOL doFlatten,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateFeatureFromBody3 (
        IDispatch * Body,
        VARIANT_BOOL makeRefSurface,
        long options,
        IDispatch * * feature ) = 0;
    virtual HRESULT __stdcall ICreateFeatureFromBody3 (
        struct IBody * Body,
        VARIANT_BOOL makeRefSurface,
        long options,
        struct IFeature * * feature ) = 0;
    virtual HRESULT __stdcall GetMateReferenceEntity (
        IDispatch * * mateRefEntity ) = 0;
    virtual HRESULT __stdcall FeatureExtrusion2 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL merge ) = 0;
    virtual HRESULT __stdcall FeatureExtrusionThin2 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL merge,
        double thk1,
        double thk2,
        double endThk,
        long revThinDir,
        long capEnds,
        VARIANT_BOOL addBends,
        double bendRad ) = 0;
    virtual HRESULT __stdcall CreateSurfaceFeatureFromBody (
        IDispatch * Body,
        long options,
        VARIANT * featArray ) = 0;
    virtual HRESULT __stdcall ICreateSurfaceFeatureFromBodyCount (
        struct IBody * Body,
        long options,
        long * count ) = 0;
    virtual HRESULT __stdcall ICreateSurfaceFeatureFromBody (
        struct IFeature * * featArray ) = 0;
    virtual HRESULT __stdcall IBodyObject2 (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall IGetProcessedBody2 (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall ICreateNewBody2 (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall IGetProcessedBodyWithSelFace2 (
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall IGetSectionedBody2 (
        struct IModelView * viewIn,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall ICreateFeatureFromBody4 (
        struct IBody2 * Body,
        VARIANT_BOOL makeRefSurface,
        long options,
        struct IFeature * * feature ) = 0;
    virtual HRESULT __stdcall ICreateSurfaceFeatureFromBodyCount2 (
        struct IBody2 * Body,
        long options,
        long * count ) = 0;
    virtual HRESULT __stdcall EnumRelatedBodies2 (
        struct IEnumBodies2 * * retval ) = 0;
    virtual HRESULT __stdcall EnumRelatedSectionedBodies2 (
        struct IModelView * viewIn,
        struct IEnumBodies2 * * retval ) = 0;
    virtual HRESULT __stdcall EnumBodies2 (
        long bodyType,
        struct IEnumBodies2 * * retval ) = 0;
    virtual HRESULT __stdcall GetNamedEntitiesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall GetNamedEntities (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetNamedEntities (
        long count,
        struct IEntity * * retval ) = 0;
    virtual HRESULT __stdcall GetCorrespondingEntity (
        IDispatch * entity,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetCorrespondingEntity (
        struct IEntity * pEntity,
        struct IEntity * * retval ) = 0;
    virtual HRESULT __stdcall InsertBasePart (
        BSTR fileName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall FeatureExtrusion3 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL translateSurface1,
        VARIANT_BOOL translateSurface2,
        VARIANT_BOOL merge ) = 0;
    virtual HRESULT __stdcall FeatureExtrusionThin3 (
        VARIANT_BOOL sd,
        VARIANT_BOOL flip,
        VARIANT_BOOL dir,
        long t1,
        long t2,
        double d1,
        double d2,
        VARIANT_BOOL dchk1,
        VARIANT_BOOL dchk2,
        VARIANT_BOOL ddir1,
        VARIANT_BOOL ddir2,
        double dang1,
        double dang2,
        VARIANT_BOOL offsetReverse1,
        VARIANT_BOOL offsetReverse2,
        VARIANT_BOOL translateSurface1,
        VARIANT_BOOL translateSurface2,
        VARIANT_BOOL merge,
        double thk1,
        double thk2,
        double endThk,
        long revThinDir,
        long capEnds,
        VARIANT_BOOL addBends,
        double bendRad ) = 0;
    virtual HRESULT __stdcall InsertMirrorFeature (
        VARIANT_BOOL GeometryPattern,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertMirrorAll (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall FeatureRevolve2 (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType,
        VARIANT_BOOL merge ) = 0;
    virtual HRESULT __stdcall FeatureRevolveThin2 (
        double angle,
        VARIANT_BOOL reverseDir,
        double angle2,
        long revType,
        double thickness1,
        double thickness2,
        long reverseThinDir,
        VARIANT_BOOL merge ) = 0;
    virtual HRESULT __stdcall InsertCombineFeature (
        long operationType,
        IDispatch * mainBody,
        VARIANT toolVar,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IInsertCombineFeature (
        long operationType,
        struct IBody2 * mainBody,
        long toolsCount,
        struct IBody2 * * toolsArr,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EnumBodies3 (
        long bodyType,
        VARIANT_BOOL bVisibleOnly,
        struct IEnumBodies2 * * retval ) = 0;
    virtual HRESULT __stdcall GetBodies2 (
        long bodyType,
        VARIANT_BOOL bVisibleOnly,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall SetLineStyle (
        BSTR styleName ) = 0;
    virtual HRESULT __stdcall SetLineWidth (
        long width ) = 0;
    virtual HRESULT __stdcall SetLineColor (
        long Color ) = 0;
    virtual HRESULT __stdcall InsertPart (
        BSTR fileName,
        VARIANT_BOOL ImportPlane,
        VARIANT_BOOL ImportAxis,
        VARIANT_BOOL ImportCThread,
        struct IFeature * * retval ) = 0;
};

struct __declspec(uuid("83a33d96-27c5-11ce-bfd4-00400513bb57"))
IEnumBodies : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct IBody * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumBodies * * ppenum ) = 0;
};

struct __declspec(uuid("699c7492-db56-4cc2-b7a2-9ffd56698434"))
ITessellation : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_MaxFacetWidth (
        double * maxWidth ) = 0;
    virtual HRESULT __stdcall put_MaxFacetWidth (
        double maxWidth ) = 0;
    virtual HRESULT __stdcall get_CurveChordTolerance (
        double * tolerance ) = 0;
    virtual HRESULT __stdcall put_CurveChordTolerance (
        double tolerance ) = 0;
    virtual HRESULT __stdcall get_CurveChordAngleTolerance (
        double * tolerance ) = 0;
    virtual HRESULT __stdcall put_CurveChordAngleTolerance (
        double tolerance ) = 0;
    virtual HRESULT __stdcall get_SurfacePlaneTolerance (
        double * tolerance ) = 0;
    virtual HRESULT __stdcall put_SurfacePlaneTolerance (
        double tolerance ) = 0;
    virtual HRESULT __stdcall get_SurfacePlaneAngleTolerance (
        double * tolerance ) = 0;
    virtual HRESULT __stdcall put_SurfacePlaneAngleTolerance (
        double tolerance ) = 0;
    virtual HRESULT __stdcall get_NeedVertexNormal (
        VARIANT_BOOL * option ) = 0;
    virtual HRESULT __stdcall put_NeedVertexNormal (
        VARIANT_BOOL option ) = 0;
    virtual HRESULT __stdcall get_NeedVertexParams (
        VARIANT_BOOL * option ) = 0;
    virtual HRESULT __stdcall put_NeedVertexParams (
        VARIANT_BOOL option ) = 0;
    virtual HRESULT __stdcall get_NeedFaceFacetMap (
        VARIANT_BOOL * option ) = 0;
    virtual HRESULT __stdcall put_NeedFaceFacetMap (
        VARIANT_BOOL option ) = 0;
    virtual HRESULT __stdcall get_NeedEdgeFinMap (
        VARIANT_BOOL * option ) = 0;
    virtual HRESULT __stdcall put_NeedEdgeFinMap (
        VARIANT_BOOL option ) = 0;
    virtual HRESULT __stdcall get_NeedErrorList (
        VARIANT_BOOL * option ) = 0;
    virtual HRESULT __stdcall put_NeedErrorList (
        VARIANT_BOOL option ) = 0;
    virtual HRESULT __stdcall Tessellate (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetFacetCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFinCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetVertexCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFacetFins (
        long facetId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetFacetFinsCount (
        long facetId,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetFacetFins (
        long facetId,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFinCoFin (
        long finId,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFinVertices (
        long finId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetFinVertices (
        long finId,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetVertexPoint (
        long vertexId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetVertexPoint (
        long vertexId,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetVertexNormal (
        long vertexId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetVertexNormal (
        long vertexId,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetVertexParams (
        long vertexId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetVertexParams (
        long vertexId,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetFaceFacets (
        IDispatch * facedisp,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetFaceFacetsCount (
        struct IFace * faceObj,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetFaceFacets (
        struct IFace * faceObj,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFacetFace (
        long facetId,
        IDispatch * * facedisp ) = 0;
    virtual HRESULT __stdcall IGetFacetFace (
        long facetId,
        struct IFace * * faceObj ) = 0;
    virtual HRESULT __stdcall GetEdgeFins (
        IDispatch * edgeDisp,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEdgeFinsCount (
        struct IEdge * edgeObj,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetEdgeFins (
        struct IEdge * edgeObj,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFinEdge (
        long finId,
        IDispatch * * edgeDisp ) = 0;
    virtual HRESULT __stdcall IGetFinEdge (
        long finId,
        struct IEdge * * edgeDisp ) = 0;
    virtual HRESULT __stdcall GetErrorList (
        VARIANT * faceErrArray,
        VARIANT * facetErrArray,
        VARIANT * vertexPointErrArray,
        VARIANT * vertexNormalErrArray,
        VARIANT * vertexParamsErrArray ) = 0;
    virtual HRESULT __stdcall IGetErrorListCount (
        long * faceErrArrayCount,
        long * facetErrArrayCount,
        long * vertexPointErrArrayCount,
        long * vertexNormalErrArrayCount,
        long * vertexParamsErrArrayCount ) = 0;
    virtual HRESULT __stdcall IGetErrorList (
        struct IFace * * faceErrArray,
        long * facetErrArray,
        long * vertexPointErrArray,
        long * vertexNormalErrArray,
        long * vertexParamsErrArray ) = 0;
    virtual HRESULT __stdcall IGetFaceFacetsCount2 (
        struct IFace2 * faceObj,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetFaceFacets2 (
        struct IFace2 * faceObj,
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetFacetFace2 (
        long facetId,
        struct IFace2 * * faceObj ) = 0;
    virtual HRESULT __stdcall IGetErrorList2 (
        struct IFace2 * * faceErrArray,
        long * facetErrArray,
        long * vertexPointErrArray,
        long * vertexNormalErrArray,
        long * vertexParamsErrArray ) = 0;
    virtual HRESULT __stdcall get_MinFacetWidth (
        double * minWidth ) = 0;
    virtual HRESULT __stdcall put_MinFacetWidth (
        double minWidth ) = 0;
};

struct __declspec(uuid("83a33d5d-27c5-11ce-bfd4-00400513bb57"))
IEnumLoops : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct ILoop * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumLoops * * ppenum ) = 0;
};

struct __declspec(uuid("83a33d5b-27c5-11ce-bfd4-00400513bb57"))
IEnumFaces : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct IFace * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumFaces * * ppenum ) = 0;
};

struct __declspec(uuid("83a33d50-27c5-11ce-bfd4-00400513bb57"))
IView : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_suppressState (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_suppressState (
        long retval ) = 0;
    virtual HRESULT __stdcall GetNextView (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextView (
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall GetLines (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetOutline (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetXform (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetArcs (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetUserPoints (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetPolylines (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetSplines (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionString (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetFirstNote (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstNote (
        struct INote * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstGTOL (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstGTOL (
        struct IGtol * * retval ) = 0;
    virtual HRESULT __stdcall IGetLines (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetOutline (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetXform (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetArcs (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetUserPoints (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetPolylines (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetSplines (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionString (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArcCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetUserPointsCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPolyLineCount (
        long * PointCount,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSplineCount (
        long * PointCount,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetEllipses (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEllipses (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEllipseCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayMode (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetDisplayMode (
        long displayIn ) = 0;
    virtual HRESULT __stdcall GetDisplayTangentEdges (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetDisplayTangentEdges (
        VARIANT_BOOL displayIn ) = 0;
    virtual HRESULT __stdcall GetCenterMarkCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetCenterMarkInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCenterMarkInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSectionLineCount (
        long * size,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSectionLineInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetSectionLineStrings (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSectionLineInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetSectionLineStrings (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall UpdateViewDisplayGeometry ( ) = 0;
    virtual HRESULT __stdcall GetDetailCircleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetDetailCircleInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDetailCircleInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetDetailCircleStrings (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDetailCircleStrings (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionIds (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionIds (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionDisplayInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionDisplayInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionDisplayString (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionDisplayString (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetArcs2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcs2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEllipses2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEllipses2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetViewXform (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetViewXform (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetFirstSFSymbol (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstSFSymbol (
        struct ISFSymbol * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstDatumTag (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstDatumTag (
        struct IDatumTag * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstDatumTargetSym (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstDatumTargetSym (
        struct IDatumTargetSym * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstWeldSymbol (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstWeldSymbol (
        struct IWeldSymbol * * retval ) = 0;
    virtual HRESULT __stdcall GetDatumPointsCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetDatumPoints (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDatumPoints (
        double * retval ) = 0;
    virtual HRESULT __stdcall UseDefaultAlignment ( ) = 0;
    virtual HRESULT __stdcall RemoveAlignment ( ) = 0;
    virtual HRESULT __stdcall AlignVerticalTo (
        BSTR viewNameIn ) = 0;
    virtual HRESULT __stdcall AlignHorizontalTo (
        BSTR viewNameIn ) = 0;
    virtual HRESULT __stdcall GetDisplayData (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDisplayData (
        struct IDisplayData * * retval ) = 0;
    virtual HRESULT __stdcall GetPolyLineCount2 (
        long * PointCount,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPolylines2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetPolylines2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall ShowExploded (
        VARIANT_BOOL showIt,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsExploded (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_ReferencedConfiguration (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_ReferencedConfiguration (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetFirstCThread (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstCThread (
        struct ICThread * * retval ) = 0;
    virtual HRESULT __stdcall CreateViewArrow (
        BSTR drawingViewNameIn,
        BSTR arrowNameIn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ModifyViewArrow (
        BSTR drawingViewNameIn,
        BSTR arrowNameIn ) = 0;
    virtual HRESULT __stdcall MoveViewArrow (
        BSTR drawingViewNameIn,
        double dx,
        double dy,
        double dz ) = 0;
    virtual HRESULT __stdcall GetPolylines3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetPolylines3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetPolyLineCount3 (
        long * PointCount,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFirstDisplayDimension (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstDisplayDimension (
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall GetSketch (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSketch (
        struct ISketch * * retval ) = 0;
    virtual HRESULT __stdcall GetLines2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLines2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSplines2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSplines2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcs3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcs3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEllipses3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEllipses3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetBomTable (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetBomTable (
        struct IBomTable * * retval ) = 0;
    virtual HRESULT __stdcall get_UseSheetScale (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_UseSheetScale (
        long retval ) = 0;
    virtual HRESULT __stdcall get_ScaleDecimal (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_ScaleDecimal (
        double retval ) = 0;
    virtual HRESULT __stdcall get_ScaleRatio (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_ScaleRatio (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_IScaleRatio (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IScaleRatio (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_position (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall put_position (
        VARIANT retval ) = 0;
    virtual HRESULT __stdcall get_IPosition (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_IPosition (
        double * retval ) = 0;
    virtual HRESULT __stdcall SetXform (
        VARIANT Transform,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetXform (
        double * Transform,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetAlignment (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetReferencedModelName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetFirstAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstCustomSymbol (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstCustomSymbol (
        struct ICustomSymbol * * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionInfo2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionInfo2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetParabolas (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetParabolas (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetParabolaCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetEllipses4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEllipses4 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetLines3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLines3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcs4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcs4 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSplines3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSplines3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEllipses5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEllipses5 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetParabolas2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetParabolas2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetUserPoints2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetUserPoints2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionInfo3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionInfo3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetDatumPoints2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDatumPoints2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall get_type (
        long * retval ) = 0;
    virtual HRESULT __stdcall get_ProjectedDimensions (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_ProjectedDimensions (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall HasDesignTable (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDesignTableExtent (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDesignTableExtent (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayData2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDisplayData2 (
        struct IDisplayData * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstAnnotation2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstAnnotation2 (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionCount2 (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionInfo4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionInfo4 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionString2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionString2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionIds2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionIds2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionDisplayInfo2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionDisplayInfo2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionDisplayString2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionDisplayString2 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetFirstDisplayDimension2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstDisplayDimension2 (
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall GetPolylines4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetPolylines4 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetPolyLineCount4 (
        long * PointCount,
        long * retval ) = 0;
    virtual HRESULT __stdcall IsModelLoaded (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall LoadModel (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayTangentEdges2 (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetDisplayTangentEdges2 (
        long displayIn ) = 0;
    virtual HRESULT __stdcall GetSectionLines (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSectionLines (
        struct IDrSection * * retval ) = 0;
    virtual HRESULT __stdcall GetSection (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSection (
        struct IDrSection * * retval ) = 0;
    virtual HRESULT __stdcall GetHiddenComponents (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall EnumHiddenComponents (
        struct IEnumComponents * * retval ) = 0;
    virtual HRESULT __stdcall EnumSectionLines (
        struct IEnumDrSections * * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayData3 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDisplayData3 (
        struct IDisplayData * * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionCount3 (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionInfo5 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionInfo5 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionString3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionString3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionIds3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionIds3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionDisplayInfo3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionDisplayInfo3 (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionDisplayString3 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionDisplayString3 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetFirstDisplayDimension3 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstDisplayDimension3 (
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall IsCropped (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_angle (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_angle (
        double retval ) = 0;
    virtual HRESULT __stdcall GetDetailCircles (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDetailCircles (
        long NumDetailCircles,
        struct IDetailCircle * * retval ) = 0;
    virtual HRESULT __stdcall GetProjectionArrow (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetProjectionArrow (
        struct IProjectionArrow * * retval ) = 0;
    virtual HRESULT __stdcall GetDetail (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDetail (
        struct IDetailCircle * * retval ) = 0;
    virtual HRESULT __stdcall GetBaseView (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetBaseView (
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall EnumHiddenComponents2 (
        struct IEnumComponents2 * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstMultiJogLeader (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstMultiJogLeader (
        struct IMultiJogLeader * * retval ) = 0;
    virtual HRESULT __stdcall GetVisible (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetVisible (
        VARIANT_BOOL Visible,
        VARIANT_BOOL dependentsToo ) = 0;
    virtual HRESULT __stdcall GetFirstDowelSymbol (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstDowelSymbol (
        struct IDowelSymbol * * retval ) = 0;
    virtual HRESULT __stdcall InsertBomTable (
        BSTR Template,
        double Xloc,
        double Yloc,
        long * Errors,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertBomTable (
        BSTR Template,
        double Xloc,
        double Yloc,
        long * Errors,
        struct IBomTable * * retval ) = 0;
    virtual HRESULT __stdcall SelectEntity (
        IDispatch * entity,
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISelectEntity (
        struct IEntity * entity,
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IsModelOutOfDate (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_ModelToViewTransform (
        struct IMathTransform * * xform ) = 0;
    virtual HRESULT __stdcall put_ModelToViewTransform (
        struct IMathTransform * xform ) = 0;
    virtual HRESULT __stdcall GetDisplayMode2 (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFacettedHlrDisplay (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayEdgesInShadedMode (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetDisplayMode2 (
        long mode,
        VARIANT_BOOL Facetted,
        VARIANT_BOOL edges,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetPolylines5 (
        short crossHatchOption,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetPolylines5 (
        short crossHatchOption,
        long arraySize,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetPolyLineCount5 (
        short crossHatchOption,
        long * PointCount,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount2 (
        short crossHatchOption,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLines4 (
        short crossHatchOption,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLines4 (
        short crossHatchOption,
        long arraySize,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetFirstBlockInstance (
        struct IBlockInstance * * retval ) = 0;
    virtual HRESULT __stdcall GetSectionLineCount2 (
        long * size,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSectionLineInfo2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSectionLineInfo2 (
        long arraySize,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetDetailCircleCount2 (
        long * size,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetDetailCircleInfo2 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDetailCircleInfo2 (
        long arraySize,
        double * retval ) = 0;
    virtual HRESULT __stdcall IsBroken (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBreakLineCount (
        long * size,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetBreakLines (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetBreakLines (
        long count,
        struct IBreakLine * * retval ) = 0;
    virtual HRESULT __stdcall InsertBreak (
        long Orientation,
        double Position1,
        double Position2,
        long Style,
        struct IBreakLine * * retval ) = 0;
    virtual HRESULT __stdcall GetBreakLineInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetBreakLineInfo (
        long arraySize,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetFaceHatchCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFaceHatches (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetFaceHatches (
        long numFacesHatches,
        struct IFaceHatch * * retval ) = 0;
    virtual HRESULT __stdcall GetCenterMarkCount2 (
        long * size,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetCenterMarks (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCenterMarks (
        long count,
        struct ICenterMark * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstCenterMark (
        struct ICenterMark * * retval ) = 0;
    virtual HRESULT __stdcall GetCenterLineSketch (
        struct ISketch * * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionDisplayInfoSize (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionDisplayInfo4 (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensionDisplayInfo4 (
        long arraySize,
        double * retval ) = 0;
};

struct __declspec(uuid("83a33d8e-27c5-11ce-bfd4-00400513bb57"))
ISFSymbol : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct ISFSymbol * * retval ) = 0;
    virtual HRESULT __stdcall GetTextCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextAtIndex (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetTextHeightAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextPositionAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTextPositionAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextAngleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLineAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArcAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextInvertAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextFontAtIndex (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTriangleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall IsAttached (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall HasExtraLeader (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLeaderAtIndex (
        long index,
        long * PointCount,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall GetSymbolType (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetSymbolType (
        long symbolType,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDirectionOfLay (
        long * retval ) = 0;
    virtual HRESULT __stdcall SetDirectionOfLay (
        long direction,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetText (
        long whichOne,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetText (
        long whichOne,
        BSTR text,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Rotated (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Rotated (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_Grinding (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_Grinding (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall GetAngle (
        double * retval ) = 0;
};

struct __declspec(uuid("83a33d92-27c5-11ce-bfd4-00400513bb57"))
IDatumTargetSym : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct IDatumTargetSym * * retval ) = 0;
    virtual HRESULT __stdcall GetTextCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextAtIndex (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetTextHeightAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextPositionAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTextPositionAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextAngleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextInvertAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLineAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArcAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTriangleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall GetTargetShape (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTargetAreaSize (
        long whichOne,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetTargetArea (
        long shape,
        BSTR size1,
        BSTR size2,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDisplaySymbol (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayTargetArea (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDisplaySizeOutside (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetDisplay (
        VARIANT_BOOL symbol,
        VARIANT_BOOL targetArea,
        VARIANT_BOOL sizeOutside,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDatumReferenceLabel (
        long whichOne,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetDatumReferenceLabel (
        long whichOne,
        BSTR text,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33d9e-27c5-11ce-bfd4-00400513bb57"))
ICThread : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct ICThread * * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayData (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDisplayData (
        struct IDisplayData * * retval ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetAnnotation (
        struct IAnnotation * * retval ) = 0;
};

struct __declspec(uuid("83a33d82-27c5-11ce-bfd4-00400513bb57"))
IBomTable : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetExtent (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetExtent (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetRowCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetColumnCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetHeaderText (
        long col,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetEntryText (
        long row,
        long col,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall Attach ( ) = 0;
    virtual HRESULT __stdcall Detach ( ) = 0;
    virtual HRESULT __stdcall GetColumnWidth (
        long col,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetRowHeight (
        long row,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEntryValue (
        long row,
        long col,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall Attach2 (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayData (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDisplayData (
        struct IDisplayData * * retval ) = 0;
    virtual HRESULT __stdcall IsVisible (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Attach3 (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTotalRowCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTotalColumnCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall Select (
        VARIANT_BOOL Append,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33db5-27c5-11ce-bfd4-00400513bb57"))
ICustomSymbol : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct ICustomSymbol * * retval ) = 0;
    virtual HRESULT __stdcall GetTextCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextAtIndex (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetTextHeightAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextPositionAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTextPositionAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextAngleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTextRefPositionAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTextInvertAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLineAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArcCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArcAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetTriangleAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTriangleAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSketch (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSketch (
        struct ISketch * * retval ) = 0;
    virtual HRESULT __stdcall GetSketchPosition (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSketchPosition (
        double * retval ) = 0;
    virtual HRESULT __stdcall IsAttached (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall HasExtraLeader (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLeaderAtIndex (
        long index,
        long * PointCount,
        double * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall get_angle (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_angle (
        double retval ) = 0;
    virtual HRESULT __stdcall get_Scale2 (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Scale2 (
        double retval ) = 0;
    virtual HRESULT __stdcall GetText (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetText (
        long index,
        BSTR text,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTextJustificationAtIndex (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall SetTextJustificationAtIndex (
        long index,
        long justification ) = 0;
    virtual HRESULT __stdcall GetTextLineSpacingAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall get_TextVisible (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_TextVisible (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall GetNoteCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetNotes (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetNotes (
        long count,
        struct INote * * retval ) = 0;
};

struct __declspec(uuid("f183a33f-d4db-11d3-aeb2-00c04f603faf"))
IDrSection : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetView (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetView (
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall GetSectionView (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetSectionView (
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall GetLabel (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetLabel (
        BSTR Label,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetUseDocTextFormat (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTextFormat (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetTextFormat (
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall SetTextFormat (
        VARIANT_BOOL useDoc,
        IDispatch * textFormat,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetTextFormat (
        VARIANT_BOOL useDoc,
        struct ITextFormat * textFormat,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetReversedCutDirection (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetReversedCutDirection (
        VARIANT_BOOL reversed ) = 0;
    virtual HRESULT __stdcall GetScaleWithModelChanges (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetScaleWithModelChanges (
        VARIANT_BOOL scaleWithChanges ) = 0;
    virtual HRESULT __stdcall GetPartialSection (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetPartialSection (
        VARIANT_BOOL partial ) = 0;
    virtual HRESULT __stdcall GetDisplayOnlySurfaceCut (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetDisplayOnlySurfaceCut (
        VARIANT_BOOL Display ) = 0;
    virtual HRESULT __stdcall IsAligned (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetTextInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetTextInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetExcludedComponents (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall EnumExcludedComponents (
        struct IEnumComponents * * retval ) = 0;
    virtual HRESULT __stdcall GetAutoHatch (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetAutoHatch (
        VARIANT_BOOL autoHatch ) = 0;
    virtual HRESULT __stdcall IGetLineSegmentCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLineInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall EnumExcludedComponents2 (
        struct IEnumComponents2 * * retval ) = 0;
    virtual HRESULT __stdcall get_Layer (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Layer (
        BSTR Name ) = 0;
};

struct __declspec(uuid("51efb944-d449-11d3-aebe-00c04f683cba"))
IEnumComponents : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct IComponent * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumComponents * * ppenum ) = 0;
};

struct __declspec(uuid("f6804d12-b73a-49af-81c6-05babb58b812"))
IEnumComponents2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct IComponent2 * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumComponents2 * * ppenum ) = 0;
};

struct __declspec(uuid("585a6a15-e95b-11d3-aebc-00c04f603faf"))
IEnumDrSections : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct IDrSection * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumDrSections * * ppenum ) = 0;
};

struct __declspec(uuid("4b65a34a-4c44-11d4-aef6-00c04f683cba"))
IDetailCircle : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetView (
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall GetDetailView (
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall GetLabel (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetTextFormat (
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall GetName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetArrowInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetStyle (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetDisplay (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetConnectingLine (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetConnectingLine (
        double * retval ) = 0;
    virtual HRESULT __stdcall HasFullOutline (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLeaderInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLeaderInfo (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetUseDocTextFormat (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetTextFormat (
        VARIANT_BOOL useDoc,
        struct ITextFormat * textFormat,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Layer (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Layer (
        BSTR Name ) = 0;
};

struct __declspec(uuid("a2227e65-a3a7-11d4-aeff-00c04f603faf"))
IProjectionArrow : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetView (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetView (
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall GetProjectedView (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetProjectedView (
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall GetLabel (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetLabel (
        BSTR Label,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetUseDocTextFormat (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetTextFormat (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetTextFormat (
        struct ITextFormat * * retval ) = 0;
    virtual HRESULT __stdcall GetCoordinates (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCoordinates (
        double * retval ) = 0;
};

struct __declspec(uuid("01eb5266-6ca9-4f59-b0b4-a040dd1ccfb6"))
IMultiJogLeader : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct IMultiJogLeader * * retval ) = 0;
    virtual HRESULT __stdcall GetLineCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetLineAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetArrowHeadAtIndex (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArrowHeadAtIndex (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall GetDisplayData (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDisplayData (
        struct IDisplayData * * retval ) = 0;
};

struct __declspec(uuid("55aacd8b-97c5-11d5-af4b-00c04f603faf"))
IDowelSymbol : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNext (
        struct IDowelSymbol * * retval ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall get_Flipped (
        VARIANT_BOOL * Flipped ) = 0;
    virtual HRESULT __stdcall put_Flipped (
        VARIANT_BOOL Flipped ) = 0;
    virtual HRESULT __stdcall GetArcPoints (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetArcPoints (
        double * retval ) = 0;
};

struct __declspec(uuid("992a14b6-15cf-11d6-af6e-00c04f603faf"))
IBlockInstance : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetNext (
        struct IBlockInstance * * retval ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall get_Definition (
        struct IBlockDefinition * * Definition ) = 0;
    virtual HRESULT __stdcall get_angle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_angle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_Scale2 (
        double * Scale ) = 0;
    virtual HRESULT __stdcall put_Scale2 (
        double Scale ) = 0;
    virtual HRESULT __stdcall GetAttributeCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetAttributes (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetAttributes (
        long numAttribs,
        struct INote * * retval ) = 0;
    virtual HRESULT __stdcall GetAttributeValue (
        BSTR TagName,
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall SetAttributeValue (
        BSTR TagName,
        BSTR Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_TextDisplay (
        long * propval ) = 0;
    virtual HRESULT __stdcall put_TextDisplay (
        long propval ) = 0;
};

struct __declspec(uuid("8cd8314a-1677-11d6-af6e-00c04f603faf"))
IBlockDefinition : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall GetBlockInstanceCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetBlockInstances (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetBlockInstances (
        long count,
        struct IBlockInstance * * retval ) = 0;
    virtual HRESULT __stdcall GetUseExternalFile (
        VARIANT_BOOL * UseFile ) = 0;
    virtual HRESULT __stdcall SetUseExternalFile (
        VARIANT_BOOL UseFile,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetExternalFileName (
        BSTR * fileName ) = 0;
    virtual HRESULT __stdcall SetExternalFileName (
        BSTR fileName,
        long * retval ) = 0;
    virtual HRESULT __stdcall InsertInstance (
        double x,
        double y,
        double angle,
        double Scale,
        struct IBlockInstance * * retval ) = 0;
    virtual HRESULT __stdcall GetBasePoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetBasePoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall SetBasePoint (
        VARIANT BasePoint,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetBasePoint (
        double * BasePoint,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetSketch (
        struct ISketch * * retval ) = 0;
    virtual HRESULT __stdcall GetNoteCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetNotes (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetNotes (
        long numNotes,
        struct INote * * retval ) = 0;
    virtual HRESULT __stdcall GetDimensionCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetDimensions (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetDimensions (
        long numDimensions,
        struct IDisplayDimension * * retval ) = 0;
};

struct __declspec(uuid("54e1ffbc-d989-437f-a701-62bda39fd195"))
IBreakLine : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetView (
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall get_Style (
        long * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        long Style ) = 0;
    virtual HRESULT __stdcall get_Layer (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Layer (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_Orientation (
        long * Orientation ) = 0;
    virtual HRESULT __stdcall GetPosition (
        long index,
        double * retval ) = 0;
    virtual HRESULT __stdcall SetPosition (
        double Position1,
        double Position2,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("e0a98a37-8780-4e5f-a28a-c7c6af25231c"))
IFaceHatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Pattern (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Pattern (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Scale (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_Scale (
        double retval ) = 0;
    virtual HRESULT __stdcall get_angle (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_angle (
        double retval ) = 0;
    virtual HRESULT __stdcall get_face (
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall put_face (
        struct IFace2 * retval ) = 0;
    virtual HRESULT __stdcall get_Layer (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Layer (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_Color (
        long * retval ) = 0;
    virtual HRESULT __stdcall put_Color (
        long retval ) = 0;
    virtual HRESULT __stdcall get_Definition (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Definition (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall get_SolidFill (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_SolidFill (
        VARIANT_BOOL retval ) = 0;
};

struct __declspec(uuid("6beb0423-eda4-11d5-af64-00c04f603faf"))
ICenterMark : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_RotationAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_RotationAngle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_UseDocDisplaySettings (
        VARIANT_BOOL * useDoc ) = 0;
    virtual HRESULT __stdcall put_UseDocDisplaySettings (
        VARIANT_BOOL useDoc ) = 0;
    virtual HRESULT __stdcall get_ShowLines (
        VARIANT_BOOL * Show ) = 0;
    virtual HRESULT __stdcall put_ShowLines (
        VARIANT_BOOL Show ) = 0;
    virtual HRESULT __stdcall get_size (
        double * size ) = 0;
    virtual HRESULT __stdcall put_size (
        double size ) = 0;
    virtual HRESULT __stdcall GetNext (
        struct ICenterMark * * retval ) = 0;
    virtual HRESULT __stdcall GetAnnotation (
        struct IAnnotation * * retval ) = 0;
    virtual HRESULT __stdcall get_Style (
        long * Style ) = 0;
    virtual HRESULT __stdcall get_ConnectionLines (
        long * Visible ) = 0;
    virtual HRESULT __stdcall put_ConnectionLines (
        long Visible ) = 0;
    virtual HRESULT __stdcall get_CenterLineFont (
        VARIANT_BOOL * CenterLine ) = 0;
    virtual HRESULT __stdcall put_CenterLineFont (
        VARIANT_BOOL CenterLine ) = 0;
};

struct __declspec(uuid("83a33d88-27c5-11ce-bfd4-00400513bb57"))
IMidSurface : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetFacePairCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFirstFacePair (
        double * thickness,
        IDispatch * * partnerFaceDisp,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstFacePair (
        double * thickness,
        struct IFace * * partnerFaceDisp,
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall GetNextFacePair (
        double * thickness,
        IDispatch * * partnerFaceDisp,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextFacePair (
        double * thickness,
        struct IFace * * partnerFaceDisp,
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstNeutralSheet (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstNeutralSheet (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall GetNextNeutralSheet (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextNeutralSheet (
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall GetNeutralSheetCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFaceCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFirstFace (
        IDispatch * * fromFace1Disp,
        IDispatch * * fromFace2Disp,
        double * thickness,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstFace (
        struct IFace * * fromFace1Disp,
        struct IFace * * fromFace2Disp,
        double * thickness,
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall GetNextFace (
        IDispatch * * fromFace1Disp,
        IDispatch * * fromFace2Disp,
        double * thickness,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextFace (
        struct IFace * * fromFace1Disp,
        struct IFace * * fromFace2Disp,
        double * thickness,
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall EdgeGetFace (
        IDispatch * edgeInDisp,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IEdgeGetFace (
        struct IEdge * edgeInDisp,
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstFaceArray (
        struct IFace * * * fromFrontFaceListDisp,
        long * sizeOfFrontFaceList,
        struct IFace * * * fromFaceBackListDisp,
        long * sizeOfBackFaceList,
        double * thickness,
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall IGetNextFaceArray (
        struct IFace * * * fromFrontFaceListDisp,
        long * sizeOfFrontFaceList,
        struct IFace * * * fromFaceBackListDisp,
        long * sizeOfBackFaceList,
        double * thickness,
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall GetFirstFaceArray (
        double * thickness,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetNextFaceArray (
        double * thickness,
        VARIANT * retval ) = 0;
};

struct __declspec(uuid("83a33d48-27c5-11ce-bfd4-00400513bb57"))
IFrame : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddMenuItem (
        BSTR Menu,
        BSTR Item,
        long position,
        BSTR CallbackFcnAndModule,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddMenu (
        BSTR Menu,
        long position,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Dummy003 ( ) = 0;
    virtual HRESULT __stdcall Dummy004 ( ) = 0;
    virtual HRESULT __stdcall GetMenuState (
        BSTR MenuItemString,
        long * retval ) = 0;
    virtual HRESULT __stdcall RenameMenu (
        BSTR MenuItemString,
        BSTR newName ) = 0;
    virtual HRESULT __stdcall RemoveMenu (
        BSTR MenuItemString ) = 0;
    virtual HRESULT __stdcall AddMenuPopupItem (
        long DocType,
        long SelectType,
        BSTR Item,
        BSTR CallbackFcnAndModule,
        BSTR CustomNames,
        long Unused,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetStatusBarPane (
        struct IStatusBarPane * * retval ) = 0;
    virtual HRESULT __stdcall SetStatusBarText (
        BSTR messageString ) = 0;
    virtual HRESULT __stdcall GetHWnd (
        long * windowHandle ) = 0;
    virtual HRESULT __stdcall GetSubMenuCount (
        long DocType,
        BSTR fullMenuName,
        long * numSubMenus ) = 0;
    virtual HRESULT __stdcall GetSubMenus (
        long DocType,
        BSTR fullMenuName,
        VARIANT * SubMenus ) = 0;
    virtual HRESULT __stdcall IGetSubMenus (
        long DocType,
        BSTR fullMenuName,
        long numSubMenus,
        BSTR * SubMenus ) = 0;
};

struct __declspec(uuid("931f2702-3257-4372-bbcc-cbd4a7fbbc41"))
IStatusBarPane : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall get_text (
        BSTR * text ) = 0;
    virtual HRESULT __stdcall put_text (
        BSTR text ) = 0;
};

struct __declspec(uuid("83a33d35-27c5-11ce-bfd4-00400513bb57"))
IAssemblyDoc : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddComponent (
        BSTR compName,
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Dummy2 ( ) = 0;
    virtual HRESULT __stdcall FeatureExtrusion ( ) = 0;
    virtual HRESULT __stdcall EditRebuild ( ) = 0;
    virtual HRESULT __stdcall Dummy3 ( ) = 0;
    virtual HRESULT __stdcall Dummy4 ( ) = 0;
    virtual HRESULT __stdcall ToolsCheckInterference ( ) = 0;
    virtual HRESULT __stdcall Dummy5 ( ) = 0;
    virtual HRESULT __stdcall Dummy6 ( ) = 0;
    virtual HRESULT __stdcall GetFirstMember (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall GetSelectedMember (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstMember (
        struct IMember * * retval ) = 0;
    virtual HRESULT __stdcall IGetSelectedMember (
        struct IMember * * retval ) = 0;
    virtual HRESULT __stdcall Dummy7 ( ) = 0;
    virtual HRESULT __stdcall ViewCollapseAssembly ( ) = 0;
    virtual HRESULT __stdcall ViewExplodeAssembly ( ) = 0;
    virtual HRESULT __stdcall TranslateComponent ( ) = 0;
    virtual HRESULT __stdcall InsertNewPart ( ) = 0;
    virtual HRESULT __stdcall Dummy1 ( ) = 0;
    virtual HRESULT __stdcall RotateComponent ( ) = 0;
    virtual HRESULT __stdcall FileDeriveComponentPart ( ) = 0;
    virtual HRESULT __stdcall InsertCavity ( ) = 0;
    virtual HRESULT __stdcall HideComponent ( ) = 0;
    virtual HRESULT __stdcall ShowComponent ( ) = 0;
    virtual HRESULT __stdcall FixComponent ( ) = 0;
    virtual HRESULT __stdcall UnfixComponent ( ) = 0;
    virtual HRESULT __stdcall EditAssembly ( ) = 0;
    virtual HRESULT __stdcall EditPart ( ) = 0;
    virtual HRESULT __stdcall OpenCompFile ( ) = 0;
    virtual HRESULT __stdcall UpdateFeatureScope ( ) = 0;
    virtual HRESULT __stdcall AddMate (
        long mateType,
        long align,
        VARIANT_BOOL flip,
        double dist,
        double angle ) = 0;
    virtual HRESULT __stdcall CompConfigProperties (
        VARIANT_BOOL m_suppressed,
        VARIANT_BOOL m_show_component,
        VARIANT_BOOL m_fdetail ) = 0;
    virtual HRESULT __stdcall AddToFeatureScope (
        BSTR compName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall RemoveFromFeatureScope (
        BSTR compName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditExplodeParameters ( ) = 0;
    virtual HRESULT __stdcall RotateComponentAxis ( ) = 0;
    virtual HRESULT __stdcall ViewFeatureManagerByFeatures ( ) = 0;
    virtual HRESULT __stdcall ComponentReload ( ) = 0;
    virtual HRESULT __stdcall ViewFeatureManagerByDependencies ( ) = 0;
    virtual HRESULT __stdcall AssemblyPartToggle ( ) = 0;
    virtual HRESULT __stdcall FeatureByName (
        BSTR Name,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFeatureByName (
        BSTR Name,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall InsertJoin ( ) = 0;
    virtual HRESULT __stdcall UpdateBox ( ) = 0;
    virtual HRESULT __stdcall InsertWeld (
        BSTR type,
        BSTR shape,
        double topDelta,
        double bottomDelta,
        double radius,
        BSTR part ) = 0;
    virtual HRESULT __stdcall ForceRebuild ( ) = 0;
    virtual HRESULT __stdcall GetEditTarget (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetEditTarget (
        struct IModelDoc * * retval ) = 0;
    virtual HRESULT __stdcall InsertCavity2 (
        double scaleFactor,
        long scaleType ) = 0;
    virtual HRESULT __stdcall AutoExplode (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ShowExploded (
        VARIANT_BOOL showIt,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddComponent2 (
        BSTR compName,
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddComponent2 (
        BSTR compName,
        double x,
        double y,
        double z,
        struct IComponent * * retval ) = 0;
    virtual HRESULT __stdcall EditMate (
        long mateType,
        long align,
        VARIANT_BOOL flip,
        double dist,
        double angle ) = 0;
    virtual HRESULT __stdcall InsertDerivedPattern (
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall ResolveAllLightWeightComponents (
        VARIANT_BOOL warnUser,
        long * result ) = 0;
    virtual HRESULT __stdcall GetLightWeightComponentCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall InsertCavity3 (
        double scaleFactor,
        long scaleType,
        long keepPieceIndex ) = 0;
    virtual HRESULT __stdcall ComponentReload2 (
        IDispatch * component,
        VARIANT_BOOL ReadOnly,
        long options,
        long * result ) = 0;
    virtual HRESULT __stdcall IComponentReload2 (
        struct IComponent * component,
        VARIANT_BOOL ReadOnly,
        long options,
        long * result ) = 0;
    virtual HRESULT __stdcall CompConfigProperties2 (
        long Suppression,
        VARIANT_BOOL visibility,
        VARIANT_BOOL featureDetails,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddPipePenetration (
        long * status ) = 0;
    virtual HRESULT __stdcall AddPipingFitting (
        BSTR pathname,
        BSTR configName,
        short alignmentIndex,
        VARIANT_BOOL * success ) = 0;
    virtual HRESULT __stdcall IsComponentTreeValid (
        VARIANT_BOOL * isValid ) = 0;
    virtual HRESULT __stdcall ForceRebuild2 (
        VARIANT_BOOL topOnly ) = 0;
    virtual HRESULT __stdcall SetDroppedFileConfigName (
        BSTR configName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddComponents (
        VARIANT names,
        VARIANT transforms,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IAddComponents (
        long * count,
        BSTR * names,
        double * transforms,
        struct IComponent * * retval ) = 0;
    virtual HRESULT __stdcall EditPart2 (
        VARIANT_BOOL silent,
        VARIANT_BOOL allowReadOnly,
        long * information,
        long * retval ) = 0;
    virtual HRESULT __stdcall InsertCavity4 (
        double scaleFactor_x,
        double scaleFactor_y,
        double scaleFactor_z,
        VARIANT_BOOL isUniform,
        long scaleType,
        long keepPieceIndex ) = 0;
    virtual HRESULT __stdcall ToolsCheckInterference2 (
        long numComponents,
        VARIANT lpComponents,
        VARIANT_BOOL coincidentInterference,
        VARIANT * pComp,
        VARIANT * pFace ) = 0;
    virtual HRESULT __stdcall IToolsCheckInterference2 (
        long numComponents,
        struct IComponent * * lpComponents,
        VARIANT_BOOL coincidentInterference,
        VARIANT * pComp,
        VARIANT * pFace ) = 0;
    virtual HRESULT __stdcall GetDroppedAtEntity (
        IDispatch * * entity ) = 0;
    virtual HRESULT __stdcall CompConfigProperties3 (
        long Suppression,
        long Solving,
        VARIANT_BOOL visibility,
        VARIANT_BOOL featureDetails,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IGetEditTarget2 (
        struct IModelDoc2 * * retval ) = 0;
    virtual HRESULT __stdcall IAddComponent3 (
        BSTR compName,
        double x,
        double y,
        double z,
        struct IComponent2 * * retval ) = 0;
    virtual HRESULT __stdcall IComponentReload3 (
        struct IComponent2 * component,
        VARIANT_BOOL ReadOnly,
        long options,
        long * result ) = 0;
    virtual HRESULT __stdcall IAddComponents2 (
        long * count,
        BSTR * names,
        double * transforms,
        struct IComponent2 * * retval ) = 0;
    virtual HRESULT __stdcall IToolsCheckInterference3 (
        long numComponents,
        struct IComponent2 * * lpComponents,
        VARIANT_BOOL coincidentInterference,
        VARIANT * pComp,
        VARIANT * pFace ) = 0;
    virtual HRESULT __stdcall SetDroppedFileName (
        BSTR fileName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetDragOperator (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetDragOperator (
        struct IDragOperator * * retval ) = 0;
    virtual HRESULT __stdcall ViewFeatureManagerFeatureDetail (
        VARIANT_BOOL Detail ) = 0;
    virtual HRESULT __stdcall InsertJoin2 (
        VARIANT_BOOL HideParts,
        VARIANT_BOOL ForceContact,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DissolveSubAssembly (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_EnablePresentation (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_EnablePresentation (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall SetComponentState (
        long suppressionState,
        VARIANT compArr,
        long configOption,
        BSTR whichConfig,
        VARIANT_BOOL saveClosedDocs,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISetComponentState (
        long suppressionState,
        long numComps,
        struct IComponent2 * * compArr,
        long configOption,
        BSTR whichConfig,
        VARIANT_BOOL saveClosedDocs,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ReplaceComponents (
        BSTR fileName,
        BSTR configName,
        VARIANT_BOOL replaceAllInstance,
        VARIANT_BOOL reAttachMates,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetVisibleComponentsInView (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetVisibleComponentsInViewCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetVisibleComponentsInView (
        long count,
        struct IComponent2 * * component ) = 0;
    virtual HRESULT __stdcall MakeLightWeight ( ) = 0;
    virtual HRESULT __stdcall GetBox (
        long options,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetBox (
        long options,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetFeatureScopeCount (
        struct IFeature * featureIn,
        long * retval ) = 0;
    virtual HRESULT __stdcall GetFeatureScope (
        struct IFeature * featureIn,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetFeatureScope (
        struct IFeature * featureIn,
        long numComponents,
        struct IComponent2 * * retval ) = 0;
};

struct __declspec(uuid("83a33d4e-27c5-11ce-bfd4-00400513bb57"))
IMember : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Dummy001 (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall put_Dummy001 (
        BSTR retval ) = 0;
    virtual HRESULT __stdcall Dummy002 ( ) = 0;
    virtual HRESULT __stdcall Dummy007 ( ) = 0;
    virtual HRESULT __stdcall Dummy003 ( ) = 0;
    virtual HRESULT __stdcall Dummy004 ( ) = 0;
    virtual HRESULT __stdcall Dummy008 ( ) = 0;
    virtual HRESULT __stdcall Dummy005 ( ) = 0;
    virtual HRESULT __stdcall Dummy006 ( ) = 0;
    virtual HRESULT __stdcall Dummy009 ( ) = 0;
    virtual HRESULT __stdcall Dummy010 ( ) = 0;
    virtual HRESULT __stdcall Dummy011 ( ) = 0;
};

struct __declspec(uuid("e0aace0f-3a47-437e-99b4-9330cd6186ba"))
IDragOperator : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_IsRelaxationEval (
        VARIANT_BOOL * Method ) = 0;
    virtual HRESULT __stdcall put_IsRelaxationEval (
        VARIANT_BOOL Method ) = 0;
    virtual HRESULT __stdcall get_DragMode (
        short * mode ) = 0;
    virtual HRESULT __stdcall put_DragMode (
        short mode ) = 0;
    virtual HRESULT __stdcall get_IsDragSpecific (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_IsDragSpecific (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_TransformType (
        short * type ) = 0;
    virtual HRESULT __stdcall put_TransformType (
        short type ) = 0;
    virtual HRESULT __stdcall get_IsDragByRay (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_IsDragByRay (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_CollisionDetectionEnabled (
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall put_CollisionDetectionEnabled (
        VARIANT_BOOL result ) = 0;
    virtual HRESULT __stdcall get_HighlightClashes (
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall put_HighlightClashes (
        VARIANT_BOOL result ) = 0;
    virtual HRESULT __stdcall get_HearClashes (
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall put_HearClashes (
        VARIANT_BOOL result ) = 0;
    virtual HRESULT __stdcall get_ApplyToThisConfiguration (
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall put_ApplyToThisConfiguration (
        VARIANT_BOOL result ) = 0;
    virtual HRESULT __stdcall get_IgnoreComplexSurfaces (
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall put_IgnoreComplexSurfaces (
        VARIANT_BOOL result ) = 0;
    virtual HRESULT __stdcall get_SmartMating (
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall put_SmartMating (
        VARIANT_BOOL result ) = 0;
    virtual HRESULT __stdcall get_DynamicClearanceEnabled (
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall put_DynamicClearanceEnabled (
        VARIANT_BOOL result ) = 0;
    virtual HRESULT __stdcall AddComponent (
        IDispatch * pDisp,
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall IAddComponent (
        struct IComponent2 * pComp,
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall BeginDrag (
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall EndDrag (
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall Drag (
        IDispatch * pXform,
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall IDrag (
        struct IMathTransform * pXform,
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall AddDynamicClearance (
        IDispatch * comp1,
        IDispatch * comp2,
        double Value,
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL showDim,
        long * nIndex ) = 0;
    virtual HRESULT __stdcall IAddDynamicClearance (
        struct IComponent2 * comp1,
        struct IComponent2 * comp2,
        double Value,
        VARIANT_BOOL appendFlag,
        VARIANT_BOOL showDim,
        long * nIndex ) = 0;
    virtual HRESULT __stdcall get_Clearance (
        long nIndex,
        double * rvalue ) = 0;
    virtual HRESULT __stdcall CollisionDetection (
        VARIANT entityArray,
        VARIANT_BOOL partOnly,
        VARIANT_BOOL stopAt,
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall ICollisionDetection (
        long count,
        struct IComponent2 * * componentArray,
        VARIANT_BOOL partOnly,
        VARIANT_BOOL stopAt,
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall GetDragPoint (
        VARIANT * point,
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall SetDragPoint (
        VARIANT point,
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall IGetDragPoint (
        double * point,
        VARIANT_BOOL * result ) = 0;
    virtual HRESULT __stdcall ISetDragPoint (
        double * point,
        VARIANT_BOOL * result ) = 0;
};

struct __declspec(uuid("83a33d33-27c5-11ce-bfd4-00400513bb57"))
IDrawingDoc : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall NewNote (
        BSTR text,
        double height ) = 0;
    virtual HRESULT __stdcall NewSheet (
        BSTR Name,
        short paperSize,
        short templateIn,
        double scale1,
        double Scale2 ) = 0;
    virtual HRESULT __stdcall SetupSheet (
        BSTR Name,
        short paperSize,
        short templateIn,
        double scale1,
        double Scale2 ) = 0;
    virtual HRESULT __stdcall NewGtol (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall INewGtol (
        struct IGtol * * retval ) = 0;
    virtual HRESULT __stdcall EditSelectedGtol (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IEditSelectedGtol (
        struct IGtol * * retval ) = 0;
    virtual HRESULT __stdcall CreateLinearDim (
        VARIANT p0,
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT p4,
        double angle,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateAngDim (
        VARIANT vP0,
        VARIANT vP1,
        VARIANT vP2,
        VARIANT vP3,
        VARIANT vP4,
        VARIANT vP5,
        VARIANT vP6,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateDiamDim (
        double dimVal,
        VARIANT vP0,
        VARIANT vP1,
        VARIANT vP2,
        VARIANT vP3,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateViewport (
        double LowerLeftX,
        double LowerLeftY,
        double UpperRightX,
        double UpperRightY,
        short sketchSize,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall ActivateView (
        BSTR viewname,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Create1stAngleViews (
        BSTR ModelName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Create3rdAngleViews (
        BSTR ModelName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateDrawViewFromModelView (
        BSTR ModelName,
        BSTR viewname,
        double locX,
        double locY,
        double locZ,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateUnfoldedViewAt (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateText (
        BSTR textString,
        double textX,
        double textY,
        double textZ,
        double textHeight,
        double textAngle,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall EditRebuild ( ) = 0;
    virtual HRESULT __stdcall ViewFullPage ( ) = 0;
    virtual HRESULT __stdcall Dummy018 ( ) = 0;
    virtual HRESULT __stdcall CreateSectionView ( ) = 0;
    virtual HRESULT __stdcall SheetNext ( ) = 0;
    virtual HRESULT __stdcall Dimensions ( ) = 0;
    virtual HRESULT __stdcall InsertGroup ( ) = 0;
    virtual HRESULT __stdcall SheetPrevious ( ) = 0;
    virtual HRESULT __stdcall AlignVert ( ) = 0;
    virtual HRESULT __stdcall AlignHorz ( ) = 0;
    virtual HRESULT __stdcall InsertRefDim ( ) = 0;
    virtual HRESULT __stdcall MakeSectionLine ( ) = 0;
    virtual HRESULT __stdcall InsertBaseDim ( ) = 0;
    virtual HRESULT __stdcall EditSketch ( ) = 0;
    virtual HRESULT __stdcall CreateDetailView ( ) = 0;
    virtual HRESULT __stdcall CreateAuxiliaryView ( ) = 0;
    virtual HRESULT __stdcall StartDrawing ( ) = 0;
    virtual HRESULT __stdcall EndDrawing ( ) = 0;
    virtual HRESULT __stdcall GetFirstView (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetFirstView (
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall GetInsertionPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall AttachDimensions ( ) = 0;
    virtual HRESULT __stdcall InsertModelDimensions (
        long option ) = 0;
    virtual HRESULT __stdcall EditTemplate ( ) = 0;
    virtual HRESULT __stdcall InsertOrdinate ( ) = 0;
    virtual HRESULT __stdcall UnsuppressView ( ) = 0;
    virtual HRESULT __stdcall HideShowDrawingViews ( ) = 0;
    virtual HRESULT __stdcall SuppressView ( ) = 0;
    virtual HRESULT __stdcall AlignOrdinate ( ) = 0;
    virtual HRESULT __stdcall SketchDim ( ) = 0;
    virtual HRESULT __stdcall CenterMark ( ) = 0;
    virtual HRESULT __stdcall EditSheet ( ) = 0;
    virtual HRESULT __stdcall InsertHorizontalOrdinate ( ) = 0;
    virtual HRESULT __stdcall EditOrdinate ( ) = 0;
    virtual HRESULT __stdcall InsertVerticalOrdinate ( ) = 0;
    virtual HRESULT __stdcall ChangeOrdDir ( ) = 0;
    virtual HRESULT __stdcall GetLineFontCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineFontName (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetLineFontInfo (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall ICreateLinearDim (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * p4,
        double angle,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot ) = 0;
    virtual HRESULT __stdcall ICreateAngDim (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * p4,
        double * P5,
        double * P6,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot ) = 0;
    virtual HRESULT __stdcall ICreateDiamDim (
        double DimValue,
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot ) = 0;
    virtual HRESULT __stdcall IGetInsertionPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall CreateCompoundNote (
        double height,
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateCompoundNote (
        double height,
        double x,
        double y,
        double z,
        struct INote * * retval ) = 0;
    virtual HRESULT __stdcall CreateOrdinateDim (
        VARIANT p0,
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT p4,
        double angle,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICreateOrdinateDim (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * p4,
        double angle,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot ) = 0;
    virtual HRESULT __stdcall InsertNewNote (
        BSTR text,
        VARIANT_BOOL noLeader,
        VARIANT_BOOL balloonNote,
        VARIANT_BOOL bentLeader,
        short arrowStyle,
        short leaderSide ) = 0;
    virtual HRESULT __stdcall AddCenterMark (
        double cmSize,
        VARIANT_BOOL cmShowLines,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertWeldSymbol (
        BSTR dim1,
        BSTR symbol,
        BSTR dim2,
        VARIANT_BOOL symmetric,
        VARIANT_BOOL fieldWeld,
        VARIANT_BOOL showOtherSide,
        VARIANT_BOOL dashOnTop,
        VARIANT_BOOL peripheral,
        VARIANT_BOOL hasProcess,
        BSTR processValue ) = 0;
    virtual HRESULT __stdcall InsertSurfaceFinishSymbol (
        long symType,
        long leaderType,
        double locX,
        double locY,
        double locZ,
        long laySymbol,
        long arrowType,
        BSTR machAllowance,
        BSTR otherVals,
        BSTR prodMethod,
        BSTR sampleLen,
        BSTR maxRoughness,
        BSTR minRoughness,
        BSTR roughnessSpacing,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ModifySurfaceFinishSymbol (
        long symType,
        long leaderType,
        double locX,
        double locY,
        double locZ,
        long laySymbol,
        long arrowType,
        BSTR machAllowance,
        BSTR otherVals,
        BSTR prodMethod,
        BSTR sampleLen,
        BSTR maxRoughness,
        BSTR minRoughness,
        BSTR roughnessSpacing,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetCurrentSheet (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetCurrentSheet (
        struct ISheet * * retval ) = 0;
    virtual HRESULT __stdcall CreateConstructionGeometry ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayHidden ( ) = 0;
    virtual HRESULT __stdcall InsertBreakHorizontal ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayWireframe ( ) = 0;
    virtual HRESULT __stdcall BreakLineZigZagCut ( ) = 0;
    virtual HRESULT __stdcall BreakView ( ) = 0;
    virtual HRESULT __stdcall ViewDisplayHiddengreyed ( ) = 0;
    virtual HRESULT __stdcall ViewTangentEdges ( ) = 0;
    virtual HRESULT __stdcall BreakLineSplineCut ( ) = 0;
    virtual HRESULT __stdcall InsertBreakVertical ( ) = 0;
    virtual HRESULT __stdcall UnBreakView ( ) = 0;
    virtual HRESULT __stdcall BreakLineStraightCut ( ) = 0;
    virtual HRESULT __stdcall InsertDatumTag ( ) = 0;
    virtual HRESULT __stdcall ToggleGrid ( ) = 0;
    virtual HRESULT __stdcall FlipSectionLine ( ) = 0;
    virtual HRESULT __stdcall FeatureByName (
        BSTR Name,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IFeatureByName (
        BSTR Name,
        struct IFeature * * retval ) = 0;
    virtual HRESULT __stdcall NewSheet2 (
        BSTR Name,
        long paperSize,
        long templateIn,
        double scale1,
        double Scale2,
        VARIANT_BOOL firstAngle,
        BSTR templateName,
        double width,
        double height,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateLinearDim2 (
        VARIANT p0,
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT p4,
        double val,
        long primPrec,
        BSTR text,
        VARIANT TextPoint,
        double angle,
        double textHeight,
        BSTR prefix,
        BSTR suffix,
        BSTR callout1,
        BSTR callout2,
        long tolType,
        BSTR tolMin,
        BSTR tolMax,
        long tolPrec,
        double arrowSize,
        long arrowStyle,
        long arrowDir,
        double witnessGap,
        double witnessOvershoot,
        VARIANT_BOOL dualDisplay,
        long dualPrec,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICreateLinearDim2 (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * p4,
        double val,
        long primPrec,
        BSTR text,
        double * TextPoint,
        double angle,
        double textHeight,
        BSTR prefix,
        BSTR suffix,
        BSTR callout1,
        BSTR callout2,
        long tolType,
        BSTR tolMin,
        BSTR tolMax,
        long tolPrec,
        double arrowSize,
        long arrowStyle,
        long arrowDir,
        double witnessGap,
        double witnessOvershoot,
        VARIANT_BOOL dualDisplay,
        long dualPrecision ) = 0;
    virtual HRESULT __stdcall CreateAngDim2 (
        VARIANT vP0,
        VARIANT vP1,
        VARIANT vP2,
        VARIANT vP3,
        VARIANT vP4,
        VARIANT vP5,
        VARIANT vP6,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        VARIANT vTextPoint,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICreateAngDim2 (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * p4,
        double * P5,
        double * P6,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        double * TextPoint ) = 0;
    virtual HRESULT __stdcall CreateDiamDim2 (
        double dimVal,
        VARIANT vP0,
        VARIANT vP1,
        VARIANT vP2,
        VARIANT vP3,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        VARIANT vTextPoint,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICreateDiamDim2 (
        double DimValue,
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        double * TextPoint ) = 0;
    virtual HRESULT __stdcall CreateOrdinateDim2 (
        VARIANT p0,
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT p4,
        double angle,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        VARIANT P5,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICreateOrdinateDim2 (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * p4,
        double angle,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        double * P5 ) = 0;
    virtual HRESULT __stdcall InsertNewNote2 (
        BSTR upperText,
        BSTR lowerText,
        VARIANT_BOOL noLeader,
        VARIANT_BOOL bentLeader,
        short arrowStyle,
        short leaderSide,
        double angle,
        short balloonStyle,
        short balloonFit,
        short upperNoteContent,
        short lowerNoteContent ) = 0;
    virtual HRESULT __stdcall DragModelDimension (
        BSTR viewname,
        short dropEffect,
        double x,
        double y,
        double z ) = 0;
    virtual HRESULT __stdcall CreateViewport2 (
        double LowerLeftX,
        double LowerLeftY,
        double UpperRightX,
        double UpperRightY,
        short sketchSize,
        double Scale,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetupSheet2 (
        BSTR Name,
        short paperSize,
        short templateIn,
        double scale1,
        double Scale2,
        long skPointsFlag ) = 0;
    virtual HRESULT __stdcall OnComponentProperties ( ) = 0;
    virtual HRESULT __stdcall GetLineFontCount2 (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineFontName2 (
        long index,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall GetLineFontInfo2 (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall SetLineStyle (
        BSTR styleName ) = 0;
    virtual HRESULT __stdcall SetLineWidth (
        long width ) = 0;
    virtual HRESULT __stdcall SetLineColor (
        long Color ) = 0;
    virtual HRESULT __stdcall ShowEdge ( ) = 0;
    virtual HRESULT __stdcall HideEdge ( ) = 0;
    virtual HRESULT __stdcall AddHoleCallout ( ) = 0;
    virtual HRESULT __stdcall GetPenCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPenInfo (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetPenInfo (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetLineFontId (
        long index,
        long * retval ) = 0;
    virtual HRESULT __stdcall CreateAuxiliaryViewAt (
        double x,
        double y,
        double z,
        VARIANT_BOOL notAligned,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateDetailViewAt (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateSectionViewAt (
        double x,
        double y,
        double z,
        VARIANT_BOOL notAligned,
        VARIANT_BOOL isOffsetSection,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateUnfoldedViewAt2 (
        double x,
        double y,
        double z,
        VARIANT_BOOL notAligned,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetupSheet3 (
        BSTR Name,
        long paperSize,
        long templateIn,
        double scale1,
        double Scale2,
        VARIANT_BOOL firstAngle,
        BSTR templateName,
        double width,
        double height,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertModelAnnotations (
        long option,
        VARIANT_BOOL allTypes,
        long types,
        VARIANT_BOOL allViews,
        VARIANT_BOOL * ok ) = 0;
    virtual HRESULT __stdcall InsertCustomSymbol (
        BSTR symbolPath ) = 0;
    virtual HRESULT __stdcall GetSheetCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetSheetNames (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSheetNames (
        long * count,
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall ActivateSheet (
        BSTR Name,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateText2 (
        BSTR textString,
        double textX,
        double textY,
        double textZ,
        double textHeight,
        double textAngle,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateText2 (
        BSTR textString,
        double textX,
        double textY,
        double textZ,
        double textHeight,
        double textAngle,
        struct INote * * retval ) = 0;
    virtual HRESULT __stdcall NewSheet3 (
        BSTR Name,
        long paperSize,
        long templateIn,
        double scale1,
        double Scale2,
        VARIANT_BOOL firstAngle,
        BSTR templateName,
        double width,
        double height,
        BSTR propertyViewName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetupSheet4 (
        BSTR Name,
        long paperSize,
        long templateIn,
        double scale1,
        double Scale2,
        VARIANT_BOOL firstAngle,
        BSTR templateName,
        double width,
        double height,
        BSTR propertyViewName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateLinearDim3 (
        VARIANT p0,
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT p4,
        double val,
        long primPrec,
        BSTR text,
        VARIANT TextPoint,
        double angle,
        double textHeight,
        BSTR prefix,
        BSTR suffix,
        BSTR callout1,
        BSTR callout2,
        long tolType,
        BSTR tolMin,
        BSTR tolMax,
        long tolPrec,
        double arrowSize,
        long arrowStyle,
        long arrowDir,
        double witnessGap,
        double witnessOvershoot,
        VARIANT_BOOL dualDisplay,
        long dualPrec,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateLinearDim3 (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * p4,
        double val,
        long primPrec,
        BSTR text,
        double * TextPoint,
        double angle,
        double textHeight,
        BSTR prefix,
        BSTR suffix,
        BSTR callout1,
        BSTR callout2,
        long tolType,
        BSTR tolMin,
        BSTR tolMax,
        long tolPrec,
        double arrowSize,
        long arrowStyle,
        long arrowDir,
        double witnessGap,
        double witnessOvershoot,
        VARIANT_BOOL dualDisplay,
        long dualPrecision,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall CreateAngDim3 (
        VARIANT vP0,
        VARIANT vP1,
        VARIANT vP2,
        VARIANT vP3,
        VARIANT vP4,
        VARIANT vP5,
        VARIANT vP6,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        VARIANT vTextPoint,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateAngDim3 (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * p4,
        double * P5,
        double * P6,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        double * TextPoint,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall CreateDiamDim3 (
        double dimVal,
        VARIANT vP0,
        VARIANT vP1,
        VARIANT vP2,
        VARIANT vP3,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        VARIANT vTextPoint,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateDiamDim3 (
        double DimValue,
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        double * TextPoint,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall CreateOrdinateDim3 (
        VARIANT p0,
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT p4,
        double angle,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        VARIANT P5,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateOrdinateDim3 (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * p4,
        double angle,
        double arrowSize,
        BSTR text,
        double textHeight,
        double witnessGap,
        double witnessOvershoot,
        double * P5,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall ForceRebuild ( ) = 0;
    virtual HRESULT __stdcall AddOrdinateDimension (
        long DimType,
        double locX,
        double locY,
        double locZ,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateLayer (
        BSTR layerName,
        BSTR layerDesc,
        long layerColor,
        long layerStyle,
        long layerWidth,
        VARIANT_BOOL bOn,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetCurrentLayer (
        BSTR layerName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DrawingViewRotate (
        double newAngle,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateDetailViewAt2 (
        double x,
        double y,
        double z,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall RestoreRotation ( ) = 0;
    virtual HRESULT __stdcall GetEditSheet (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall TranslateDrawing (
        double deltaX,
        double deltaY ) = 0;
    virtual HRESULT __stdcall Create1stAngleViews2 (
        BSTR ModelName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Create3rdAngleViews2 (
        BSTR ModelName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall HideShowDimensions ( ) = 0;
    virtual HRESULT __stdcall CreateLinearDim4 (
        VARIANT p0,
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT p4,
        VARIANT TextPoint,
        double val,
        double angle,
        double textHeight,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateLinearDim4 (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * p4,
        double * TextPoint,
        double val,
        double angle,
        double textHeight,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall CreateDiamDim4 (
        VARIANT p0,
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT TextPoint,
        double val,
        double textHeight,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateDiamDim4 (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * TextPoint,
        double val,
        double textHeight,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall CreateOrdinateDim4 (
        VARIANT p0,
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT p4,
        VARIANT P5,
        double val,
        double angle,
        double textHeight,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateOrdinateDim4 (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * p4,
        double * P5,
        double val,
        double angle,
        double textHeight,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall CreateAngDim4 (
        VARIANT p0,
        VARIANT P1,
        VARIANT P2,
        VARIANT P3,
        VARIANT p4,
        VARIANT P5,
        VARIANT P6,
        VARIANT TextPoint,
        double textHeight,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateAngDim4 (
        double * p0,
        double * P1,
        double * P2,
        double * P3,
        double * p4,
        double * P5,
        double * P6,
        double * TextPoint,
        double textHeight,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall CreateDetailViewAt3 (
        double x,
        double y,
        double z,
        long Style,
        double scale1,
        double Scale2,
        BSTR labelIn,
        long showtype,
        VARIANT_BOOL fulloutline,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateDetailViewAt3 (
        double x,
        double y,
        double z,
        long Style,
        double scale1,
        double Scale2,
        BSTR labelIn,
        long showtype,
        VARIANT_BOOL fulloutline,
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall CreateSectionViewAt2 (
        double x,
        double y,
        double z,
        VARIANT_BOOL notAligned,
        VARIANT_BOOL isOffsetSection,
        BSTR Label,
        VARIANT_BOOL chgdirection,
        VARIANT_BOOL scwithmodel,
        VARIANT_BOOL partial,
        VARIANT_BOOL dispsurfcut,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSectionViewAt2 (
        double x,
        double y,
        double z,
        VARIANT_BOOL notAligned,
        VARIANT_BOOL isOffsetSection,
        BSTR Label,
        VARIANT_BOOL chgdirection,
        VARIANT_BOOL scwithmodel,
        VARIANT_BOOL partial,
        VARIANT_BOOL dispsurfcut,
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall CreateAuxiliaryViewAt2 (
        double x,
        double y,
        double z,
        VARIANT_BOOL notAligned,
        BSTR Label,
        VARIANT_BOOL showarrow,
        VARIANT_BOOL flip,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateAuxiliaryViewAt2 (
        double x,
        double y,
        double z,
        VARIANT_BOOL notAligned,
        BSTR Label,
        VARIANT_BOOL showarrow,
        VARIANT_BOOL flip,
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall MakeCustomSymbol ( ) = 0;
    virtual HRESULT __stdcall ExplodeCustomSymbol ( ) = 0;
    virtual HRESULT __stdcall SaveCustomSymbol (
        BSTR filenameIn ) = 0;
    virtual HRESULT __stdcall CreateBreakOutSection (
        double depth,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertThreadCallout ( ) = 0;
    virtual HRESULT __stdcall CreateFlatPatternViewFromModelView (
        BSTR ModelName,
        BSTR configName,
        double locX,
        double locY,
        double locZ,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ChangeRefConfigurationOfFlatPatternView (
        BSTR ModelName,
        BSTR configName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddHoleCallout2 (
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddHoleCallout2 (
        double x,
        double y,
        double z,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall EditCenterMarkProperties (
        double angle,
        double size,
        VARIANT_BOOL lines,
        VARIANT_BOOL docSettings ) = 0;
    virtual HRESULT __stdcall InsertDowelSymbol (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertDowelSymbol (
        struct IDowelSymbol * * retval ) = 0;
    virtual HRESULT __stdcall InsertMultiJogLeader ( ) = 0;
    virtual HRESULT __stdcall get_HiddenViewsVisible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_HiddenViewsVisible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall AddChamferDim (
        double x,
        double y,
        double z,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddChamferDim (
        double x,
        double y,
        double z,
        struct IDisplayDimension * * retval ) = 0;
    virtual HRESULT __stdcall MakeCustomSymbol2 (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IMakeCustomSymbol2 (
        struct ICustomSymbol * * retval ) = 0;
    virtual HRESULT __stdcall InsertCustomSymbol2 (
        BSTR fileName,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IInsertCustomSymbol2 (
        BSTR fileName,
        struct ICustomSymbol * * retval ) = 0;
    virtual HRESULT __stdcall CreateCustomSymbol (
        VARIANT segments,
        VARIANT points,
        VARIANT Notes,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateCustomSymbol (
        long SegmentCount,
        struct ISketchSegment * * segments,
        long PointCount,
        struct ISketchPoint * * points,
        long NoteCount,
        struct INote * * Notes,
        struct ICustomSymbol * * retval ) = 0;
    virtual HRESULT __stdcall ViewDisplayShaded ( ) = 0;
    virtual HRESULT __stdcall ChangeComponentLayer (
        BSTR layerName,
        VARIANT_BOOL allViews ) = 0;
    virtual HRESULT __stdcall get_AutomaticViewUpdate (
        VARIANT_BOOL * Update ) = 0;
    virtual HRESULT __stdcall put_AutomaticViewUpdate (
        VARIANT_BOOL Update ) = 0;
    virtual HRESULT __stdcall get_ActiveDrawingView (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_IActiveDrawingView (
        struct IView * * retval ) = 0;
    virtual HRESULT __stdcall InsertCenterMark (
        VARIANT_BOOL useDoc,
        double size,
        VARIANT_BOOL ShowLines,
        double angle,
        struct ICenterMark * * retval ) = 0;
    virtual HRESULT __stdcall CreateFlatPatternViewFromModelView2 (
        BSTR ModelName,
        BSTR configName,
        double locX,
        double locY,
        double locZ,
        VARIANT_BOOL hideBendLines,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ViewHlrQuality ( ) = 0;
    virtual HRESULT __stdcall ViewModelEdges ( ) = 0;
    virtual HRESULT __stdcall GetBlockDefinitionCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetBlockDefinitions (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetBlockDefinitions (
        long count,
        struct IBlockDefinition * * retval ) = 0;
    virtual HRESULT __stdcall GetBlockDefinition (
        BSTR Name,
        struct IBlockDefinition * * retval ) = 0;
    virtual HRESULT __stdcall MakeBlockDefinition (
        BSTR Name,
        BSTR XRefFileName,
        VARIANT_BOOL Instance,
        struct IBlockDefinition * * retval ) = 0;
    virtual HRESULT __stdcall CreateBlockDefinition (
        BSTR Name,
        BSTR XRefFileName,
        VARIANT_BOOL Instance,
        VARIANT segments,
        VARIANT points,
        VARIANT Notes,
        VARIANT Dimensions,
        VARIANT Blocks,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBlockDefinition (
        BSTR Name,
        BSTR XRefFileName,
        VARIANT_BOOL Instance,
        long SegmentCount,
        struct ISketchSegment * * segments,
        long PointCount,
        struct ISketchPoint * * points,
        long NoteCount,
        struct INote * * Notes,
        long DimensionCount,
        struct IDisplayDimension * * Dimensions,
        long BlockCount,
        struct IBlockInstance * * Blocks,
        struct IBlockDefinition * * retval ) = 0;
    virtual HRESULT __stdcall InsertBlock (
        BSTR fileName,
        double x,
        double y,
        double angle,
        double Scale,
        struct IBlockInstance * * retval ) = 0;
    virtual HRESULT __stdcall SaveBlock (
        BSTR fileName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ExplodeBlockInstance (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall InsertCenterMark2 (
        long Style,
        VARIANT_BOOL propagate,
        struct ICenterMark * * retval ) = 0;
    virtual HRESULT __stdcall InsertCenterLine (
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33d80-27c5-11ce-bfd4-00400513bb57"))
ISheet : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetBomTable (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetBomTable (
        struct IBomTable * * retval ) = 0;
    virtual HRESULT __stdcall GetName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetName (
        BSTR nameIn ) = 0;
    virtual HRESULT __stdcall GetTemplateName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall SetTemplateName (
        BSTR nameIn ) = 0;
    virtual HRESULT __stdcall GetProperties (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetProperties (
        double * retval ) = 0;
    virtual HRESULT __stdcall SetProperties (
        long paperSz,
        long templ,
        double scale1,
        double Scale2,
        VARIANT_BOOL firstAngle,
        double width,
        double height ) = 0;
    virtual HRESULT __stdcall GetCustomColorsCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetCustomColors (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetOLEObjectCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetOLEObjectSettings (
        long index,
        long * byteCount,
        long * aspect,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetOLEObjectSettings (
        long index,
        long * byteCount,
        long * aspect,
        double * position,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetOLEObjectData (
        long index,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetOLEObjectData (
        long index,
        unsigned char * buffer,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateOLEObject (
        long aspect,
        VARIANT position,
        VARIANT buffer,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICreateOLEObject (
        long aspect,
        double * position,
        long byteCount,
        unsigned char * buffer,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_PageSetup (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall get_IPageSetup (
        struct IPageSetup * * retval ) = 0;
    virtual HRESULT __stdcall SetScale (
        double Numerator,
        double Denominator,
        VARIANT_BOOL ScaleAnnoPosition,
        VARIANT_BOOL ScaleAnnoTextHeight,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_CustomPropertyView (
        BSTR * viewname ) = 0;
    virtual HRESULT __stdcall put_CustomPropertyView (
        BSTR viewname ) = 0;
};

struct __declspec(uuid("83a33d73-27c5-11ce-bfd4-00400513bb57"))
IModeler : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall CreateBodyFromBox (
        VARIANT boxDimArray,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBodyFromBox (
        double * boxDimArray,
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall SetTolerances (
        long * ToleranceIDArray,
        double * ToleranceValueArray,
        long NumTol,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall UnsetTolerances (
        long * ToleranceIDArray,
        long NumTol,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Restore (
        IUnknown * streamIn,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IRestore (
        IUnknown * streamIn,
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall SetInitKnitGapWidth (
        double InitGapWidth,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetInitKnitGapWidth (
        double * retval ) = 0;
    virtual HRESULT __stdcall CreateBodyFromCyl (
        VARIANT cylDimArray,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBodyFromCyl (
        double * cylDimArray,
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall CreateBodyFromCone (
        VARIANT coneDimArray,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBodyFromCone (
        double * coneDimArray,
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall CreateBrepBody (
        int type,
        int nTopologies,
        VARIANT topologies,
        VARIANT edgeToleranceArray,
        VARIANT vertexToleranceArray,
        VARIANT pointArray,
        VARIANT curveArray,
        VARIANT surfaceArray,
        int nRelations,
        VARIANT parents,
        VARIANT children,
        VARIANT senses,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBrepBody (
        int type,
        int nTopologies,
        int * topologies,
        double * edgeTolArray,
        double * vertexTolArray,
        double * pointArray,
        struct ICurve * * curveArray,
        struct ISurface * * surfaceArray,
        int nRelations,
        int * parents,
        int * children,
        int * senses,
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall CreatePlanarSurface (
        VARIANT vRootPoint,
        VARIANT vNormal,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlanarSurface (
        double * rootPoint,
        double * Normal,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateExtrusionSurface (
        IDispatch * profileCurve,
        VARIANT axisDirection,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateExtrusionSurface (
        struct ICurve * profileCurve,
        double * axisDirection,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateRevolutionSurface (
        IDispatch * profileCurve,
        VARIANT axisPoint,
        VARIANT axisDirection,
        VARIANT profileEndPtParams,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateRevolutionSurface (
        struct ICurve * profileCurve,
        double * axisPoint,
        double * axisDirection,
        double * profileEndPtParams,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateBsplineSurface (
        VARIANT props,
        VARIANT uKnots,
        VARIANT vKnots,
        VARIANT ctrlPtCoords,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBsplineSurface (
        long * Properties,
        double * UKnotArray,
        double * VKnotArray,
        double * ControlPointCoordArray,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateOffsetSurface (
        IDispatch * surfaceIn,
        double distance,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateOffsetSurface (
        struct ISurface * surfaceIn,
        double distance,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateLine (
        VARIANT rootPoint,
        VARIANT direction,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateLine (
        double * rootPoint,
        double * direction,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall CreateArc (
        VARIANT center,
        VARIANT axis,
        double radius,
        VARIANT startPoint,
        VARIANT endPoint,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateArc (
        double * center,
        double * axis,
        double radius,
        double * startPoint,
        double * endPoint,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall CreateBsplineCurve (
        VARIANT props,
        VARIANT knots,
        VARIANT ctrlPtCoords,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBsplineCurve (
        long * Properties,
        double * KnotArray,
        double * ControlPointCoordArray,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall CreatePCurve (
        IDispatch * surface,
        VARIANT props,
        VARIANT knots,
        VARIANT ctrlPtCoords,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePCurve (
        struct ISurface * surface,
        long * props,
        double * knots,
        double * ctrlPtCoords,
        struct ICurve * * retval ) = 0;
    virtual HRESULT __stdcall CreateBodiesFromSheets (
        VARIANT sheets,
        long options,
        long * error,
        VARIANT * results ) = 0;
    virtual HRESULT __stdcall ICreateBodiesFromSheets (
        long nSheets,
        IUnknown * * sheets,
        long options,
        long * nResults,
        IUnknown * * results,
        long * error ) = 0;
    virtual HRESULT __stdcall ICreateBodyFromFaces (
        long NumOfFaces,
        struct IFace * * faces,
        VARIANT_BOOL doLocalCheck,
        VARIANT_BOOL * localCheckResult,
        struct IBody * * result ) = 0;
    virtual HRESULT __stdcall FindTwoEdgeMaxDeviation (
        IDispatch * lpEdge1,
        IDispatch * lpEdge2,
        double * retval ) = 0;
    virtual HRESULT __stdcall IFindTwoEdgeMaxDeviation (
        struct IEdge * pEdge1,
        struct IEdge * pEdge2,
        double * error ) = 0;
    virtual HRESULT __stdcall CreateConicalSurface (
        VARIANT center,
        VARIANT direction,
        double radius,
        double semiAngle,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateConicalSurface (
        double * center,
        double * direction,
        double radius,
        double semiAngle,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateCylindricalSurface (
        VARIANT center,
        VARIANT direction,
        double radius,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateCylindricalSurface (
        double * center,
        double * direction,
        double radius,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateSphericalSurface (
        VARIANT center,
        double radius,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSphericalSurface (
        double * center,
        double radius,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateToroidalSurface (
        VARIANT center,
        VARIANT axis,
        VARIANT refDirection,
        double majorRadius,
        double minorRadius,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateToroidalSurface (
        double * center,
        double * axis,
        double * refDirection,
        double majorRadius,
        double minorRadius,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateBodyFromFaces2 (
        long NumOfFaces,
        VARIANT faces,
        long actionType,
        VARIANT_BOOL doLocalCheck,
        VARIANT_BOOL * localCheckResult,
        IDispatch * * result ) = 0;
    virtual HRESULT __stdcall ICreateBodyFromFaces2 (
        long NumOfFaces,
        struct IFace * * faces,
        long actionType,
        VARIANT_BOOL doLocalCheck,
        VARIANT_BOOL * localCheckResult,
        struct IBody * * result ) = 0;
    virtual HRESULT __stdcall SetToleranceValue (
        long ToleranceID,
        double NewToleranceValue,
        double * OldToleranceValue ) = 0;
    virtual HRESULT __stdcall GetToleranceValue (
        long ToleranceID,
        double * ToleranceValue ) = 0;
    virtual HRESULT __stdcall CreateSheetFromSurface (
        IDispatch * surfaceIn,
        VARIANT uvRange,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSheetFromSurface (
        struct ISurface * surfaceIn,
        double * uvRange,
        struct IBody * * retval ) = 0;
    virtual HRESULT __stdcall ImprintingFaces (
        VARIANT targetFaceArray,
        VARIANT toolFaceArray,
        long options,
        VARIANT * targetEdges,
        VARIANT * toolEdges,
        VARIANT * targetVertices,
        VARIANT * toolVertices,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IImprintingFaces (
        struct IEdge * * targetEdges,
        struct IEdge * * toolEdges,
        struct IVertex * * targetVertices,
        struct IVertex * * toolVertices ) = 0;
    virtual HRESULT __stdcall IImprintingFacesCount (
        long nTargetFaces,
        struct IFace * * targetFaceArray,
        long nToolFaces,
        struct IFace * * toolFaceArray,
        long options,
        long * nTargetEdges,
        long * ntoolEdges,
        long * ntargetVertices,
        long * toolVertices,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateSweptSurface (
        IDispatch * curveIn,
        VARIANT dir,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSweptSurface (
        struct ICurve * curveIn,
        double * dir,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall ReplaceSurfaces (
        long nFaces,
        VARIANT faceArray,
        VARIANT newSurfArray,
        VARIANT senseArray,
        double tolerance,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IReplaceSurfaces (
        long nFaces,
        struct IFace * * faceArray,
        struct ISurface * * newSurfArray,
        int * senseArray,
        double tolerance,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SplitFaceOnParam (
        IDispatch * facedisp,
        long UVFlag,
        double Parameter,
        VARIANT_BOOL * status,
        VARIANT * newFaces ) = 0;
    virtual HRESULT __stdcall ISplitFaceOnParamCount (
        struct IFace * facedisp,
        long UVFlag,
        double Parameter,
        VARIANT_BOOL * status,
        long * newFaceCount ) = 0;
    virtual HRESULT __stdcall ISplitFaceOnParam (
        struct IFace * * retval ) = 0;
    virtual HRESULT __stdcall CheckInterference (
        IDispatch * body1,
        IDispatch * body2,
        VARIANT_BOOL coincidentInterference,
        VARIANT * body1InterferedFaceArray,
        VARIANT * body2InterferedFaceArray,
        VARIANT * intersectedBodyArray,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICheckInterferenceCount (
        struct IBody * body1,
        struct IBody * body2,
        VARIANT_BOOL coincidentInterference,
        long * body1InterferedFaceCount,
        long * body2InterferedFaceCount,
        long * intersectedBodyCount,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICheckInterference (
        struct IFace * * body1InterferedFaceArray,
        struct IFace * * body2InterferedFaceArray,
        struct IBody * * intersectedBodyArray ) = 0;
    virtual HRESULT __stdcall CreateRuledSurface (
        IDispatch * curve1In,
        IDispatch * curve2In,
        VARIANT apex,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateRuledSurface (
        struct ICurve * curve1In,
        struct ICurve * curve2In,
        double * apex,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateCylindricalSurface2 (
        VARIANT center,
        VARIANT direction,
        VARIANT refDirection,
        double radius,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateCylindricalSurface2 (
        double * center,
        double * direction,
        double * refDirection,
        double radius,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateSphericalSurface2 (
        VARIANT center,
        VARIANT axis,
        VARIANT refDir,
        double radius,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSphericalSurface2 (
        double * center,
        double * axis,
        double * refDir,
        double radius,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBodyFromBox2 (
        double * boxDimArray,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall IRestore2 (
        IUnknown * streamIn,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBodyFromCyl2 (
        double * cylDimArray,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBodyFromCone2 (
        double * coneDimArray,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall ICreateBrepBody2 (
        int type,
        int nTopologies,
        int * topologies,
        double * edgeTolArray,
        double * vertexTolArray,
        double * pointArray,
        struct ICurve * * curveArray,
        struct ISurface * * surfaceArray,
        int nRelations,
        int * parents,
        int * children,
        int * senses,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall ICreateSheetFromSurface2 (
        struct ISurface * surfaceIn,
        double * uvRange,
        struct IBody2 * * retval ) = 0;
    virtual HRESULT __stdcall ICheckInterferenceCount2 (
        struct IBody2 * body1,
        struct IBody2 * body2,
        VARIANT_BOOL coincidentInterference,
        long * body1InterferedFaceCount,
        long * body2InterferedFaceCount,
        long * intersectedBodyCount,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ICreateBodyFromFaces3 (
        long NumOfFaces,
        struct IFace2 * * faces,
        long actionType,
        VARIANT_BOOL doLocalCheck,
        VARIANT_BOOL * localCheckResult,
        struct IBody2 * * result ) = 0;
    virtual HRESULT __stdcall IImprintingFacesCount2 (
        long nTargetFaces,
        struct IFace2 * * targetFaceArray,
        long nToolFaces,
        struct IFace2 * * toolFaceArray,
        long options,
        long * nTargetEdges,
        long * ntoolEdges,
        long * ntargetVertices,
        long * toolVertices,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IReplaceSurfaces2 (
        long nFaces,
        struct IFace2 * * faceArray,
        struct ISurface * * newSurfArray,
        int * senseArray,
        double tolerance,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ISplitFaceOnParamCount2 (
        struct IFace2 * facedisp,
        long UVFlag,
        double Parameter,
        VARIANT_BOOL * status,
        long * newFaceCount ) = 0;
    virtual HRESULT __stdcall ISplitFaceOnParam2 (
        struct IFace2 * * retval ) = 0;
    virtual HRESULT __stdcall ICheckInterference2 (
        struct IFace2 * * body1InterferedFaceArray,
        struct IFace2 * * body2InterferedFaceArray,
        struct IBody2 * * intersectedBodyArray ) = 0;
    virtual HRESULT __stdcall CreatePlanarSurface2 (
        VARIANT vRootPoint,
        VARIANT vNormal,
        VARIANT vRef,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreatePlanarSurface2 (
        double * rootPoint,
        double * Normal,
        double * Ref,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CreateConicalSurface2 (
        VARIANT center,
        VARIANT direction,
        VARIANT refDirection,
        double radius,
        double semiAngle,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall ICreateConicalSurface2 (
        double * center,
        double * direction,
        double * refDirection,
        double radius,
        double semiAngle,
        struct ISurface * * retval ) = 0;
    virtual HRESULT __stdcall CopyWizardHole (
        IDispatch * sourceHole,
        IDispatch * destinationHole,
        VARIANT_BOOL rebuildOwner,
        long * status ) = 0;
    virtual HRESULT __stdcall ICopyWizardHole (
        struct IFeature * sourceHole,
        struct IFeature * destinationHole,
        VARIANT_BOOL rebuildOwner,
        long * status ) = 0;
    virtual HRESULT __stdcall DeleteFacesFromSheetBody (
        VARIANT faceVar,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall IDeleteFacesFromSheetBody (
        long count,
        struct IFace2 * * faceVar,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall CreateWireBody (
        VARIANT entVar,
        long option,
        struct IBody2 * * bodyOut ) = 0;
    virtual HRESULT __stdcall ICreateWireBody (
        long count,
        IDispatch * * entArr,
        long option,
        struct IBody2 * * bodyOut ) = 0;
};

struct __declspec(uuid("83a33d78-27c5-11ce-bfd4-00400513bb57"))
IEnvironment : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetSymEdgeCounts (
        BSTR symId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSymEdgeCounts (
        BSTR symId,
        short * retval ) = 0;
    virtual HRESULT __stdcall GetSymLines (
        BSTR symId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSymLines (
        BSTR symId,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSymArcs (
        BSTR symId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSymArcs (
        BSTR symId,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSymCircles (
        BSTR symId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSymCircles (
        BSTR symId,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSymTextPoints (
        BSTR symId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSymTextPoints (
        BSTR symId,
        double * retval ) = 0;
    virtual HRESULT __stdcall GetSymText (
        BSTR symId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall GetSymTriangles (
        BSTR symId,
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSymTriangles (
        BSTR symId,
        double * retval ) = 0;
};

struct __declspec(uuid("83a33db3-27c5-11ce-bfd4-00400513bb57"))
IEnumDocuments : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct IModelDoc * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumDocuments * * ppenum ) = 0;
};

struct __declspec(uuid("f7d97f80-162e-11d4-aeab-00c04fa0ac51"))
IMathUtility : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall CreateTransform (
        VARIANT ArrayDataIn,
        IDispatch * * TransformObjOut ) = 0;
    virtual HRESULT __stdcall ICreateTransform (
        double * ArrayDataIn,
        struct IMathTransform * * TransformObjOut ) = 0;
    virtual HRESULT __stdcall CreateTransformRotateAxis (
        IDispatch * pointObjIn,
        IDispatch * vectorObjIn,
        double angle,
        IDispatch * * TransformObjOut ) = 0;
    virtual HRESULT __stdcall ICreateTransformRotateAxis (
        struct IMathPoint * pointObjIn,
        struct IMathVector * vectorObjIn,
        double angle,
        struct IMathTransform * * TransformObjOut ) = 0;
    virtual HRESULT __stdcall CreatePoint (
        VARIANT ArrayDataIn,
        IDispatch * * pointObjOut ) = 0;
    virtual HRESULT __stdcall ICreatePoint (
        double * ArrayDataIn,
        struct IMathPoint * * pointObjOut ) = 0;
    virtual HRESULT __stdcall CreateVector (
        VARIANT ArrayDataIn,
        IDispatch * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall ICreateVector (
        double * ArrayDataIn,
        struct IMathVector * * vectorObjOut ) = 0;
    virtual HRESULT __stdcall ComposeTransform (
        struct IMathVector * xVec,
        struct IMathVector * yVec,
        struct IMathVector * zVec,
        struct IMathVector * transVec,
        double Scale,
        struct IMathTransform * * xformOut ) = 0;
};

struct __declspec(uuid("76d82d71-339a-4d1c-91a1-f6ac0cf9b625"))
IEnumDocuments2 : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct IModelDoc2 * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumDocuments2 * * ppenum ) = 0;
};

struct __declspec(uuid("b92e624a-0dc3-11d5-af1e-00c04f603faf"))
IPropertyManagerPage2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall SetTitleBitmap (
        long ModuleHandle,
        long Identifier,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall AddGroupBox (
        long id,
        BSTR Caption,
        long options,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddGroupBox (
        long id,
        BSTR Caption,
        long options,
        struct IPropertyManagerPageGroup * * retval ) = 0;
    virtual HRESULT __stdcall AddControl (
        long id,
        short ControlType,
        BSTR Caption,
        short LeftAlign,
        long options,
        BSTR Tip,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddControl (
        long id,
        short ControlType,
        BSTR Caption,
        short LeftAlign,
        long options,
        BSTR Tip,
        struct IPropertyManagerPageControl * * retval ) = 0;
    virtual HRESULT __stdcall SetMessage (
        BSTR Message,
        long visibility,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall Show (
        long * retval ) = 0;
    virtual HRESULT __stdcall Close (
        VARIANT_BOOL Okay ) = 0;
    virtual HRESULT __stdcall EnableButton (
        long whichOne,
        VARIANT_BOOL Enable,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("2e23d2ee-0f57-11d5-af1f-00c04f603faf"))
IPropertyManagerPageGroup : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall get_Expanded (
        VARIANT_BOOL * Expanded ) = 0;
    virtual HRESULT __stdcall put_Expanded (
        VARIANT_BOOL Expanded ) = 0;
    virtual HRESULT __stdcall AddControl (
        long id,
        short ControlType,
        BSTR Caption,
        short LeftAlign,
        long options,
        BSTR Tip,
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IAddControl (
        long id,
        short ControlType,
        BSTR Caption,
        short LeftAlign,
        long options,
        BSTR Tip,
        struct IPropertyManagerPageControl * * retval ) = 0;
};

struct __declspec(uuid("ced9caf4-16fa-11d5-af24-00c04f603faf"))
IPropertyManagerPageControl : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall get_enabled (
        VARIANT_BOOL * enabled ) = 0;
    virtual HRESULT __stdcall put_enabled (
        VARIANT_BOOL enabled ) = 0;
    virtual HRESULT __stdcall SetStandardPictureLabel (
        long bitmap,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetPictureLabelByName (
        BSTR ColorBitmap,
        BSTR MaskBitmap,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Tip (
        BSTR * Tip ) = 0;
    virtual HRESULT __stdcall put_Tip (
        BSTR Tip ) = 0;
    virtual HRESULT __stdcall get_left (
        short * x ) = 0;
    virtual HRESULT __stdcall put_left (
        short x ) = 0;
    virtual HRESULT __stdcall get_width (
        short * width ) = 0;
    virtual HRESULT __stdcall put_width (
        short width ) = 0;
    virtual HRESULT __stdcall get_top (
        short * y ) = 0;
    virtual HRESULT __stdcall put_top (
        short y ) = 0;
};

struct __declspec(uuid("83a33d86-27c5-11ce-bfd4-00400513bb57"))
IRefAxis : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetRefAxisParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetRefAxisParams (
        double * retval ) = 0;
};

struct __declspec(uuid("83a33d8a-27c5-11ce-bfd4-00400513bb57"))
IMate : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetMateParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMateParams (
        long * mateType,
        long * alignFlag,
        long * canBeFlipped ) = 0;
    virtual HRESULT __stdcall GetMateDimensionValue (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMateDimensionValue (
        double * DimValue ) = 0;
    virtual HRESULT __stdcall GetMateEntities (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMateEntities (
        struct IMateEntity * * entity1,
        struct IMateEntity * * entity2 ) = 0;
    virtual HRESULT __stdcall GetEntity (
        int whichOne,
        IDispatch * * entity ) = 0;
    virtual HRESULT __stdcall IGetEntity (
        int whichOne,
        struct IEntity * * entity ) = 0;
};

struct __declspec(uuid("83a33d8c-27c5-11ce-bfd4-00400513bb57"))
IMateEntity : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetMember (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetMember (
        struct IMember * * retval ) = 0;
    virtual HRESULT __stdcall GetEntityType (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetEntityParams (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEntityParams (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetComponent (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetComponent (
        struct IComponent * * retval ) = 0;
    virtual HRESULT __stdcall GetComponentName (
        BSTR * retval ) = 0;
    virtual HRESULT __stdcall IGetComponent2 (
        struct IComponent2 * * retval ) = 0;
};

struct __declspec(uuid("83a33da7-27c5-11ce-bfd4-00400513bb57"))
ISWPropertySheet : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddPage (
        long page,
        long * retval ) = 0;
    virtual HRESULT __stdcall RemovePage (
        long page,
        long * retval ) = 0;
};

struct __declspec(uuid("83a33dad-27c5-11ce-bfd4-00400513bb57"))
IRibFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_IsTwoSided (
        VARIANT_BOOL * twoSided ) = 0;
    virtual HRESULT __stdcall put_IsTwoSided (
        VARIANT_BOOL twoSided ) = 0;
    virtual HRESULT __stdcall get_reverseThicknessDir (
        VARIANT_BOOL * reverse ) = 0;
    virtual HRESULT __stdcall put_reverseThicknessDir (
        VARIANT_BOOL reverse ) = 0;
    virtual HRESULT __stdcall get_thickness (
        double * thickness ) = 0;
    virtual HRESULT __stdcall put_thickness (
        double thickness ) = 0;
    virtual HRESULT __stdcall get_RefSketchIndex (
        int * index ) = 0;
    virtual HRESULT __stdcall put_RefSketchIndex (
        int index ) = 0;
    virtual HRESULT __stdcall NextReference (
        int * index ) = 0;
    virtual HRESULT __stdcall get_FlipSide (
        VARIANT_BOOL * FlipSide ) = 0;
    virtual HRESULT __stdcall put_FlipSide (
        VARIANT_BOOL FlipSide ) = 0;
    virtual HRESULT __stdcall get_EnableDraft (
        VARIANT_BOOL * EnableDraft ) = 0;
    virtual HRESULT __stdcall put_EnableDraft (
        VARIANT_BOOL EnableDraft ) = 0;
    virtual HRESULT __stdcall get_draftOutward (
        VARIANT_BOOL * draftOutward ) = 0;
    virtual HRESULT __stdcall put_draftOutward (
        VARIANT_BOOL draftOutward ) = 0;
    virtual HRESULT __stdcall get_draftAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_draftAngle (
        double angle ) = 0;
};

struct __declspec(uuid("83a33daf-27c5-11ce-bfd4-00400513bb57"))
IDomeFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_height (
        double * height ) = 0;
    virtual HRESULT __stdcall put_height (
        double height ) = 0;
    virtual HRESULT __stdcall get_reverseDir (
        VARIANT_BOOL * reverse ) = 0;
    virtual HRESULT __stdcall put_reverseDir (
        VARIANT_BOOL reverse ) = 0;
    virtual HRESULT __stdcall get_Elliptical (
        VARIANT_BOOL * Elliptical ) = 0;
    virtual HRESULT __stdcall put_Elliptical (
        VARIANT_BOOL Elliptical ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_face (
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall put_face (
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall get_IFace (
        struct IFace * * face ) = 0;
    virtual HRESULT __stdcall put_IFace (
        struct IFace * face ) = 0;
};

struct __declspec(uuid("83a33dc1-27c5-11ce-bfd4-00400513bb57"))
ISketchLine : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetStartPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetStartPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEndPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEndPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetStartPoint2 (
        IDispatch * * startPoint ) = 0;
    virtual HRESULT __stdcall IGetStartPoint2 (
        struct ISketchPoint * * startPoint ) = 0;
    virtual HRESULT __stdcall GetEndPoint2 (
        IDispatch * * endPoint ) = 0;
    virtual HRESULT __stdcall IGetEndPoint2 (
        struct ISketchPoint * * endPoint ) = 0;
};

struct __declspec(uuid("83a33dc3-27c5-11ce-bfd4-00400513bb57"))
ISketchArc : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetStartPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetStartPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEndPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEndPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetCenterPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCenterPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall IsCircle (
        int * retval ) = 0;
    virtual HRESULT __stdcall GetRotationDir (
        int * retval ) = 0;
    virtual HRESULT __stdcall GetStartPoint2 (
        IDispatch * * startPoint ) = 0;
    virtual HRESULT __stdcall IGetStartPoint2 (
        struct ISketchPoint * * startPoint ) = 0;
    virtual HRESULT __stdcall GetEndPoint2 (
        IDispatch * * endPoint ) = 0;
    virtual HRESULT __stdcall IGetEndPoint2 (
        struct ISketchPoint * * endPoint ) = 0;
    virtual HRESULT __stdcall GetCenterPoint2 (
        IDispatch * * centerPoint ) = 0;
    virtual HRESULT __stdcall IGetCenterPoint2 (
        struct ISketchPoint * * centerPoint ) = 0;
    virtual HRESULT __stdcall GetRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall SetRadius (
        double radius,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetNormalVector (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetNormalVector (
        double * retval ) = 0;
};

struct __declspec(uuid("83a33dc7-27c5-11ce-bfd4-00400513bb57"))
ISketchEllipse : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetStartPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetStartPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEndPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEndPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetCenterPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetCenterPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetMajorPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMajorPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetMinorPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetMinorPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetStartPoint2 (
        IDispatch * * startPoint ) = 0;
    virtual HRESULT __stdcall IGetStartPoint2 (
        struct ISketchPoint * * startPoint ) = 0;
    virtual HRESULT __stdcall GetEndPoint2 (
        IDispatch * * endPoint ) = 0;
    virtual HRESULT __stdcall IGetEndPoint2 (
        struct ISketchPoint * * endPoint ) = 0;
    virtual HRESULT __stdcall GetCenterPoint2 (
        IDispatch * * centerPoint ) = 0;
    virtual HRESULT __stdcall IGetCenterPoint2 (
        struct ISketchPoint * * centerPoint ) = 0;
    virtual HRESULT __stdcall GetMajorPoint2 (
        IDispatch * * majorPoint ) = 0;
    virtual HRESULT __stdcall IGetMajorPoint2 (
        struct ISketchPoint * * majorPoint ) = 0;
    virtual HRESULT __stdcall GetMinorPoint2 (
        IDispatch * * minorPoint ) = 0;
    virtual HRESULT __stdcall IGetMinorPoint2 (
        struct ISketchPoint * * minorPoint ) = 0;
};

struct __declspec(uuid("83a33dc9-27c5-11ce-bfd4-00400513bb57"))
ISketchParabola : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetStartPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetStartPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetEndPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEndPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetFocalPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetFocalPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetApexPoint (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetApexPoint (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetStartPoint2 (
        IDispatch * * startPoint ) = 0;
    virtual HRESULT __stdcall IGetStartPoint2 (
        struct ISketchPoint * * startPoint ) = 0;
    virtual HRESULT __stdcall GetEndPoint2 (
        IDispatch * * endPoint ) = 0;
    virtual HRESULT __stdcall IGetEndPoint2 (
        struct ISketchPoint * * endPoint ) = 0;
    virtual HRESULT __stdcall GetFocalPoint2 (
        IDispatch * * focalPoint ) = 0;
    virtual HRESULT __stdcall IGetFocalPoint2 (
        struct ISketchPoint * * focalPoint ) = 0;
    virtual HRESULT __stdcall GetApexPoint2 (
        IDispatch * * apexPoint ) = 0;
    virtual HRESULT __stdcall IGetApexPoint2 (
        struct ISketchPoint * * apexPoint ) = 0;
};

struct __declspec(uuid("83a33dcb-27c5-11ce-bfd4-00400513bb57"))
ISketchSpline : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetPointCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetPoints (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetPoints (
        double * retval ) = 0;
    virtual HRESULT __stdcall GetPoints2 (
        VARIANT * splinePoints ) = 0;
    virtual HRESULT __stdcall IEnumPoints (
        struct IEnumSketchPoints * * splinePoints ) = 0;
};

struct __declspec(uuid("83a33df1-27c5-11ce-bfd4-00400513bb57"))
ILightDialog : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddSubDialog (
        long page,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetLightId (
        long * id ) = 0;
};

struct __declspec(uuid("5b57e3bc-7139-11d3-aea2-00c04f683cba"))
IEnumCurves : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next (
        long celt,
        struct ICurve * * rgelt,
        long * pceltFetched ) = 0;
    virtual HRESULT __stdcall Skip (
        long celt ) = 0;
    virtual HRESULT __stdcall Reset ( ) = 0;
    virtual HRESULT __stdcall Clone (
        struct IEnumCurves * * ppenum ) = 0;
};

struct __declspec(uuid("1d06fd54-96dd-11d3-aeaa-00c04f683cba"))
ISimpleHoleFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_DraftWhileExtruding (
        VARIANT_BOOL * draftWhileExtrude ) = 0;
    virtual HRESULT __stdcall put_DraftWhileExtruding (
        VARIANT_BOOL draftWhileExtrude ) = 0;
    virtual HRESULT __stdcall get_draftOutward (
        VARIANT_BOOL * draftOutward ) = 0;
    virtual HRESULT __stdcall put_draftOutward (
        VARIANT_BOOL draftOutward ) = 0;
    virtual HRESULT __stdcall get_ReverseOffset (
        VARIANT_BOOL * draftOutward ) = 0;
    virtual HRESULT __stdcall put_ReverseOffset (
        VARIANT_BOOL draftOutward ) = 0;
    virtual HRESULT __stdcall get_type (
        int * type ) = 0;
    virtual HRESULT __stdcall put_type (
        int type ) = 0;
    virtual HRESULT __stdcall get_diameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_diameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_depth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_depth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_draftAngle (
        double * draftAngle ) = 0;
    virtual HRESULT __stdcall put_draftAngle (
        double draftAngle ) = 0;
    virtual HRESULT __stdcall get_SurfaceOffset (
        double * SurfaceOffset ) = 0;
    virtual HRESULT __stdcall put_SurfaceOffset (
        double SurfaceOffset ) = 0;
    virtual HRESULT __stdcall get_face (
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall put_face (
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall get_IFace (
        struct IFace * * face ) = 0;
    virtual HRESULT __stdcall put_IFace (
        struct IFace * face ) = 0;
    virtual HRESULT __stdcall get_Vertex (
        IDispatch * * Vertex ) = 0;
    virtual HRESULT __stdcall put_Vertex (
        IDispatch * Vertex ) = 0;
    virtual HRESULT __stdcall get_IVertex (
        struct IVertex * * Vertex ) = 0;
    virtual HRESULT __stdcall put_IVertex (
        struct IVertex * Vertex ) = 0;
};

struct __declspec(uuid("887ab457-a739-11d3-b97f-001083029a97"))
IWizardHoleFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_type (
        int * hole_type ) = 0;
    virtual HRESULT __stdcall put_type (
        int hole_type ) = 0;
    virtual HRESULT __stdcall get_diameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_diameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_CounterBoreDiameter (
        double * cbore_dia ) = 0;
    virtual HRESULT __stdcall put_CounterBoreDiameter (
        double cbore_dia ) = 0;
    virtual HRESULT __stdcall get_CounterDrillDiameter (
        double * cdrill_dia ) = 0;
    virtual HRESULT __stdcall put_CounterDrillDiameter (
        double cdrill_dia ) = 0;
    virtual HRESULT __stdcall get_CounterSinkDiameter (
        double * csunk_dia ) = 0;
    virtual HRESULT __stdcall put_CounterSinkDiameter (
        double csunk_dia ) = 0;
    virtual HRESULT __stdcall get_MinorDiameter (
        double * minor_dia ) = 0;
    virtual HRESULT __stdcall put_MinorDiameter (
        double minor_dia ) = 0;
    virtual HRESULT __stdcall get_MajorDiameter (
        double * major_dia ) = 0;
    virtual HRESULT __stdcall put_MajorDiameter (
        double major_dia ) = 0;
    virtual HRESULT __stdcall get_HoleDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_HoleDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_ThruHoleDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_ThruHoleDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_TapDrillDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_TapDrillDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_ThruTapDrillDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_ThruTapDrillDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_NearCounterSinkDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_NearCounterSinkDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_MidCounterSinkDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_MidCounterSinkDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_FarCounterSinkDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_FarCounterSinkDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_ThreadDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_ThreadDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_depth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_depth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_CounterBoreDepth (
        double * cbore_depth ) = 0;
    virtual HRESULT __stdcall put_CounterBoreDepth (
        double cbore_depth ) = 0;
    virtual HRESULT __stdcall get_CounterDrillDepth (
        double * cdrill_depth ) = 0;
    virtual HRESULT __stdcall put_CounterDrillDepth (
        double cdrill_depth ) = 0;
    virtual HRESULT __stdcall get_HoleDepth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_HoleDepth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_ThruHoleDepth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_ThruHoleDepth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_TapDrillDepth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_TapDrillDepth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_ThruTapDrillDepth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_ThruTapDrillDepth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_ThreadDepth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_ThreadDepth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_CounterDrillAngle (
        double * cdrill_angle ) = 0;
    virtual HRESULT __stdcall put_CounterDrillAngle (
        double cdrill_angle ) = 0;
    virtual HRESULT __stdcall get_CounterSinkAngle (
        double * csunk_angle ) = 0;
    virtual HRESULT __stdcall put_CounterSinkAngle (
        double csunk_angle ) = 0;
    virtual HRESULT __stdcall get_DrillAngle (
        double * drill_angle ) = 0;
    virtual HRESULT __stdcall put_DrillAngle (
        double drill_angle ) = 0;
    virtual HRESULT __stdcall get_NearCounterSinkAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_NearCounterSinkAngle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_MidCounterSinkAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_MidCounterSinkAngle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_FarCounterSinkAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_FarCounterSinkAngle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_ThreadAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_ThreadAngle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_HeadClearance (
        double * HeadClearance ) = 0;
    virtual HRESULT __stdcall put_HeadClearance (
        double HeadClearance ) = 0;
    virtual HRESULT __stdcall get_face (
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall put_face (
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall get_IFace (
        struct IFace * * face ) = 0;
    virtual HRESULT __stdcall put_IFace (
        struct IFace * face ) = 0;
    virtual HRESULT __stdcall get_Vertex (
        IDispatch * * Vertex ) = 0;
    virtual HRESULT __stdcall put_Vertex (
        IDispatch * Vertex ) = 0;
    virtual HRESULT __stdcall get_IVertex (
        struct IVertex * * Vertex ) = 0;
    virtual HRESULT __stdcall put_IVertex (
        struct IVertex * Vertex ) = 0;
    virtual HRESULT __stdcall get_endCondition (
        int * endCondition ) = 0;
    virtual HRESULT __stdcall put_endCondition (
        int endCondition ) = 0;
    virtual HRESULT __stdcall get_Standard (
        BSTR * Standard ) = 0;
    virtual HRESULT __stdcall put_Standard (
        BSTR Standard ) = 0;
    virtual HRESULT __stdcall get_FastenerType (
        BSTR * FastenerType ) = 0;
    virtual HRESULT __stdcall put_FastenerType (
        BSTR FastenerType ) = 0;
    virtual HRESULT __stdcall get_FastenerSize (
        BSTR * FastenerSize ) = 0;
    virtual HRESULT __stdcall put_FastenerSize (
        BSTR FastenerSize ) = 0;
};

struct __declspec(uuid("7271d7c7-acc9-11d3-b97f-001083029a97"))
IChamferFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetEdgeChamferDistance (
        int side,
        double * distance ) = 0;
    virtual HRESULT __stdcall SetEdgeChamferDistance (
        int side,
        double distance ) = 0;
    virtual HRESULT __stdcall GetVertexChamferDistance (
        int side,
        double * distance ) = 0;
    virtual HRESULT __stdcall SetVertexChamferDistance (
        int side,
        double distance ) = 0;
    virtual HRESULT __stdcall get_type (
        int * chamfer_type ) = 0;
    virtual HRESULT __stdcall put_type (
        int chamfer_type ) = 0;
    virtual HRESULT __stdcall get_EdgeChamferAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_EdgeChamferAngle (
        double angle ) = 0;
};

struct __declspec(uuid("bc633ce1-b367-11d3-b981-001083029a97"))
IDraftFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_type (
        int * type ) = 0;
    virtual HRESULT __stdcall put_type (
        int type ) = 0;
    virtual HRESULT __stdcall get_angle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_angle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
};

struct __declspec(uuid("cc929f0b-b404-11d3-b981-001083029a97"))
ISimpleFilletFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_type (
        int * type ) = 0;
    virtual HRESULT __stdcall get_DefaultRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall put_DefaultRadius (
        double radius ) = 0;
    virtual HRESULT __stdcall get_overFlowType (
        int * overflow_type ) = 0;
    virtual HRESULT __stdcall put_overFlowType (
        int overflow_type ) = 0;
    virtual HRESULT __stdcall get_IsMultipleRadius (
        VARIANT_BOOL * IsMultipleRadius ) = 0;
    virtual HRESULT __stdcall put_IsMultipleRadius (
        VARIANT_BOOL IsMultipleRadius ) = 0;
    virtual HRESULT __stdcall get_RoundCorners (
        VARIANT_BOOL * RoundCorners ) = 0;
    virtual HRESULT __stdcall put_RoundCorners (
        VARIANT_BOOL RoundCorners ) = 0;
    virtual HRESULT __stdcall get_PropagateToTangentFaces (
        VARIANT_BOOL * propTgtFaces ) = 0;
    virtual HRESULT __stdcall put_PropagateToTangentFaces (
        VARIANT_BOOL propTgtFaces ) = 0;
    virtual HRESULT __stdcall get_FilletItemsCount (
        int * count ) = 0;
    virtual HRESULT __stdcall GetFilletItemAtIndex (
        int index,
        IDispatch * * pFilletItem ) = 0;
    virtual HRESULT __stdcall IGetFilletItemAtIndex (
        int index,
        IUnknown * * pFilletItem ) = 0;
    virtual HRESULT __stdcall GetRadius (
        IDispatch * pFilletItem,
        double * radius ) = 0;
    virtual HRESULT __stdcall IGetRadius (
        IUnknown * pFilletItem,
        double * radius ) = 0;
    virtual HRESULT __stdcall SetRadius (
        IDispatch * pFilletItem,
        double radius ) = 0;
    virtual HRESULT __stdcall ISetRadius (
        IUnknown * pFilletItem,
        double radius ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
};

struct __declspec(uuid("cc929f0d-b404-11d3-b981-001083029a97"))
IVariableFilletFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_DefaultRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall put_DefaultRadius (
        double radius ) = 0;
    virtual HRESULT __stdcall get_overFlowType (
        int * overflow_type ) = 0;
    virtual HRESULT __stdcall put_overFlowType (
        int overflow_type ) = 0;
    virtual HRESULT __stdcall get_TransitionType (
        int * transition_type ) = 0;
    virtual HRESULT __stdcall put_TransitionType (
        int transition_type ) = 0;
    virtual HRESULT __stdcall get_PropagateToTangentFaces (
        VARIANT_BOOL * propTgtFaces ) = 0;
    virtual HRESULT __stdcall put_PropagateToTangentFaces (
        VARIANT_BOOL propTgtFaces ) = 0;
    virtual HRESULT __stdcall get_FilletEdgeCount (
        int * count ) = 0;
    virtual HRESULT __stdcall GetFilletEdgeAtIndex (
        int index,
        IDispatch * * pFilletItem ) = 0;
    virtual HRESULT __stdcall IGetFilletEdgeAtIndex (
        int index,
        struct IEdge * * pFilletItem ) = 0;
    virtual HRESULT __stdcall GetRadius (
        IDispatch * pFilletItem,
        double * radius ) = 0;
    virtual HRESULT __stdcall IGetRadius (
        struct IVertex * pFilletItem,
        double * radius ) = 0;
    virtual HRESULT __stdcall SetRadius (
        IDispatch * pFilletItem,
        double radius ) = 0;
    virtual HRESULT __stdcall ISetRadius (
        struct IVertex * pFilletItem,
        double radius ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
};

struct __declspec(uuid("908a7175-b72c-11d3-b981-001083029a97"))
IExtrudeFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetEndCondition (
        VARIANT_BOOL forward,
        int * endCondition ) = 0;
    virtual HRESULT __stdcall SetEndCondition (
        VARIANT_BOOL forward,
        int endCondition ) = 0;
    virtual HRESULT __stdcall GetDepth (
        VARIANT_BOOL forward,
        double * depth ) = 0;
    virtual HRESULT __stdcall SetDepth (
        VARIANT_BOOL forward,
        double depth ) = 0;
    virtual HRESULT __stdcall GetWallThickness (
        VARIANT_BOOL forward,
        double * wallThickness ) = 0;
    virtual HRESULT __stdcall SetWallThickness (
        VARIANT_BOOL forward,
        double wallThickness ) = 0;
    virtual HRESULT __stdcall GetDraftWhileExtruding (
        VARIANT_BOOL forward,
        VARIANT_BOOL * draftWhileExtrude ) = 0;
    virtual HRESULT __stdcall SetDraftWhileExtruding (
        VARIANT_BOOL forward,
        VARIANT_BOOL draftWhileExtrude ) = 0;
    virtual HRESULT __stdcall GetDraftOutward (
        VARIANT_BOOL forward,
        VARIANT_BOOL * draftOutward ) = 0;
    virtual HRESULT __stdcall SetDraftOutward (
        VARIANT_BOOL forward,
        VARIANT_BOOL draftOutward ) = 0;
    virtual HRESULT __stdcall GetDraftAngle (
        VARIANT_BOOL forward,
        double * draftAngle ) = 0;
    virtual HRESULT __stdcall SetDraftAngle (
        VARIANT_BOOL forward,
        double draftAngle ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetFace (
        VARIANT_BOOL forward,
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall SetFace (
        VARIANT_BOOL forward,
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall IGetFace (
        VARIANT_BOOL forward,
        struct IFace * * face ) = 0;
    virtual HRESULT __stdcall ISetFace (
        VARIANT_BOOL forward,
        struct IFace * face ) = 0;
    virtual HRESULT __stdcall GetVertex (
        VARIANT_BOOL forward,
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall SetVertex (
        VARIANT_BOOL forward,
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall IGetVertex (
        VARIANT_BOOL forward,
        struct IVertex * * face ) = 0;
    virtual HRESULT __stdcall ISetVertex (
        VARIANT_BOOL forward,
        struct IVertex * face ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_bothDirections (
        VARIANT_BOOL * bothDirections ) = 0;
    virtual HRESULT __stdcall put_bothDirections (
        VARIANT_BOOL bothDirections ) = 0;
    virtual HRESULT __stdcall get_FlipSideToCut (
        VARIANT_BOOL * flip ) = 0;
    virtual HRESULT __stdcall put_FlipSideToCut (
        VARIANT_BOOL flip ) = 0;
    virtual HRESULT __stdcall IsBossFeature (
        VARIANT_BOOL * IsBossFeature ) = 0;
    virtual HRESULT __stdcall IsThinFeature (
        VARIANT_BOOL * IsThinFeature ) = 0;
    virtual HRESULT __stdcall IsBaseExtrude (
        VARIANT_BOOL * IsBaseExtrude ) = 0;
    virtual HRESULT __stdcall get_ThinWallType (
        int * ThinWallType ) = 0;
    virtual HRESULT __stdcall put_ThinWallType (
        int ThinWallType ) = 0;
    virtual HRESULT __stdcall get_capEnds (
        VARIANT_BOOL * capEnds ) = 0;
    virtual HRESULT __stdcall put_capEnds (
        VARIANT_BOOL capEnds ) = 0;
    virtual HRESULT __stdcall get_CapThickness (
        double * CapThickness ) = 0;
    virtual HRESULT __stdcall put_CapThickness (
        double CapThickness ) = 0;
};

struct __declspec(uuid("b7fff613-b735-11d3-b981-001083029a97"))
IRevolveFeatureData : IUnknown
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetRevolutionAngle (
        VARIANT_BOOL forward,
        double * angle ) = 0;
    virtual HRESULT __stdcall SetRevolutionAngle (
        VARIANT_BOOL forward,
        double angle ) = 0;
    virtual HRESULT __stdcall GetWallThickness (
        VARIANT_BOOL forward,
        double * wallThickness ) = 0;
    virtual HRESULT __stdcall SetWallThickness (
        VARIANT_BOOL forward,
        double wallThickness ) = 0;
    virtual HRESULT __stdcall get_type (
        int * revolveCut_type ) = 0;
    virtual HRESULT __stdcall put_type (
        int revolveCut_type ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall IsBossFeature (
        VARIANT_BOOL * IsBossFeature ) = 0;
    virtual HRESULT __stdcall IsThinFeature (
        VARIANT_BOOL * IsThinFeature ) = 0;
};

struct __declspec(uuid("414f4f1e-30ec-11d4-aeeb-00c04f683cba"))
IMirrorPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_Plane (
        IDispatch * * refPlane ) = 0;
    virtual HRESULT __stdcall put_Plane (
        IDispatch * refPlane ) = 0;
    virtual HRESULT __stdcall GetMirrorPlaneType (
        long * mirrorPlaneType ) = 0;
    virtual HRESULT __stdcall get_PatternFeatureArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternFeatureArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternFeatureCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetPatternFeatureArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternFeatureArray (
        long featCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_GeometryPattern (
        VARIANT_BOOL * geometry ) = 0;
    virtual HRESULT __stdcall put_GeometryPattern (
        VARIANT_BOOL geometry ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall get_MirrorFaceArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_MirrorFaceArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetMirrorFaceCount (
        long * faceCount ) = 0;
    virtual HRESULT __stdcall IGetMirrorFaceArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetMirrorFaceArray (
        long faceCount,
        IDispatch * * ArrayDataIn ) = 0;
};

struct __declspec(uuid("dbbf39de-7ab5-11d4-aeb6-00c04fa0ac51"))
ICircularPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_axis (
        IDispatch * * refAxis ) = 0;
    virtual HRESULT __stdcall put_axis (
        IDispatch * refAxis ) = 0;
    virtual HRESULT __stdcall GetAxisType (
        long * circularAxisType ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_spacing (
        double * distance ) = 0;
    virtual HRESULT __stdcall put_spacing (
        double distance ) = 0;
    virtual HRESULT __stdcall get_TotalInstances (
        long * count ) = 0;
    virtual HRESULT __stdcall put_TotalInstances (
        long count ) = 0;
    virtual HRESULT __stdcall get_EqualSpacing (
        VARIANT_BOOL * EqualSpacing ) = 0;
    virtual HRESULT __stdcall put_EqualSpacing (
        VARIANT_BOOL EqualSpacing ) = 0;
    virtual HRESULT __stdcall get_VarySketch (
        VARIANT_BOOL * VarySketch ) = 0;
    virtual HRESULT __stdcall put_VarySketch (
        VARIANT_BOOL VarySketch ) = 0;
    virtual HRESULT __stdcall get_GeometryPattern (
        VARIANT_BOOL * geometry ) = 0;
    virtual HRESULT __stdcall put_GeometryPattern (
        VARIANT_BOOL geometry ) = 0;
    virtual HRESULT __stdcall get_PatternFeatureArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternFeatureArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternFeatureCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetPatternFeatureArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternFeatureArray (
        long featCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_SkippedItemArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_SkippedItemArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetSkippedItemCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetSkippedItemArray (
        long * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetSkippedItemArray (
        long featCount,
        long * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall get_PatternFaceArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternFaceArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternFaceCount (
        long * faceCount ) = 0;
    virtual HRESULT __stdcall IGetPatternFaceArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternFaceArray (
        long faceCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_PatternBodyArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternBodyArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternBodyCount (
        long * bodyCount ) = 0;
    virtual HRESULT __stdcall IGetPatternBodyArray (
        struct IBody2 * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternBodyArray (
        long bodyCount,
        struct IBody2 * * ArrayDataIn ) = 0;
};

struct __declspec(uuid("f86d1e94-7de8-11d4-aeb7-00c04fa0ac51"))
ILinearPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_D1Axis (
        IDispatch * * refAxis ) = 0;
    virtual HRESULT __stdcall put_D1Axis (
        IDispatch * refAxis ) = 0;
    virtual HRESULT __stdcall get_D2Axis (
        IDispatch * * refAxis ) = 0;
    virtual HRESULT __stdcall put_D2Axis (
        IDispatch * refAxis ) = 0;
    virtual HRESULT __stdcall GetD1AxisType (
        long * LinearAxisType ) = 0;
    virtual HRESULT __stdcall GetD2AxisType (
        long * LinearAxisType ) = 0;
    virtual HRESULT __stdcall get_D1ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_D1ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_D2ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_D2ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_D1Spacing (
        double * distance ) = 0;
    virtual HRESULT __stdcall put_D1Spacing (
        double distance ) = 0;
    virtual HRESULT __stdcall get_D2Spacing (
        double * distance ) = 0;
    virtual HRESULT __stdcall put_D2Spacing (
        double distance ) = 0;
    virtual HRESULT __stdcall get_D1TotalInstances (
        long * count ) = 0;
    virtual HRESULT __stdcall put_D1TotalInstances (
        long count ) = 0;
    virtual HRESULT __stdcall get_D2TotalInstances (
        long * count ) = 0;
    virtual HRESULT __stdcall put_D2TotalInstances (
        long count ) = 0;
    virtual HRESULT __stdcall get_VarySketch (
        VARIANT_BOOL * VarySketch ) = 0;
    virtual HRESULT __stdcall put_VarySketch (
        VARIANT_BOOL VarySketch ) = 0;
    virtual HRESULT __stdcall get_GeometryPattern (
        VARIANT_BOOL * geometry ) = 0;
    virtual HRESULT __stdcall put_GeometryPattern (
        VARIANT_BOOL geometry ) = 0;
    virtual HRESULT __stdcall get_PatternFeatureArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternFeatureArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternFeatureCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetPatternFeatureArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternFeatureArray (
        long featCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_SkippedItemArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_SkippedItemArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetSkippedItemCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetSkippedItemArray (
        long * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetSkippedItemArray (
        long featCount,
        long * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall get_PatternFaceArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternFaceArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternFaceCount (
        long * faceCount ) = 0;
    virtual HRESULT __stdcall IGetPatternFaceArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternFaceArray (
        long faceCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_D2PatternSeedOnly (
        VARIANT_BOOL * seedOnly ) = 0;
    virtual HRESULT __stdcall put_D2PatternSeedOnly (
        VARIANT_BOOL seedOnly ) = 0;
    virtual HRESULT __stdcall IsDirection2Specified (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_PatternBodyArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternBodyArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternBodyCount (
        long * bodyCount ) = 0;
    virtual HRESULT __stdcall IGetPatternBodyArray (
        struct IBody2 * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternBodyArray (
        long bodyCount,
        struct IBody2 * * ArrayDataIn ) = 0;
};

struct __declspec(uuid("e5d1af7c-7f5d-11d4-aeb7-00c04fa0ac51"))
ITablePatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_CoordinateSystem (
        IDispatch * * refCoord ) = 0;
    virtual HRESULT __stdcall put_CoordinateSystem (
        IDispatch * refCoord ) = 0;
    virtual HRESULT __stdcall get_ReferencePoint (
        IDispatch * * refPoint ) = 0;
    virtual HRESULT __stdcall put_ReferencePoint (
        IDispatch * refPoint ) = 0;
    virtual HRESULT __stdcall GetReferencePointType (
        long * type ) = 0;
    virtual HRESULT __stdcall get_useCentroid (
        VARIANT_BOOL * useCentroid ) = 0;
    virtual HRESULT __stdcall put_useCentroid (
        VARIANT_BOOL useCentroid ) = 0;
    virtual HRESULT __stdcall SavePointsToFile (
        BSTR fileName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall LoadPointsFromFile (
        BSTR fileName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetBasePoint (
        VARIANT * point ) = 0;
    virtual HRESULT __stdcall IGetBasePoint (
        double * point ) = 0;
    virtual HRESULT __stdcall get_GeometryPattern (
        VARIANT_BOOL * geometry ) = 0;
    virtual HRESULT __stdcall put_GeometryPattern (
        VARIANT_BOOL geometry ) = 0;
    virtual HRESULT __stdcall get_PatternFeatureArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternFeatureArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternFeatureCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetPatternFeatureArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternFeatureArray (
        long featCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_pointArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_pointArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPointCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetPointArray (
        double * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPointArray (
        long featCount,
        double * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall get_PatternFaceArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternFaceArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternFaceCount (
        long * faceCount ) = 0;
    virtual HRESULT __stdcall IGetPatternFaceArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternFaceArray (
        long faceCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_PatternBodyArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternBodyArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternBodyCount (
        long * bodyCount ) = 0;
    virtual HRESULT __stdcall IGetPatternBodyArray (
        struct IBody2 * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternBodyArray (
        long bodyCount,
        struct IBody2 * * ArrayDataIn ) = 0;
};

struct __declspec(uuid("ae998464-8050-11d4-aeb7-00c04fa0ac51"))
ISketchPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_sketch (
        IDispatch * * sketch ) = 0;
    virtual HRESULT __stdcall put_sketch (
        IDispatch * sketch ) = 0;
    virtual HRESULT __stdcall get_ReferencePoint (
        IDispatch * * refPoint ) = 0;
    virtual HRESULT __stdcall put_ReferencePoint (
        IDispatch * refPoint ) = 0;
    virtual HRESULT __stdcall GetReferencePointType (
        long * type ) = 0;
    virtual HRESULT __stdcall get_useCentroid (
        VARIANT_BOOL * useCentroid ) = 0;
    virtual HRESULT __stdcall put_useCentroid (
        VARIANT_BOOL useCentroid ) = 0;
    virtual HRESULT __stdcall GetBasePoint (
        VARIANT * point ) = 0;
    virtual HRESULT __stdcall IGetBasePoint (
        double * point ) = 0;
    virtual HRESULT __stdcall get_GeometryPattern (
        VARIANT_BOOL * geometry ) = 0;
    virtual HRESULT __stdcall put_GeometryPattern (
        VARIANT_BOOL geometry ) = 0;
    virtual HRESULT __stdcall get_PatternFeatureArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternFeatureArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternFeatureCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetPatternFeatureArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternFeatureArray (
        long featCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall get_PatternFaceArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternFaceArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternFaceCount (
        long * faceCount ) = 0;
    virtual HRESULT __stdcall IGetPatternFaceArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternFaceArray (
        long faceCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_PatternBodyArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternBodyArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternBodyCount (
        long * bodyCount ) = 0;
    virtual HRESULT __stdcall IGetPatternBodyArray (
        struct IBody2 * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternBodyArray (
        long bodyCount,
        struct IBody2 * * ArrayDataIn ) = 0;
};

struct __declspec(uuid("e9172718-836b-11d4-aeb7-00c04fa0ac51"))
IMirrorSolidFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_face (
        IDispatch * * refFace ) = 0;
    virtual HRESULT __stdcall put_face (
        IDispatch * refFace ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall get_PatternBodyArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternBodyArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternBodyCount (
        long * bodyCount ) = 0;
    virtual HRESULT __stdcall IGetPatternBodyArray (
        struct IBody2 * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternBodyArray (
        long bodyCount,
        struct IBody2 * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_merge (
        VARIANT_BOOL * bMerge ) = 0;
    virtual HRESULT __stdcall put_merge (
        VARIANT_BOOL bMerge ) = 0;
    virtual HRESULT __stdcall get_KnitSurface (
        VARIANT_BOOL * bKnit ) = 0;
    virtual HRESULT __stdcall put_KnitSurface (
        VARIANT_BOOL bKnit ) = 0;
};

struct __declspec(uuid("2f6c1e88-f2d6-11d4-aed5-00c04fa0ac51"))
ISheetMetalFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_BendRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall put_BendRadius (
        double radius ) = 0;
    virtual HRESULT __stdcall get_thickness (
        double * thickness ) = 0;
    virtual HRESULT __stdcall put_thickness (
        double thickness ) = 0;
    virtual HRESULT __stdcall get_FixedReference (
        IDispatch * * FixedReference ) = 0;
    virtual HRESULT __stdcall put_FixedReference (
        IDispatch * FixedReference ) = 0;
    virtual HRESULT __stdcall get_BendAllowanceType (
        long * BendAllowanceType ) = 0;
    virtual HRESULT __stdcall put_BendAllowanceType (
        long BendAllowanceType ) = 0;
    virtual HRESULT __stdcall get_BendTableFile (
        BSTR * BendTableFile ) = 0;
    virtual HRESULT __stdcall put_BendTableFile (
        BSTR BendTableFile ) = 0;
    virtual HRESULT __stdcall get_KFactor (
        double * KFactor ) = 0;
    virtual HRESULT __stdcall put_KFactor (
        double KFactor ) = 0;
    virtual HRESULT __stdcall get_BendAllowance (
        double * BendAllowance ) = 0;
    virtual HRESULT __stdcall put_BendAllowance (
        double BendAllowance ) = 0;
    virtual HRESULT __stdcall get_useAutoRelief (
        VARIANT_BOOL * autoRelief ) = 0;
    virtual HRESULT __stdcall put_useAutoRelief (
        VARIANT_BOOL autoRelief ) = 0;
    virtual HRESULT __stdcall get_AutoReliefType (
        long * AutoReliefType ) = 0;
    virtual HRESULT __stdcall put_AutoReliefType (
        long AutoReliefType ) = 0;
    virtual HRESULT __stdcall get_ReliefRatio (
        double * ReliefRatio ) = 0;
    virtual HRESULT __stdcall put_ReliefRatio (
        double ReliefRatio ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall GetCustomBendAllowance (
        struct ICustomBendAllowance * * pBendData ) = 0;
    virtual HRESULT __stdcall SetCustomBendAllowance (
        struct ICustomBendAllowance * pBendData ) = 0;
};

struct __declspec(uuid("0c02ad40-f6e6-11d4-aed6-00c04fa0ac51"))
IOneBendFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_BendRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall put_BendRadius (
        double radius ) = 0;
    virtual HRESULT __stdcall get_BendAllowanceType (
        long * BendAllowanceType ) = 0;
    virtual HRESULT __stdcall put_BendAllowanceType (
        long BendAllowanceType ) = 0;
    virtual HRESULT __stdcall get_BendTableFile (
        BSTR * BendTableFile ) = 0;
    virtual HRESULT __stdcall put_BendTableFile (
        BSTR BendTableFile ) = 0;
    virtual HRESULT __stdcall get_KFactor (
        double * KFactor ) = 0;
    virtual HRESULT __stdcall put_KFactor (
        double KFactor ) = 0;
    virtual HRESULT __stdcall get_BendAllowance (
        double * BendAllowance ) = 0;
    virtual HRESULT __stdcall put_BendAllowance (
        double BendAllowance ) = 0;
    virtual HRESULT __stdcall get_useAutoRelief (
        VARIANT_BOOL * autoRelief ) = 0;
    virtual HRESULT __stdcall put_useAutoRelief (
        VARIANT_BOOL autoRelief ) = 0;
    virtual HRESULT __stdcall get_AutoReliefType (
        long * AutoReliefType ) = 0;
    virtual HRESULT __stdcall put_AutoReliefType (
        long AutoReliefType ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendRadius (
        VARIANT_BOOL * UseDefaultBendRadius ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendRadius (
        VARIANT_BOOL UseDefaultBendRadius ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        VARIANT_BOOL UseDefaultBendAllowance ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendRelief (
        VARIANT_BOOL * UseDefaultBendRelief ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendRelief (
        VARIANT_BOOL UseDefaultBendRelief ) = 0;
    virtual HRESULT __stdcall get_BendDown (
        VARIANT_BOOL * BendDown ) = 0;
    virtual HRESULT __stdcall put_BendDown (
        VARIANT_BOOL BendDown ) = 0;
    virtual HRESULT __stdcall get_BendAngle (
        double * BendAngle ) = 0;
    virtual HRESULT __stdcall put_BendAngle (
        double BendAngle ) = 0;
    virtual HRESULT __stdcall get_BendOrder (
        long * BendOrder ) = 0;
    virtual HRESULT __stdcall put_BendOrder (
        long BendOrder ) = 0;
    virtual HRESULT __stdcall get_reliefWidth (
        double * reliefWidth ) = 0;
    virtual HRESULT __stdcall put_reliefWidth (
        double reliefWidth ) = 0;
    virtual HRESULT __stdcall get_reliefDepth (
        double * reliefDepth ) = 0;
    virtual HRESULT __stdcall put_reliefDepth (
        double reliefDepth ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall GetType (
        long * retval ) = 0;
    virtual HRESULT __stdcall GetCustomBendAllowance (
        struct ICustomBendAllowance * * pBendData ) = 0;
    virtual HRESULT __stdcall SetCustomBendAllowance (
        struct ICustomBendAllowance * pBendData ) = 0;
    virtual HRESULT __stdcall get_SimplifyGeometry (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_SimplifyGeometry (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_useReliefRatio (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall put_useReliefRatio (
        VARIANT_BOOL retval ) = 0;
    virtual HRESULT __stdcall get_ReliefRatio (
        double * retval ) = 0;
    virtual HRESULT __stdcall put_ReliefRatio (
        double retval ) = 0;
    virtual HRESULT __stdcall get_FlatPatternSketchSegment (
        struct ISketchSegment * * retval ) = 0;
};

struct __declspec(uuid("f3bdb64e-f7c6-11d4-aed6-00c04fa0ac51"))
IBendsFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_BendRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall put_BendRadius (
        double radius ) = 0;
    virtual HRESULT __stdcall get_BendAllowanceType (
        long * BendAllowanceType ) = 0;
    virtual HRESULT __stdcall put_BendAllowanceType (
        long BendAllowanceType ) = 0;
    virtual HRESULT __stdcall get_BendTableFile (
        BSTR * BendTableFile ) = 0;
    virtual HRESULT __stdcall put_BendTableFile (
        BSTR BendTableFile ) = 0;
    virtual HRESULT __stdcall get_KFactor (
        double * KFactor ) = 0;
    virtual HRESULT __stdcall put_KFactor (
        double KFactor ) = 0;
    virtual HRESULT __stdcall get_BendAllowance (
        double * BendAllowance ) = 0;
    virtual HRESULT __stdcall put_BendAllowance (
        double BendAllowance ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendRadius (
        VARIANT_BOOL * UseDefaultBendRadius ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendRadius (
        VARIANT_BOOL UseDefaultBendRadius ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        VARIANT_BOOL UseDefaultBendAllowance ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall GetCustomBendAllowance (
        struct ICustomBendAllowance * * pBendData ) = 0;
    virtual HRESULT __stdcall SetCustomBendAllowance (
        struct ICustomBendAllowance * pBendData ) = 0;
};

struct __declspec(uuid("c61e9dd6-0813-11d5-aedd-00c04fa0ac51"))
IBaseFlangeFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_OffsetDirections (
        long * count ) = 0;
    virtual HRESULT __stdcall put_OffsetDirections (
        long count ) = 0;
    virtual HRESULT __stdcall get_D1OffsetType (
        long * offsetType ) = 0;
    virtual HRESULT __stdcall put_D1OffsetType (
        long offsetType ) = 0;
    virtual HRESULT __stdcall get_D2OffsetType (
        long * offsetType ) = 0;
    virtual HRESULT __stdcall put_D2OffsetType (
        long offsetType ) = 0;
    virtual HRESULT __stdcall GetD1OffsetReferenceType (
        long * referenceType ) = 0;
    virtual HRESULT __stdcall GetD2OffsetReferenceType (
        long * referenceType ) = 0;
    virtual HRESULT __stdcall get_D1OffsetReference (
        IDispatch * * offsetReference ) = 0;
    virtual HRESULT __stdcall put_D1OffsetReference (
        IDispatch * offsetReference ) = 0;
    virtual HRESULT __stdcall get_D2OffsetReference (
        IDispatch * * offsetReference ) = 0;
    virtual HRESULT __stdcall put_D2OffsetReference (
        IDispatch * offsetReference ) = 0;
    virtual HRESULT __stdcall get_D1OffsetDistance (
        double * offsetDistance ) = 0;
    virtual HRESULT __stdcall put_D1OffsetDistance (
        double offsetDistance ) = 0;
    virtual HRESULT __stdcall get_D2OffsetDistance (
        double * offsetDistance ) = 0;
    virtual HRESULT __stdcall put_D2OffsetDistance (
        double offsetDistance ) = 0;
    virtual HRESULT __stdcall get_thickness (
        double * thickness ) = 0;
    virtual HRESULT __stdcall put_thickness (
        double thickness ) = 0;
    virtual HRESULT __stdcall get_ReverseThickness (
        VARIANT_BOOL * ReverseThickness ) = 0;
    virtual HRESULT __stdcall put_ReverseThickness (
        VARIANT_BOOL ReverseThickness ) = 0;
    virtual HRESULT __stdcall get_BendRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall put_BendRadius (
        double radius ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall get_D1ReverseOffset (
        VARIANT_BOOL * revOffset ) = 0;
    virtual HRESULT __stdcall put_D1ReverseOffset (
        VARIANT_BOOL revOffset ) = 0;
    virtual HRESULT __stdcall get_D2ReverseOffset (
        VARIANT_BOOL * revOffset ) = 0;
    virtual HRESULT __stdcall put_D2ReverseOffset (
        VARIANT_BOOL revOffset ) = 0;
};

struct __declspec(uuid("b58e432a-09c8-11d5-aedd-00c04fa0ac51"))
IEdgeFlangeFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_Edge (
        IDispatch * * Edge ) = 0;
    virtual HRESULT __stdcall put_Edge (
        IDispatch * Edge ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendRadius (
        VARIANT_BOOL * UseDefaultBendRadius ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendRadius (
        VARIANT_BOOL UseDefaultBendRadius ) = 0;
    virtual HRESULT __stdcall get_BendRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall put_BendRadius (
        double radius ) = 0;
    virtual HRESULT __stdcall get_BendAngle (
        double * BendAngle ) = 0;
    virtual HRESULT __stdcall put_BendAngle (
        double BendAngle ) = 0;
    virtual HRESULT __stdcall get_offsetType (
        long * offsetType ) = 0;
    virtual HRESULT __stdcall put_offsetType (
        long offsetType ) = 0;
    virtual HRESULT __stdcall get_offsetReference (
        IDispatch * * offsetReference ) = 0;
    virtual HRESULT __stdcall put_offsetReference (
        IDispatch * offsetReference ) = 0;
    virtual HRESULT __stdcall get_ReverseOffset (
        VARIANT_BOOL * reverse ) = 0;
    virtual HRESULT __stdcall put_ReverseOffset (
        VARIANT_BOOL reverse ) = 0;
    virtual HRESULT __stdcall get_offsetDistance (
        double * offsetDistance ) = 0;
    virtual HRESULT __stdcall put_offsetDistance (
        double offsetDistance ) = 0;
    virtual HRESULT __stdcall get_OffsetDimType (
        long * OffsetDimType ) = 0;
    virtual HRESULT __stdcall put_OffsetDimType (
        long OffsetDimType ) = 0;
    virtual HRESULT __stdcall get_PositionType (
        long * PositionType ) = 0;
    virtual HRESULT __stdcall put_PositionType (
        long PositionType ) = 0;
    virtual HRESULT __stdcall get_UsePositionTrimSideBends (
        VARIANT_BOOL * trimSideBends ) = 0;
    virtual HRESULT __stdcall put_UsePositionTrimSideBends (
        VARIANT_BOOL trimSideBends ) = 0;
    virtual HRESULT __stdcall get_UsePositionOffset (
        VARIANT_BOOL * positionOffset ) = 0;
    virtual HRESULT __stdcall put_UsePositionOffset (
        VARIANT_BOOL positionOffset ) = 0;
    virtual HRESULT __stdcall get_PositionOffsetType (
        long * offsetType ) = 0;
    virtual HRESULT __stdcall put_PositionOffsetType (
        long offsetType ) = 0;
    virtual HRESULT __stdcall GetPositionReferenceType (
        long * referenceType ) = 0;
    virtual HRESULT __stdcall get_PositionOffsetReference (
        IDispatch * * offsetReference ) = 0;
    virtual HRESULT __stdcall put_PositionOffsetReference (
        IDispatch * offsetReference ) = 0;
    virtual HRESULT __stdcall get_PositionOffsetDistance (
        double * offsetDistance ) = 0;
    virtual HRESULT __stdcall put_PositionOffsetDistance (
        double offsetDistance ) = 0;
    virtual HRESULT __stdcall get_ReversePositionOffset (
        VARIANT_BOOL * reverse ) = 0;
    virtual HRESULT __stdcall put_ReversePositionOffset (
        VARIANT_BOOL reverse ) = 0;
    virtual HRESULT __stdcall get_AutoReliefType (
        long * AutoReliefType ) = 0;
    virtual HRESULT __stdcall put_AutoReliefType (
        long AutoReliefType ) = 0;
    virtual HRESULT __stdcall get_useReliefRatio (
        VARIANT_BOOL * useReliefRatio ) = 0;
    virtual HRESULT __stdcall put_useReliefRatio (
        VARIANT_BOOL useReliefRatio ) = 0;
    virtual HRESULT __stdcall get_ReliefRatio (
        double * ReliefRatio ) = 0;
    virtual HRESULT __stdcall put_ReliefRatio (
        double ReliefRatio ) = 0;
    virtual HRESULT __stdcall get_reliefWidth (
        double * reliefWidth ) = 0;
    virtual HRESULT __stdcall put_reliefWidth (
        double reliefWidth ) = 0;
    virtual HRESULT __stdcall get_reliefDepth (
        double * reliefDepth ) = 0;
    virtual HRESULT __stdcall put_reliefDepth (
        double reliefDepth ) = 0;
    virtual HRESULT __stdcall get_ReliefTearType (
        long * ReliefTearType ) = 0;
    virtual HRESULT __stdcall put_ReliefTearType (
        long ReliefTearType ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall GetCustomBendAllowance (
        struct ICustomBendAllowance * * pBendData ) = 0;
    virtual HRESULT __stdcall SetCustomBendAllowance (
        struct ICustomBendAllowance * pBendData ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        VARIANT_BOOL UseDefaultBendAllowance ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendRelief (
        VARIANT_BOOL * UseDefaultBendRelief ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendRelief (
        VARIANT_BOOL UseDefaultBendRelief ) = 0;
};

struct __declspec(uuid("e6194f72-0cec-11d5-aedd-00c04fa0ac51"))
IMiterFlangeFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_edges (
        VARIANT * edgeArray ) = 0;
    virtual HRESULT __stdcall put_edges (
        VARIANT edgeArray ) = 0;
    virtual HRESULT __stdcall IGetEdgesCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetEdges (
        IDispatch * * edgeArray ) = 0;
    virtual HRESULT __stdcall ISetEdges (
        long edgeCount,
        IDispatch * * edgeArray ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendRadius (
        VARIANT_BOOL * UseDefaultBendRadius ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendRadius (
        VARIANT_BOOL UseDefaultBendRadius ) = 0;
    virtual HRESULT __stdcall get_BendRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall put_BendRadius (
        double radius ) = 0;
    virtual HRESULT __stdcall get_PositionType (
        long * PositionType ) = 0;
    virtual HRESULT __stdcall put_PositionType (
        long PositionType ) = 0;
    virtual HRESULT __stdcall get_UsePositionTrimSideBends (
        VARIANT_BOOL * trimSideBends ) = 0;
    virtual HRESULT __stdcall put_UsePositionTrimSideBends (
        VARIANT_BOOL trimSideBends ) = 0;
    virtual HRESULT __stdcall get_GapDistance (
        double * GapDistance ) = 0;
    virtual HRESULT __stdcall put_GapDistance (
        double GapDistance ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall get_StartOffset (
        double * offset ) = 0;
    virtual HRESULT __stdcall put_StartOffset (
        double offset ) = 0;
    virtual HRESULT __stdcall get_EndOffset (
        double * offset ) = 0;
    virtual HRESULT __stdcall put_EndOffset (
        double offset ) = 0;
    virtual HRESULT __stdcall get_reliefType (
        long * reliefType ) = 0;
    virtual HRESULT __stdcall put_reliefType (
        long reliefType ) = 0;
    virtual HRESULT __stdcall get_useReliefRatio (
        VARIANT_BOOL * useReliefRatio ) = 0;
    virtual HRESULT __stdcall put_useReliefRatio (
        VARIANT_BOOL useReliefRatio ) = 0;
    virtual HRESULT __stdcall get_ReliefRatio (
        double * ratio ) = 0;
    virtual HRESULT __stdcall put_ReliefRatio (
        double ratio ) = 0;
    virtual HRESULT __stdcall get_reliefWidth (
        double * width ) = 0;
    virtual HRESULT __stdcall put_reliefWidth (
        double width ) = 0;
    virtual HRESULT __stdcall get_reliefDepth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_reliefDepth (
        double depth ) = 0;
    virtual HRESULT __stdcall GetCustomBendAllowance (
        struct ICustomBendAllowance * * pBendData ) = 0;
    virtual HRESULT __stdcall SetCustomBendAllowance (
        struct ICustomBendAllowance * pBendData ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        VARIANT_BOOL UseDefaultBendAllowance ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendRelief (
        VARIANT_BOOL * UseDefaultBendRelief ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendRelief (
        VARIANT_BOOL UseDefaultBendRelief ) = 0;
};

struct __declspec(uuid("a4d90a70-0da5-11d5-aedd-00c04fa0ac51"))
ISketchedBendFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetFixedFace (
        double * x,
        double * y,
        double * z,
        IDispatch * * edgeArray ) = 0;
    virtual HRESULT __stdcall SetFixedFace (
        double x,
        double y,
        double z,
        IDispatch * edgeArray ) = 0;
    virtual HRESULT __stdcall get_PositionType (
        long * PositionType ) = 0;
    virtual HRESULT __stdcall put_PositionType (
        long PositionType ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_BendAngle (
        double * BendAngle ) = 0;
    virtual HRESULT __stdcall put_BendAngle (
        double BendAngle ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendRadius (
        VARIANT_BOOL * UseDefaultBendRadius ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendRadius (
        VARIANT_BOOL UseDefaultBendRadius ) = 0;
    virtual HRESULT __stdcall get_BendRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall put_BendRadius (
        double radius ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall GetCustomBendAllowance (
        struct ICustomBendAllowance * * pBendData ) = 0;
    virtual HRESULT __stdcall SetCustomBendAllowance (
        struct ICustomBendAllowance * pBendData ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        VARIANT_BOOL UseDefaultBendAllowance ) = 0;
};

struct __declspec(uuid("2134cbfc-0dda-11d5-aedd-00c04fa0ac51"))
IClosedCornerFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_faces (
        VARIANT * faceArray ) = 0;
    virtual HRESULT __stdcall put_faces (
        VARIANT faceArray ) = 0;
    virtual HRESULT __stdcall IGetFacesCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetFaces (
        IDispatch * * faceArray ) = 0;
    virtual HRESULT __stdcall ISetFaces (
        long faceCount,
        IDispatch * * faceArray ) = 0;
    virtual HRESULT __stdcall get_cornerType (
        long * cornerType ) = 0;
    virtual HRESULT __stdcall put_cornerType (
        long cornerType ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
};

struct __declspec(uuid("32700a62-0e5c-11d5-aedd-00c04fa0ac51"))
IFoldsFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_FixedFace (
        IDispatch * * offsetReference ) = 0;
    virtual HRESULT __stdcall put_FixedFace (
        IDispatch * offsetReference ) = 0;
    virtual HRESULT __stdcall get_Bends (
        VARIANT * faceArray ) = 0;
    virtual HRESULT __stdcall put_Bends (
        VARIANT faceArray ) = 0;
    virtual HRESULT __stdcall IGetBendsCount (
        long * retval ) = 0;
    virtual HRESULT __stdcall IGetBends (
        IDispatch * * faceArray ) = 0;
    virtual HRESULT __stdcall ISetBends (
        long faceCount,
        IDispatch * * faceArray ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
};

struct __declspec(uuid("00644208-0e6c-11d5-aedd-00c04fa0ac51"))
IFlatPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_FixedFace (
        IDispatch * * offsetReference ) = 0;
    virtual HRESULT __stdcall put_FixedFace (
        IDispatch * offsetReference ) = 0;
    virtual HRESULT __stdcall get_MergeFace (
        VARIANT_BOOL * MergeFace ) = 0;
    virtual HRESULT __stdcall put_MergeFace (
        VARIANT_BOOL MergeFace ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall get_CornerTreatment (
        VARIANT_BOOL * bCT ) = 0;
    virtual HRESULT __stdcall put_CornerTreatment (
        VARIANT_BOOL bCT ) = 0;
    virtual HRESULT __stdcall get_CornerTrimReliefType (
        long * reliefType ) = 0;
    virtual HRESULT __stdcall put_CornerTrimReliefType (
        long reliefType ) = 0;
    virtual HRESULT __stdcall get_CornerTrimReliefDistance (
        double * reliefDistance ) = 0;
    virtual HRESULT __stdcall put_CornerTrimReliefDistance (
        double reliefDistance ) = 0;
    virtual HRESULT __stdcall get_BreakCornerType (
        long * type ) = 0;
    virtual HRESULT __stdcall put_BreakCornerType (
        long type ) = 0;
    virtual HRESULT __stdcall get_BreakCornerRadius (
        double * rad ) = 0;
    virtual HRESULT __stdcall put_BreakCornerRadius (
        double rad ) = 0;
    virtual HRESULT __stdcall GetAddCornerTrim (
        struct IFeature * * pFeat,
        VARIANT_BOOL * bCT ) = 0;
    virtual HRESULT __stdcall SetAddCornerTrim (
        VARIANT_BOOL bCT ) = 0;
    virtual HRESULT __stdcall GetBreakCorners (
        struct IFeature * * pFeat,
        VARIANT_BOOL * bBreakCorner ) = 0;
    virtual HRESULT __stdcall SetBreakCorners (
        VARIANT_BOOL bBreakCorner ) = 0;
    virtual HRESULT __stdcall get_CornerTrimRatioToThickness (
        double * ratio ) = 0;
    virtual HRESULT __stdcall put_CornerTrimRatioToThickness (
        double ratio ) = 0;
    virtual HRESULT __stdcall get_UseRatioToThickness (
        VARIANT_BOOL * ratio ) = 0;
    virtual HRESULT __stdcall put_UseRatioToThickness (
        VARIANT_BOOL ratio ) = 0;
    virtual HRESULT __stdcall get_SimplifyBends (
        VARIANT_BOOL * bSimplify ) = 0;
    virtual HRESULT __stdcall put_SimplifyBends (
        VARIANT_BOOL bSimplify ) = 0;
};

struct __declspec(uuid("9890c04c-1196-11d5-aede-00c04fa0ac51"))
ILocalLinearPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_D1Axis (
        IDispatch * * refAxis ) = 0;
    virtual HRESULT __stdcall put_D1Axis (
        IDispatch * refAxis ) = 0;
    virtual HRESULT __stdcall get_D2Axis (
        IDispatch * * refAxis ) = 0;
    virtual HRESULT __stdcall put_D2Axis (
        IDispatch * refAxis ) = 0;
    virtual HRESULT __stdcall GetD1AxisType (
        long * LinearAxisType ) = 0;
    virtual HRESULT __stdcall GetD2AxisType (
        long * LinearAxisType ) = 0;
    virtual HRESULT __stdcall get_D1ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_D1ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_D2ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_D2ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_D1Spacing (
        double * distance ) = 0;
    virtual HRESULT __stdcall put_D1Spacing (
        double distance ) = 0;
    virtual HRESULT __stdcall get_D2Spacing (
        double * distance ) = 0;
    virtual HRESULT __stdcall put_D2Spacing (
        double distance ) = 0;
    virtual HRESULT __stdcall get_D1TotalInstances (
        long * count ) = 0;
    virtual HRESULT __stdcall put_D1TotalInstances (
        long count ) = 0;
    virtual HRESULT __stdcall get_D2TotalInstances (
        long * count ) = 0;
    virtual HRESULT __stdcall put_D2TotalInstances (
        long count ) = 0;
    virtual HRESULT __stdcall get_SeedComponentArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_SeedComponentArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetSeedComponentCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetSeedComponentArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetSeedComponentArray (
        long featCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_SkippedItemArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_SkippedItemArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetSkippedItemCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetSkippedItemArray (
        long * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetSkippedItemArray (
        long featCount,
        long * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
};

struct __declspec(uuid("f2e81434-13fb-11d5-aede-00c04fa0ac51"))
ILocalCircularPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_axis (
        IDispatch * * refAxis ) = 0;
    virtual HRESULT __stdcall put_axis (
        IDispatch * refAxis ) = 0;
    virtual HRESULT __stdcall GetAxisType (
        long * circularAxisType ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_spacing (
        double * distance ) = 0;
    virtual HRESULT __stdcall put_spacing (
        double distance ) = 0;
    virtual HRESULT __stdcall get_TotalInstances (
        long * count ) = 0;
    virtual HRESULT __stdcall put_TotalInstances (
        long count ) = 0;
    virtual HRESULT __stdcall get_SeedComponentArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_SeedComponentArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetSeedComponentCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetSeedComponentArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetSeedComponentArray (
        long featCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_SkippedItemArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_SkippedItemArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetSkippedItemCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetSkippedItemArray (
        long * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetSkippedItemArray (
        long featCount,
        long * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
};

struct __declspec(uuid("98eadb32-141a-11d5-aede-00c04fa0ac51"))
IDerivedPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_PatternFeature (
        IDispatch * * feature ) = 0;
    virtual HRESULT __stdcall put_PatternFeature (
        IDispatch * feature ) = 0;
    virtual HRESULT __stdcall get_SeedComponentArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_SeedComponentArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetSeedComponentCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetSeedComponentArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetSeedComponentArray (
        long featCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_SkippedItemArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_SkippedItemArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetSkippedItemCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetSkippedItemArray (
        long * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetSkippedItemArray (
        long featCount,
        long * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
};

struct __declspec(uuid("ebbd7b58-170d-11d5-af24-00c04f603faf"))
IPropertyManagerPageLabel : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Caption (
        BSTR * text ) = 0;
    virtual HRESULT __stdcall put_Caption (
        BSTR text ) = 0;
    virtual HRESULT __stdcall get_Style (
        long * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        long Style ) = 0;
};

struct __declspec(uuid("ebbd7b5a-170d-11d5-af24-00c04f603faf"))
IPropertyManagerPageCheckbox : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Checked (
        VARIANT_BOOL * Checked ) = 0;
    virtual HRESULT __stdcall put_Checked (
        VARIANT_BOOL Checked ) = 0;
    virtual HRESULT __stdcall get_Caption (
        BSTR * text ) = 0;
    virtual HRESULT __stdcall put_Caption (
        BSTR text ) = 0;
};

struct __declspec(uuid("3a66c294-17ce-11d5-af24-00c04f603faf"))
IPropertyManagerPageButton : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Caption (
        BSTR * text ) = 0;
    virtual HRESULT __stdcall put_Caption (
        BSTR text ) = 0;
};

struct __declspec(uuid("3a66c296-17ce-11d5-af24-00c04f603faf"))
IPropertyManagerPageOption : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Checked (
        VARIANT_BOOL * Checked ) = 0;
    virtual HRESULT __stdcall put_Checked (
        VARIANT_BOOL Checked ) = 0;
    virtual HRESULT __stdcall get_Caption (
        BSTR * text ) = 0;
    virtual HRESULT __stdcall put_Caption (
        BSTR text ) = 0;
    virtual HRESULT __stdcall get_Style (
        long * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        long Style ) = 0;
};

struct __declspec(uuid("eb18a468-1800-11d5-af24-00c04f603faf"))
IPropertyManagerPageTextbox : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_text (
        BSTR * text ) = 0;
    virtual HRESULT __stdcall put_text (
        BSTR text ) = 0;
};

struct __declspec(uuid("0bd2ba62-18c5-11d5-af24-00c04f603faf"))
IPropertyManagerPageCombobox : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddItems (
        VARIANT Texts ) = 0;
    virtual HRESULT __stdcall IAddItems (
        short TextCount,
        BSTR * Texts ) = 0;
    virtual HRESULT __stdcall Clear ( ) = 0;
    virtual HRESULT __stdcall get_CurrentSelection (
        short * Item ) = 0;
    virtual HRESULT __stdcall put_CurrentSelection (
        short Item ) = 0;
    virtual HRESULT __stdcall get_height (
        short * height ) = 0;
    virtual HRESULT __stdcall put_height (
        short height ) = 0;
    virtual HRESULT __stdcall get_ItemText (
        short Item,
        BSTR * text ) = 0;
    virtual HRESULT __stdcall get_Style (
        long * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        long Style ) = 0;
};

struct __declspec(uuid("ff956369-ae71-4643-afa8-83d7548f758a"))
IPropertyManagerPageActiveX : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_height (
        short * height ) = 0;
    virtual HRESULT __stdcall put_height (
        short height ) = 0;
    virtual HRESULT __stdcall SetClass (
        BSTR ClassId,
        BSTR LicenseKey,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetControl (
        IDispatch * * retval ) = 0;
    virtual HRESULT __stdcall IGetControl (
        IUnknown * * retval ) = 0;
};

struct __declspec(uuid("459f4b5c-7f8c-4a7e-8aa0-fcfb6ed2d286"))
IProjectionCurveFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc * topDoc,
        struct IComponent * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_reverse (
        VARIANT_BOOL * revDir ) = 0;
    virtual HRESULT __stdcall put_reverse (
        VARIANT_BOOL revDir ) = 0;
    virtual HRESULT __stdcall get_faceArray (
        VARIANT * ArrayData ) = 0;
    virtual HRESULT __stdcall put_faceArray (
        VARIANT ArrayData ) = 0;
    virtual HRESULT __stdcall GetFaceArrayCount (
        long * faceCount ) = 0;
    virtual HRESULT __stdcall IGetFaceArray (
        long faceCount,
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetFaceArray (
        long faceCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_sketch (
        IDispatch * * sketch ) = 0;
    virtual HRESULT __stdcall put_sketch (
        IDispatch * sketch ) = 0;
    virtual HRESULT __stdcall IAccessSelections2 (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
};

struct __declspec(uuid("e7631115-f299-4852-9d37-fc9508a00bc1"))
IScaleFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetScale (
        double * x,
        double * y,
        double * z,
        VARIANT_BOOL * uniform ) = 0;
    virtual HRESULT __stdcall SetScale (
        double x,
        double y,
        double z,
        VARIANT_BOOL uniform ) = 0;
    virtual HRESULT __stdcall get_ScaleX (
        double * ScaleX ) = 0;
    virtual HRESULT __stdcall put_ScaleX (
        double ScaleX ) = 0;
    virtual HRESULT __stdcall get_ScaleY (
        double * ScaleY ) = 0;
    virtual HRESULT __stdcall put_ScaleY (
        double ScaleY ) = 0;
    virtual HRESULT __stdcall get_ScaleZ (
        double * ScaleZ ) = 0;
    virtual HRESULT __stdcall put_ScaleZ (
        double ScaleZ ) = 0;
    virtual HRESULT __stdcall get_type (
        long * type ) = 0;
    virtual HRESULT __stdcall put_type (
        long type ) = 0;
    virtual HRESULT __stdcall get_isUniform (
        VARIANT_BOOL * isUnif ) = 0;
    virtual HRESULT __stdcall put_isUniform (
        VARIANT_BOOL isUnif ) = 0;
    virtual HRESULT __stdcall get_CoordinateSystem (
        IDispatch * * refCoord ) = 0;
    virtual HRESULT __stdcall put_CoordinateSystem (
        IDispatch * refCoord ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetBodiesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall get_Bodies (
        VARIANT * bodyVar ) = 0;
    virtual HRESULT __stdcall put_Bodies (
        VARIANT bodyVar ) = 0;
    virtual HRESULT __stdcall IGetBodies (
        long count,
        struct IBody2 * * bodyArr ) = 0;
    virtual HRESULT __stdcall ISetBodies (
        long count,
        struct IBody2 * * bodyArr ) = 0;
};

struct __declspec(uuid("58252a5a-82af-49ef-a2fe-e8c995132f84"))
IShellFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_thickness (
        double * thickness ) = 0;
    virtual HRESULT __stdcall put_thickness (
        double thickness ) = 0;
    virtual HRESULT __stdcall get_direction (
        long * direction ) = 0;
    virtual HRESULT __stdcall put_direction (
        long direction ) = 0;
    virtual HRESULT __stdcall get_FacesRemovedCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetFacesRemoved (
        int count,
        IDispatch * * faceArray ) = 0;
    virtual HRESULT __stdcall ISetFacesRemoved (
        long count,
        IDispatch * * faceArray ) = 0;
    virtual HRESULT __stdcall get_FacesRemoved (
        VARIANT * faceArray ) = 0;
    virtual HRESULT __stdcall put_FacesRemoved (
        VARIANT faceArray ) = 0;
    virtual HRESULT __stdcall GetMultipleThicknessFacesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetMultipleThicknessFaces (
        int count,
        IDispatch * * faceArray ) = 0;
    virtual HRESULT __stdcall ISetMultipleThicknessFaces (
        long count,
        IDispatch * * faceArray ) = 0;
    virtual HRESULT __stdcall get_MultipleThicknessFaces (
        VARIANT * faceArray ) = 0;
    virtual HRESULT __stdcall put_MultipleThicknessFaces (
        VARIANT faceArray ) = 0;
    virtual HRESULT __stdcall GetMultipleThicknessAtIndex (
        int index,
        double * thickness ) = 0;
    virtual HRESULT __stdcall SetMultipleThicknessAtIndex (
        int index,
        double thickness ) = 0;
};

struct __declspec(uuid("07799f9d-7e4f-40de-87ae-aebaaba6a3bc"))
ISweepFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_Profile (
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall put_Profile (
        IDispatch * pDisp ) = 0;
    virtual HRESULT __stdcall get_Path (
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall put_Path (
        IDispatch * pDisp ) = 0;
    virtual HRESULT __stdcall get_TwistControlType (
        short * twistType ) = 0;
    virtual HRESULT __stdcall put_TwistControlType (
        short twistType ) = 0;
    virtual HRESULT __stdcall get_MaintainTangency (
        VARIANT_BOOL * tangency ) = 0;
    virtual HRESULT __stdcall put_MaintainTangency (
        VARIANT_BOOL tangency ) = 0;
    virtual HRESULT __stdcall get_AdvancedSmoothing (
        VARIANT_BOOL * smoothing ) = 0;
    virtual HRESULT __stdcall put_AdvancedSmoothing (
        VARIANT_BOOL smoothing ) = 0;
    virtual HRESULT __stdcall get_AlignWithEndFaces (
        VARIANT_BOOL * alignEndFaces ) = 0;
    virtual HRESULT __stdcall put_AlignWithEndFaces (
        VARIANT_BOOL alignEndFaces ) = 0;
    virtual HRESULT __stdcall IGetGuideCurves (
        short count,
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall ISetGuideCurves (
        short count,
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall get_GuideCurves (
        VARIANT * ArrayIn ) = 0;
    virtual HRESULT __stdcall put_GuideCurves (
        VARIANT ArrayIn ) = 0;
    virtual HRESULT __stdcall get_StartTangencyType (
        short * tangencyType ) = 0;
    virtual HRESULT __stdcall put_StartTangencyType (
        short tangencyType ) = 0;
    virtual HRESULT __stdcall get_EndTangencyType (
        short * tangencyType ) = 0;
    virtual HRESULT __stdcall put_EndTangencyType (
        short tangencyType ) = 0;
    virtual HRESULT __stdcall IsThinFeature (
        VARIANT_BOOL * thin ) = 0;
    virtual HRESULT __stdcall get_ThinWallType (
        short * thinType ) = 0;
    virtual HRESULT __stdcall put_ThinWallType (
        short thinType ) = 0;
    virtual HRESULT __stdcall GetWallThickness (
        VARIANT_BOOL forward,
        double * wallThickness ) = 0;
    virtual HRESULT __stdcall SetWallThickness (
        VARIANT_BOOL forward,
        double wallThickness ) = 0;
    virtual HRESULT __stdcall GetGuideCurvesCount (
        short * count ) = 0;
    virtual HRESULT __stdcall IsBossFeature (
        VARIANT_BOOL * IsBossFeature ) = 0;
    virtual HRESULT __stdcall get_StartDirectionVector (
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall put_StartDirectionVector (
        IDispatch * pDisp ) = 0;
    virtual HRESULT __stdcall get_EndDirectionVector (
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall put_EndDirectionVector (
        IDispatch * pDisp ) = 0;
    virtual HRESULT __stdcall get_TangentPropagation (
        VARIANT_BOOL * TangentPropagation ) = 0;
    virtual HRESULT __stdcall put_TangentPropagation (
        VARIANT_BOOL TangentPropagation ) = 0;
    virtual HRESULT __stdcall GetPathType (
        long * type ) = 0;
    virtual HRESULT __stdcall GetGuideCurvesType (
        VARIANT * typeArr ) = 0;
    virtual HRESULT __stdcall IGetGuideCurvesType (
        long count,
        long * typeArr ) = 0;
    virtual HRESULT __stdcall get_merge (
        VARIANT_BOOL * merge ) = 0;
    virtual HRESULT __stdcall put_merge (
        VARIANT_BOOL merge ) = 0;
    virtual HRESULT __stdcall get_FeatureScope (
        VARIANT_BOOL * featScope ) = 0;
    virtual HRESULT __stdcall put_FeatureScope (
        VARIANT_BOOL featScope ) = 0;
    virtual HRESULT __stdcall get_AutoSelect (
        VARIANT_BOOL * autoSel ) = 0;
    virtual HRESULT __stdcall put_AutoSelect (
        VARIANT_BOOL autoSel ) = 0;
    virtual HRESULT __stdcall get_FeatureScopeBodies (
        VARIANT * bodyVar ) = 0;
    virtual HRESULT __stdcall put_FeatureScopeBodies (
        VARIANT bodyVar ) = 0;
    virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetFeatureScopeBodies (
        long count,
        struct IBody2 * * bodyArr ) = 0;
    virtual HRESULT __stdcall ISetFeatureScopeBodies (
        long count,
        struct IBody2 * * bodyArr ) = 0;
    virtual HRESULT __stdcall get_MergeSmoothFaces (
        VARIANT_BOOL * bMerge ) = 0;
    virtual HRESULT __stdcall put_MergeSmoothFaces (
        VARIANT_BOOL bMerge ) = 0;
};

struct __declspec(uuid("ee8d87fe-5202-45e9-8e5c-91084c134168"))
ILoftFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetProfileCount (
        short * count ) = 0;
    virtual HRESULT __stdcall IGetProfiles (
        short count,
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall ISetProfiles (
        short count,
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall get_Profiles (
        VARIANT * pDisp ) = 0;
    virtual HRESULT __stdcall put_Profiles (
        VARIANT pDisp ) = 0;
    virtual HRESULT __stdcall GetGuideTangencyType (
        short guideIndex,
        short * tangType ) = 0;
    virtual HRESULT __stdcall SetGuideTangencyType (
        short guideIndex,
        short tangType ) = 0;
    virtual HRESULT __stdcall get_MaintainTangency (
        VARIANT_BOOL * tangency ) = 0;
    virtual HRESULT __stdcall put_MaintainTangency (
        VARIANT_BOOL tangency ) = 0;
    virtual HRESULT __stdcall get_AdvancedSmoothing (
        VARIANT_BOOL * smoothing ) = 0;
    virtual HRESULT __stdcall put_AdvancedSmoothing (
        VARIANT_BOOL smoothing ) = 0;
    virtual HRESULT __stdcall get_Close (
        VARIANT_BOOL * isClosed ) = 0;
    virtual HRESULT __stdcall put_Close (
        VARIANT_BOOL isClosed ) = 0;
    virtual HRESULT __stdcall GetGuideCurvesCount (
        short * count ) = 0;
    virtual HRESULT __stdcall IGetGuideCurves (
        short count,
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall ISetGuideCurves (
        short count,
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall get_GuideCurves (
        VARIANT * ArrayIn ) = 0;
    virtual HRESULT __stdcall put_GuideCurves (
        VARIANT ArrayIn ) = 0;
    virtual HRESULT __stdcall get_StartTangencyType (
        short * tangencyType ) = 0;
    virtual HRESULT __stdcall put_StartTangencyType (
        short tangencyType ) = 0;
    virtual HRESULT __stdcall get_EndTangencyType (
        short * tangencyType ) = 0;
    virtual HRESULT __stdcall put_EndTangencyType (
        short tangencyType ) = 0;
    virtual HRESULT __stdcall IsThinFeature (
        VARIANT_BOOL * thin ) = 0;
    virtual HRESULT __stdcall get_ThinWallType (
        short * thinType ) = 0;
    virtual HRESULT __stdcall put_ThinWallType (
        short thinType ) = 0;
    virtual HRESULT __stdcall GetWallThickness (
        VARIANT_BOOL forward,
        double * wallThickness ) = 0;
    virtual HRESULT __stdcall SetWallThickness (
        VARIANT_BOOL forward,
        double wallThickness ) = 0;
    virtual HRESULT __stdcall IsBossFeature (
        VARIANT_BOOL * IsBossFeature ) = 0;
    virtual HRESULT __stdcall get_StartDirectionVector (
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall put_StartDirectionVector (
        IDispatch * pDisp ) = 0;
    virtual HRESULT __stdcall get_startTangentLength (
        double * length ) = 0;
    virtual HRESULT __stdcall put_startTangentLength (
        double length ) = 0;
    virtual HRESULT __stdcall get_ReverseStartTangentDirection (
        VARIANT_BOOL * direction ) = 0;
    virtual HRESULT __stdcall put_ReverseStartTangentDirection (
        VARIANT_BOOL direction ) = 0;
    virtual HRESULT __stdcall get_EndDirectionVector (
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall put_EndDirectionVector (
        IDispatch * pDisp ) = 0;
    virtual HRESULT __stdcall get_endTangentLength (
        double * length ) = 0;
    virtual HRESULT __stdcall put_endTangentLength (
        double length ) = 0;
    virtual HRESULT __stdcall get_ReverseEndTangentDirection (
        VARIANT_BOOL * direction ) = 0;
    virtual HRESULT __stdcall put_ReverseEndTangentDirection (
        VARIANT_BOOL direction ) = 0;
    virtual HRESULT __stdcall get_CenterLine (
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall put_CenterLine (
        IDispatch * pDisp ) = 0;
    virtual HRESULT __stdcall GetGuideCurvesType (
        VARIANT * typeArr ) = 0;
    virtual HRESULT __stdcall IGetGuideCurvesType (
        long count,
        long * typeArr ) = 0;
    virtual HRESULT __stdcall get_merge (
        VARIANT_BOOL * isMerge ) = 0;
    virtual HRESULT __stdcall put_merge (
        VARIANT_BOOL isMerge ) = 0;
    virtual HRESULT __stdcall get_FeatureScope (
        VARIANT_BOOL * featScope ) = 0;
    virtual HRESULT __stdcall put_FeatureScope (
        VARIANT_BOOL featScope ) = 0;
    virtual HRESULT __stdcall get_AutoSelect (
        VARIANT_BOOL * autoSel ) = 0;
    virtual HRESULT __stdcall put_AutoSelect (
        VARIANT_BOOL autoSel ) = 0;
    virtual HRESULT __stdcall get_FeatureScopeBodies (
        VARIANT * bodyVar ) = 0;
    virtual HRESULT __stdcall put_FeatureScopeBodies (
        VARIANT bodyVar ) = 0;
    virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetFeatureScopeBodies (
        long count,
        struct IBody2 * * bodyArr ) = 0;
    virtual HRESULT __stdcall ISetFeatureScopeBodies (
        long count,
        struct IBody2 * * bodyArr ) = 0;
    virtual HRESULT __stdcall get_NumberOfSections (
        double * num ) = 0;
    virtual HRESULT __stdcall put_NumberOfSections (
        double num ) = 0;
};

struct __declspec(uuid("85f4dd78-9430-4937-8504-55d24f2cee41"))
IThickenFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_surface (
        IDispatch * * pDispSurf ) = 0;
    virtual HRESULT __stdcall put_surface (
        IDispatch * pDispSurf ) = 0;
    virtual HRESULT __stdcall get_thickness (
        double * thickness ) = 0;
    virtual HRESULT __stdcall put_thickness (
        double thickness ) = 0;
    virtual HRESULT __stdcall get_ThicknessSide (
        short * side ) = 0;
    virtual HRESULT __stdcall put_ThicknessSide (
        short side ) = 0;
    virtual HRESULT __stdcall get_fillVolume (
        VARIANT_BOOL * isFill ) = 0;
    virtual HRESULT __stdcall put_fillVolume (
        VARIANT_BOOL isFill ) = 0;
    virtual HRESULT __stdcall get_merge (
        VARIANT_BOOL * isMerge ) = 0;
    virtual HRESULT __stdcall put_merge (
        VARIANT_BOOL isMerge ) = 0;
    virtual HRESULT __stdcall get_FeatureScope (
        VARIANT_BOOL * featScope ) = 0;
    virtual HRESULT __stdcall put_FeatureScope (
        VARIANT_BOOL featScope ) = 0;
    virtual HRESULT __stdcall get_AutoSelect (
        VARIANT_BOOL * autoSel ) = 0;
    virtual HRESULT __stdcall put_AutoSelect (
        VARIANT_BOOL autoSel ) = 0;
    virtual HRESULT __stdcall get_FeatureScopeBodies (
        VARIANT * bodyVar ) = 0;
    virtual HRESULT __stdcall put_FeatureScopeBodies (
        VARIANT bodyVar ) = 0;
    virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetFeatureScopeBodies (
        long count,
        struct IBody2 * * bodyArr ) = 0;
    virtual HRESULT __stdcall ISetFeatureScopeBodies (
        long count,
        struct IBody2 * * bodyArr ) = 0;
};

struct __declspec(uuid("dfb6c63b-287c-4141-a610-08d94cece976"))
ISurfaceCutFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_SurfaceForCut (
        IDispatch * * surfDisp ) = 0;
    virtual HRESULT __stdcall put_SurfaceForCut (
        IDispatch * surfDisp ) = 0;
    virtual HRESULT __stdcall get_flip (
        VARIANT_BOOL * flip ) = 0;
    virtual HRESULT __stdcall put_flip (
        VARIANT_BOOL flip ) = 0;
    virtual HRESULT __stdcall GetBodyIndexKept (
        short * index ) = 0;
};

struct __declspec(uuid("d7792e79-5983-45c7-ae7d-966fcb6604d8"))
IReplaceFaceFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetReplacementSurfacesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetReplacementSurfaces (
        long count,
        struct IFeature * * surfDisp ) = 0;
    virtual HRESULT __stdcall ISetReplacementSurfaces (
        long count,
        struct IFeature * * surfDisp ) = 0;
    virtual HRESULT __stdcall get_ReplacementSurfaces (
        VARIANT * surfDisp ) = 0;
    virtual HRESULT __stdcall put_ReplacementSurfaces (
        VARIANT surfDisp ) = 0;
    virtual HRESULT __stdcall GetFacesForReplacementCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetFacesForReplacement (
        long count,
        struct IFace2 * * surfDisp ) = 0;
    virtual HRESULT __stdcall ISetFacesForReplacement (
        long count,
        struct IFace2 * * surfDisp ) = 0;
    virtual HRESULT __stdcall get_FacesForReplacement (
        VARIANT * surfDisp ) = 0;
    virtual HRESULT __stdcall put_FacesForReplacement (
        VARIANT surfDisp ) = 0;
};

struct __declspec(uuid("739ac7ce-9017-11d5-af07-0002b34143e5"))
IMacroFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_MacroFileName (
        BSTR * fileName ) = 0;
    virtual HRESULT __stdcall put_MacroFileName (
        BSTR fileName ) = 0;
    virtual HRESULT __stdcall get_moduleName (
        BSTR * moduleName ) = 0;
    virtual HRESULT __stdcall put_moduleName (
        BSTR moduleName ) = 0;
    virtual HRESULT __stdcall get_procedureName (
        BSTR * procedureName ) = 0;
    virtual HRESULT __stdcall put_procedureName (
        BSTR procedureName ) = 0;
    virtual HRESULT __stdcall GetModuleNames (
        VARIANT * moduleNames ) = 0;
    virtual HRESULT __stdcall GetModuleCount (
        long * moduleCount ) = 0;
    virtual HRESULT __stdcall IGetModuleNames (
        long moduleCount,
        BSTR * moduleNames ) = 0;
    virtual HRESULT __stdcall GetProcedureNames (
        BSTR moduleName,
        VARIANT * procedureNames ) = 0;
    virtual HRESULT __stdcall GetProcedureCount (
        BSTR moduleName,
        long * procedureCount ) = 0;
    virtual HRESULT __stdcall IGetProcedureNames (
        BSTR moduleName,
        long procedureCount,
        BSTR * procedureNames ) = 0;
    virtual HRESULT __stdcall get_PropertyManagerHandleMacroFileName (
        BSTR * fileName ) = 0;
    virtual HRESULT __stdcall put_PropertyManagerHandleMacroFileName (
        BSTR fileName ) = 0;
    virtual HRESULT __stdcall get_PropertyManagerHandleModuleName (
        BSTR * moduleName ) = 0;
    virtual HRESULT __stdcall put_PropertyManagerHandleModuleName (
        BSTR moduleName ) = 0;
    virtual HRESULT __stdcall get_PropertyManagerHandleProcedureName (
        BSTR * procedureName ) = 0;
    virtual HRESULT __stdcall put_PropertyManagerHandleProcedureName (
        BSTR procedureName ) = 0;
    virtual HRESULT __stdcall GetPropertyManagerHandleModuleNames (
        VARIANT * moduleNames ) = 0;
    virtual HRESULT __stdcall GetPropertyManagerHandleModuleCount (
        long * moduleCount ) = 0;
    virtual HRESULT __stdcall IGetPropertyManagerHandleModuleNames (
        long moduleCount,
        BSTR * moduleNames ) = 0;
    virtual HRESULT __stdcall GetPropertyManagerHandleProcedureNames (
        BSTR moduleName,
        VARIANT * procedureNames ) = 0;
    virtual HRESULT __stdcall GetPropertyManagerHandleProcedureCount (
        BSTR moduleName,
        long * procedureCount ) = 0;
    virtual HRESULT __stdcall IGetPropertyManagerHandleProcedureNames (
        BSTR moduleName,
        long procedureCount,
        BSTR * procedureNames ) = 0;
    virtual HRESULT __stdcall GetSelections (
        VARIANT * objects,
        VARIANT * objectTypes,
        VARIANT * selMarks ) = 0;
    virtual HRESULT __stdcall SetSelections (
        VARIANT objects,
        VARIANT selMarks ) = 0;
    virtual HRESULT __stdcall GetSelectionCount (
        long * selCount ) = 0;
    virtual HRESULT __stdcall IGetSelections (
        long selCount,
        IDispatch * * objects,
        long * objectTypes,
        long * selMarks ) = 0;
    virtual HRESULT __stdcall ISetSelections (
        long selCount,
        IDispatch * * objects,
        long * selMarks ) = 0;
    virtual HRESULT __stdcall GetParameters (
        VARIANT * paramNames,
        VARIANT * paramTypes,
        VARIANT * paramValues ) = 0;
    virtual HRESULT __stdcall SetParameters (
        VARIANT paramNames,
        VARIANT paramTypes,
        VARIANT paramValues ) = 0;
    virtual HRESULT __stdcall GetParameterCount (
        long * paramCount ) = 0;
    virtual HRESULT __stdcall IGetParameters (
        long paramCount,
        BSTR * paramNames,
        long * paramTypes,
        BSTR * paramValues ) = 0;
    virtual HRESULT __stdcall ISetParameters (
        long paramCount,
        BSTR * paramNames,
        long * paramTypes,
        BSTR * paramValues ) = 0;
    virtual HRESULT __stdcall GetIntegerByName (
        BSTR paramName,
        long * paramValue ) = 0;
    virtual HRESULT __stdcall SetIntegerByName (
        BSTR paramName,
        long paramValue ) = 0;
    virtual HRESULT __stdcall GetDoubleByName (
        BSTR paramName,
        double * paramValue ) = 0;
    virtual HRESULT __stdcall SetDoubleByName (
        BSTR paramName,
        double paramValue ) = 0;
    virtual HRESULT __stdcall GetStringByName (
        BSTR paramName,
        BSTR * paramValue ) = 0;
    virtual HRESULT __stdcall SetStringByName (
        BSTR paramName,
        BSTR paramValue ) = 0;
    virtual HRESULT __stdcall get_editBody (
        struct IBody2 * * editBody ) = 0;
    virtual HRESULT __stdcall put_editBody (
        struct IBody2 * editBody ) = 0;
    virtual HRESULT __stdcall GetFaceUserId (
        struct IFace2 * face,
        long * id1,
        long * id2,
        VARIANT_BOOL * isValid ) = 0;
    virtual HRESULT __stdcall SetFaceUserId (
        struct IFace2 * face,
        long id1,
        long id2,
        VARIANT_BOOL * isValid ) = 0;
    virtual HRESULT __stdcall GetEdgeUserId (
        struct IEdge * Edge,
        long * id1,
        long * id2,
        VARIANT_BOOL * isValid ) = 0;
    virtual HRESULT __stdcall SetEdgeUserId (
        struct IEdge * Edge,
        long id1,
        long id2,
        VARIANT_BOOL * isValid ) = 0;
    virtual HRESULT __stdcall GetSelections2 (
        VARIANT * objects,
        VARIANT * objectTypes,
        VARIANT * selMarks,
        VARIANT * drViews ) = 0;
    virtual HRESULT __stdcall SetSelections2 (
        VARIANT objects,
        VARIANT selMarks,
        VARIANT drViews ) = 0;
    virtual HRESULT __stdcall IGetSelections2 (
        long selCount,
        IDispatch * * objects,
        long * objectTypes,
        long * selMarks,
        struct IView * * drViews ) = 0;
    virtual HRESULT __stdcall ISetSelections2 (
        long selCount,
        IDispatch * * objects,
        long * selMarks,
        struct IView * * drViews ) = 0;
    virtual HRESULT __stdcall GetFaceIdType (
        struct IFace2 * face,
        long * idType ) = 0;
    virtual HRESULT __stdcall GetEdgeIdType (
        struct IEdge * Edge,
        long * idType ) = 0;
    virtual HRESULT __stdcall GetEntitiesNeedUserId (
        IDispatch * Body,
        VARIANT * faces,
        VARIANT * edges ) = 0;
    virtual HRESULT __stdcall GetEntitiesNeedUserIdCount (
        struct IBody2 * Body,
        long * faceCount,
        long * edgeCount ) = 0;
    virtual HRESULT __stdcall IGetEntitiesNeedUserId (
        struct IBody2 * Body,
        long faceCount,
        struct IFace2 * * faces,
        long edgeCount,
        struct IEdge * * edges ) = 0;
    virtual HRESULT __stdcall IsCOMFeature (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall GetProgId (
        BSTR * progId ) = 0;
    virtual HRESULT __stdcall get_SecurityHandleMacroFileName (
        BSTR * fileName ) = 0;
    virtual HRESULT __stdcall put_SecurityHandleMacroFileName (
        BSTR fileName ) = 0;
    virtual HRESULT __stdcall get_SecurityHandleModuleName (
        BSTR * moduleName ) = 0;
    virtual HRESULT __stdcall put_SecurityHandleModuleName (
        BSTR moduleName ) = 0;
    virtual HRESULT __stdcall get_SecurityHandleProcedureName (
        BSTR * procedureName ) = 0;
    virtual HRESULT __stdcall put_SecurityHandleProcedureName (
        BSTR procedureName ) = 0;
    virtual HRESULT __stdcall GetBaseName (
        BSTR * baseName ) = 0;
};

struct __declspec(uuid("496a6d86-2180-46d8-a973-7885554efaf3"))
ICurveDrivenPatternFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_D1Direction (
        IDispatch * * dir ) = 0;
    virtual HRESULT __stdcall put_D1Direction (
        IDispatch * dir ) = 0;
    virtual HRESULT __stdcall get_D2Direction (
        IDispatch * * dir ) = 0;
    virtual HRESULT __stdcall put_D2Direction (
        IDispatch * dir ) = 0;
    virtual HRESULT __stdcall get_D1ReverseDirection (
        VARIANT_BOOL * isRev ) = 0;
    virtual HRESULT __stdcall put_D1ReverseDirection (
        VARIANT_BOOL isRev ) = 0;
    virtual HRESULT __stdcall get_D2ReverseDirection (
        VARIANT_BOOL * isRev ) = 0;
    virtual HRESULT __stdcall put_D2ReverseDirection (
        VARIANT_BOOL isRev ) = 0;
    virtual HRESULT __stdcall get_D1InstanceCount (
        long * instCount ) = 0;
    virtual HRESULT __stdcall put_D1InstanceCount (
        long instCount ) = 0;
    virtual HRESULT __stdcall get_D2InstanceCount (
        long * instCount ) = 0;
    virtual HRESULT __stdcall put_D2InstanceCount (
        long instCount ) = 0;
    virtual HRESULT __stdcall get_D1IsEqualSpaced (
        VARIANT_BOOL * isEq ) = 0;
    virtual HRESULT __stdcall put_D1IsEqualSpaced (
        VARIANT_BOOL isEq ) = 0;
    virtual HRESULT __stdcall get_D2IsEqualSpaced (
        VARIANT_BOOL * isEq ) = 0;
    virtual HRESULT __stdcall put_D2IsEqualSpaced (
        VARIANT_BOOL isEq ) = 0;
    virtual HRESULT __stdcall get_D1Spacing (
        double * spacing ) = 0;
    virtual HRESULT __stdcall put_D1Spacing (
        double spacing ) = 0;
    virtual HRESULT __stdcall get_D2Spacing (
        double * spacing ) = 0;
    virtual HRESULT __stdcall put_D2Spacing (
        double spacing ) = 0;
    virtual HRESULT __stdcall get_Dir2Specified (
        VARIANT_BOOL * is2Dir ) = 0;
    virtual HRESULT __stdcall put_Dir2Specified (
        VARIANT_BOOL is2Dir ) = 0;
    virtual HRESULT __stdcall get_D2PatternSeedOnly (
        VARIANT_BOOL * seedOnly ) = 0;
    virtual HRESULT __stdcall put_D2PatternSeedOnly (
        VARIANT_BOOL seedOnly ) = 0;
    virtual HRESULT __stdcall get_D1CurveMethod (
        long * curveMethod ) = 0;
    virtual HRESULT __stdcall put_D1CurveMethod (
        long curveMethod ) = 0;
    virtual HRESULT __stdcall get_D1AlignmentMethod (
        long * alignMethod ) = 0;
    virtual HRESULT __stdcall put_D1AlignmentMethod (
        long alignMethod ) = 0;
    virtual HRESULT __stdcall get_SkippedItemArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_SkippedItemArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetSkippedItemCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetSkippedItemArray (
        long * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetSkippedItemArray (
        long featCount,
        long * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_PatternFeatureArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternFeatureArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternFeatureCount (
        long * featCount ) = 0;
    virtual HRESULT __stdcall IGetPatternFeatureArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternFeatureArray (
        long featCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_GeometryPattern (
        VARIANT_BOOL * geometry ) = 0;
    virtual HRESULT __stdcall put_GeometryPattern (
        VARIANT_BOOL geometry ) = 0;
    virtual HRESULT __stdcall get_VarySketch (
        VARIANT_BOOL * VarySketch ) = 0;
    virtual HRESULT __stdcall put_VarySketch (
        VARIANT_BOOL VarySketch ) = 0;
    virtual HRESULT __stdcall get_PatternFaceArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternFaceArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternFaceCount (
        long * faceCount ) = 0;
    virtual HRESULT __stdcall IGetPatternFaceArray (
        IDispatch * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternFaceArray (
        long faceCount,
        IDispatch * * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall get_PatternBodyArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_PatternBodyArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPatternBodyCount (
        long * bodyCount ) = 0;
    virtual HRESULT __stdcall IGetPatternBodyArray (
        struct IBody2 * * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPatternBodyArray (
        long bodyCount,
        struct IBody2 * * ArrayDataIn ) = 0;
};

struct __declspec(uuid("d3352f26-3333-455e-910b-e0f3a44e76fd"))
IRipFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetEdgesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall get_edges (
        VARIANT * edgeArr ) = 0;
    virtual HRESULT __stdcall put_edges (
        VARIANT edgeArr ) = 0;
    virtual HRESULT __stdcall IGetEdges (
        long edgeCount,
        IDispatch * * edgeArr ) = 0;
    virtual HRESULT __stdcall ISetEdges (
        long edgeCount,
        IDispatch * * edgeArr ) = 0;
    virtual HRESULT __stdcall get_gap (
        double * gap ) = 0;
    virtual HRESULT __stdcall put_gap (
        double gap ) = 0;
    virtual HRESULT __stdcall GetDirection (
        IDispatch * Edge,
        long * dir ) = 0;
    virtual HRESULT __stdcall SetDirection (
        IDispatch * Edge,
        long dir ) = 0;
};

struct __declspec(uuid("d1e54427-2421-413f-9eb3-f568a6bf826d"))
IHemFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetEdgesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall get_edges (
        VARIANT * edgeArr ) = 0;
    virtual HRESULT __stdcall put_edges (
        VARIANT edgeArr ) = 0;
    virtual HRESULT __stdcall IGetEdges (
        long edgeCount,
        IDispatch * * edgeArr ) = 0;
    virtual HRESULT __stdcall ISetEdges (
        long edgeCount,
        IDispatch * * edgeArr ) = 0;
    virtual HRESULT __stdcall get_MiterGap (
        double * gap ) = 0;
    virtual HRESULT __stdcall put_MiterGap (
        double gap ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * rev ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL rev ) = 0;
    virtual HRESULT __stdcall get_bendPosition (
        long * pos ) = 0;
    virtual HRESULT __stdcall put_bendPosition (
        long pos ) = 0;
    virtual HRESULT __stdcall get_type (
        long * type ) = 0;
    virtual HRESULT __stdcall put_type (
        long type ) = 0;
    virtual HRESULT __stdcall get_length (
        double * len ) = 0;
    virtual HRESULT __stdcall put_length (
        double len ) = 0;
    virtual HRESULT __stdcall get_GapDistance (
        double * dist ) = 0;
    virtual HRESULT __stdcall put_GapDistance (
        double dist ) = 0;
    virtual HRESULT __stdcall get_angle (
        double * ang ) = 0;
    virtual HRESULT __stdcall put_angle (
        double ang ) = 0;
    virtual HRESULT __stdcall get_radius (
        double * rad ) = 0;
    virtual HRESULT __stdcall put_radius (
        double rad ) = 0;
    virtual HRESULT __stdcall GetCustomBendAllowance (
        struct ICustomBendAllowance * * pBendData ) = 0;
    virtual HRESULT __stdcall SetCustomBendAllowance (
        struct ICustomBendAllowance * pBendData ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        VARIANT_BOOL UseDefaultBendAllowance ) = 0;
};

struct __declspec(uuid("df91cd7f-f4d5-471a-831b-e201b2c02090"))
IBreakCornerFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_Entities (
        VARIANT * entArray ) = 0;
    virtual HRESULT __stdcall put_Entities (
        VARIANT entArray ) = 0;
    virtual HRESULT __stdcall GetEntitiesCount (
        long * ret ) = 0;
    virtual HRESULT __stdcall IGetEntities (
        long count,
        IDispatch * * entArray ) = 0;
    virtual HRESULT __stdcall ISetEntities (
        long entCount,
        IDispatch * * entArray ) = 0;
    virtual HRESULT __stdcall get_breakType (
        long * type ) = 0;
    virtual HRESULT __stdcall put_breakType (
        long type ) = 0;
    virtual HRESULT __stdcall get_distance (
        double * dist ) = 0;
    virtual HRESULT __stdcall put_distance (
        double dist ) = 0;
};

struct __declspec(uuid("c75ca537-4aba-44f3-ac3b-73d5dcd0c834"))
IJogFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_FixedFace (
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall put_FixedFace (
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendRadius (
        VARIANT_BOOL * UseDefaultBendRadius ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendRadius (
        VARIANT_BOOL UseDefaultBendRadius ) = 0;
    virtual HRESULT __stdcall get_BendRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall put_BendRadius (
        double radius ) = 0;
    virtual HRESULT __stdcall get_JogAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_JogAngle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_offsetType (
        long * offsetType ) = 0;
    virtual HRESULT __stdcall put_offsetType (
        long offsetType ) = 0;
    virtual HRESULT __stdcall get_offsetReference (
        IDispatch * * offsetReference ) = 0;
    virtual HRESULT __stdcall put_offsetReference (
        IDispatch * offsetReference ) = 0;
    virtual HRESULT __stdcall get_ReverseOffset (
        VARIANT_BOOL * reverse ) = 0;
    virtual HRESULT __stdcall put_ReverseOffset (
        VARIANT_BOOL reverse ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * reverse ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL reverse ) = 0;
    virtual HRESULT __stdcall get_offsetDistance (
        double * offsetDistance ) = 0;
    virtual HRESULT __stdcall put_offsetDistance (
        double offsetDistance ) = 0;
    virtual HRESULT __stdcall get_DimensionPositionType (
        long * PositionType ) = 0;
    virtual HRESULT __stdcall put_DimensionPositionType (
        long PositionType ) = 0;
    virtual HRESULT __stdcall get_FixProjectedLength (
        VARIANT_BOOL * fix ) = 0;
    virtual HRESULT __stdcall put_FixProjectedLength (
        VARIANT_BOOL fix ) = 0;
    virtual HRESULT __stdcall get_JogPositionType (
        long * type ) = 0;
    virtual HRESULT __stdcall put_JogPositionType (
        long type ) = 0;
    virtual HRESULT __stdcall get_FixedPoint (
        VARIANT * point ) = 0;
    virtual HRESULT __stdcall put_FixedPoint (
        VARIANT point ) = 0;
    virtual HRESULT __stdcall IGetFixedPoint (
        double * point ) = 0;
    virtual HRESULT __stdcall ISetFixedPoint (
        double * point ) = 0;
    virtual HRESULT __stdcall GetOffsetReferenceType (
        long * referenceType ) = 0;
    virtual HRESULT __stdcall GetCustomBendAllowance (
        struct ICustomBendAllowance * * pBendData ) = 0;
    virtual HRESULT __stdcall SetCustomBendAllowance (
        struct ICustomBendAllowance * pBendData ) = 0;
    virtual HRESULT __stdcall get_UseDefaultBendAllowance (
        VARIANT_BOOL * UseDefaultBendAllowance ) = 0;
    virtual HRESULT __stdcall put_UseDefaultBendAllowance (
        VARIANT_BOOL UseDefaultBendAllowance ) = 0;
};

struct __declspec(uuid("157ce6b0-16bc-49a3-b207-95159b02306c"))
ISurfExtrudeFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetEndCondition (
        VARIANT_BOOL forward,
        int * endCondition ) = 0;
    virtual HRESULT __stdcall SetEndCondition (
        VARIANT_BOOL forward,
        int endCondition ) = 0;
    virtual HRESULT __stdcall GetDepth (
        VARIANT_BOOL forward,
        double * depth ) = 0;
    virtual HRESULT __stdcall SetDepth (
        VARIANT_BOOL forward,
        double depth ) = 0;
    virtual HRESULT __stdcall GetFace (
        VARIANT_BOOL forward,
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall SetFace (
        VARIANT_BOOL forward,
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall IGetFace (
        VARIANT_BOOL forward,
        struct IFace2 * * face ) = 0;
    virtual HRESULT __stdcall ISetFace (
        VARIANT_BOOL forward,
        struct IFace2 * face ) = 0;
    virtual HRESULT __stdcall GetVertex (
        VARIANT_BOOL forward,
        IDispatch * * vtx ) = 0;
    virtual HRESULT __stdcall SetVertex (
        VARIANT_BOOL forward,
        IDispatch * vtx ) = 0;
    virtual HRESULT __stdcall IGetVertex (
        VARIANT_BOOL forward,
        struct IVertex * * vtx ) = 0;
    virtual HRESULT __stdcall ISetVertex (
        VARIANT_BOOL forward,
        struct IVertex * vtx ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_bothDirections (
        VARIANT_BOOL * bothDirections ) = 0;
    virtual HRESULT __stdcall put_bothDirections (
        VARIANT_BOOL bothDirections ) = 0;
    virtual HRESULT __stdcall GetReverseOffset (
        VARIANT_BOOL fwd,
        VARIANT_BOOL * revOffset ) = 0;
    virtual HRESULT __stdcall SetReverseOffset (
        VARIANT_BOOL fwd,
        VARIANT_BOOL revOffset ) = 0;
    virtual HRESULT __stdcall GetTranslateSurface (
        VARIANT_BOOL fwd,
        VARIANT_BOOL * trans ) = 0;
    virtual HRESULT __stdcall SetTranslateSurface (
        VARIANT_BOOL fwd,
        VARIANT_BOOL trans ) = 0;
};

struct __declspec(uuid("38d7f138-4403-4eb0-8e9e-7daf6ba385cf"))
ISurfRevolveFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetRevolutionAngle (
        VARIANT_BOOL forward,
        double * angle ) = 0;
    virtual HRESULT __stdcall SetRevolutionAngle (
        VARIANT_BOOL forward,
        double angle ) = 0;
    virtual HRESULT __stdcall get_type (
        int * type ) = 0;
    virtual HRESULT __stdcall put_type (
        int type ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
};

struct __declspec(uuid("214152e2-2f73-42e3-ab88-690c2ed9910d"))
ISurfaceOffsetFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_faces (
        VARIANT * faceArray ) = 0;
    virtual HRESULT __stdcall put_faces (
        VARIANT faceArray ) = 0;
    virtual HRESULT __stdcall GetFacesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetFaces (
        long count,
        struct IFace2 * * faceArr ) = 0;
    virtual HRESULT __stdcall ISetFaces (
        long count,
        struct IFace2 * * faceArr ) = 0;
    virtual HRESULT __stdcall get_distance (
        double * dist ) = 0;
    virtual HRESULT __stdcall put_distance (
        double dist ) = 0;
    virtual HRESULT __stdcall get_flip (
        VARIANT_BOOL * flip ) = 0;
    virtual HRESULT __stdcall put_flip (
        VARIANT_BOOL flip ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
};

struct __declspec(uuid("6ce5bd99-0769-4daf-8206-07513b6c0005"))
ISurfaceKnitFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetEntitiesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall get_Entities (
        VARIANT * outArr ) = 0;
    virtual HRESULT __stdcall put_Entities (
        VARIANT outArr ) = 0;
    virtual HRESULT __stdcall IGetEntities (
        long count,
        IDispatch * * faceArr ) = 0;
    virtual HRESULT __stdcall ISetEntities (
        long count,
        IDispatch * * faceArr ) = 0;
    virtual HRESULT __stdcall get_SeedFace (
        IDispatch * * SeedFace ) = 0;
    virtual HRESULT __stdcall put_SeedFace (
        IDispatch * SeedFace ) = 0;
};

struct __declspec(uuid("72249e3d-b571-416d-9034-de3be1d9937c"))
ISurfaceExtendFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetItemsCount (
        long * count ) = 0;
    virtual HRESULT __stdcall get_Items (
        VARIANT * outArr ) = 0;
    virtual HRESULT __stdcall put_Items (
        VARIANT outArr ) = 0;
    virtual HRESULT __stdcall IGetItems (
        long count,
        IDispatch * * itemArr ) = 0;
    virtual HRESULT __stdcall ISetItems (
        long count,
        IDispatch * * itemArr ) = 0;
    virtual HRESULT __stdcall get_endCondition (
        long * endCond ) = 0;
    virtual HRESULT __stdcall put_endCondition (
        long endCond ) = 0;
    virtual HRESULT __stdcall get_face (
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall put_face (
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall get_IFace (
        struct IFace2 * * face ) = 0;
    virtual HRESULT __stdcall put_IFace (
        struct IFace2 * face ) = 0;
    virtual HRESULT __stdcall get_Vertex (
        IDispatch * * vtx ) = 0;
    virtual HRESULT __stdcall put_Vertex (
        IDispatch * vtx ) = 0;
    virtual HRESULT __stdcall get_IVertex (
        struct IVertex * * vtx ) = 0;
    virtual HRESULT __stdcall put_IVertex (
        struct IVertex * vtx ) = 0;
    virtual HRESULT __stdcall get_distance (
        double * dist ) = 0;
    virtual HRESULT __stdcall put_distance (
        double dist ) = 0;
    virtual HRESULT __stdcall get_type (
        long * type ) = 0;
    virtual HRESULT __stdcall put_type (
        long type ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetPropagatingEdgesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall get_PropagatingEdges (
        VARIANT * outArr ) = 0;
    virtual HRESULT __stdcall put_PropagatingEdges (
        VARIANT outArr ) = 0;
    virtual HRESULT __stdcall IGetPropagatingEdges (
        long count,
        struct IEdge * * edgeArr ) = 0;
    virtual HRESULT __stdcall ISetPropagatingEdges (
        long count,
        struct IEdge * * edgeArr ) = 0;
};

struct __declspec(uuid("6a0860dc-bc79-4dfd-8a06-252efccfcd37"))
ISurfacePlanarFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetBoundingEntitiesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetBoundingEntities (
        long count,
        IDispatch * * dispArr ) = 0;
    virtual HRESULT __stdcall ISetBoundingEntities (
        long count,
        IDispatch * * dispArr ) = 0;
    virtual HRESULT __stdcall get_BoundingEntities (
        VARIANT * entVar ) = 0;
    virtual HRESULT __stdcall put_BoundingEntities (
        VARIANT entVar ) = 0;
};

struct __declspec(uuid("c9943dee-40de-4eb9-a3c5-7d5cabee3e85"))
ISurfaceTrimFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetType (
        long * type ) = 0;
    virtual HRESULT __stdcall GetTrimToolsCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetTrimTools (
        long count,
        IDispatch * * dispArr ) = 0;
    virtual HRESULT __stdcall ISetTrimTools (
        long count,
        IDispatch * * dispArr ) = 0;
    virtual HRESULT __stdcall get_TrimTools (
        VARIANT * toolVar ) = 0;
    virtual HRESULT __stdcall put_TrimTools (
        VARIANT toolVar ) = 0;
    virtual HRESULT __stdcall GetPiecesToKeepCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetPiecesToKeep (
        long count,
        struct IBody2 * * bodyArr ) = 0;
    virtual HRESULT __stdcall ISetPiecesToKeep (
        long count,
        struct IBody2 * * bodyArr ) = 0;
    virtual HRESULT __stdcall get_PiecesToKeep (
        VARIANT * toolVar ) = 0;
    virtual HRESULT __stdcall put_PiecesToKeep (
        VARIANT toolVar ) = 0;
};

struct __declspec(uuid("82f0509d-402b-4d79-ab6b-aa2888fc1e81"))
ISurfaceRadiateFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_DirectionReference (
        IDispatch * * disp ) = 0;
    virtual HRESULT __stdcall put_DirectionReference (
        IDispatch * disp ) = 0;
    virtual HRESULT __stdcall get_flip (
        VARIANT_BOOL * flip ) = 0;
    virtual HRESULT __stdcall put_flip (
        VARIANT_BOOL flip ) = 0;
    virtual HRESULT __stdcall get_PropagateToTangentFaces (
        VARIANT_BOOL * prop ) = 0;
    virtual HRESULT __stdcall put_PropagateToTangentFaces (
        VARIANT_BOOL prop ) = 0;
    virtual HRESULT __stdcall get_distance (
        double * dist ) = 0;
    virtual HRESULT __stdcall put_distance (
        double dist ) = 0;
    virtual HRESULT __stdcall GetRadiatedEntitiesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetRadiatedEntities (
        long count,
        IDispatch * * dispArr ) = 0;
    virtual HRESULT __stdcall ISetRadiatedEntities (
        long count,
        IDispatch * * dispArr ) = 0;
    virtual HRESULT __stdcall get_RadiatedEntities (
        VARIANT * entVar ) = 0;
    virtual HRESULT __stdcall put_RadiatedEntities (
        VARIANT entVar ) = 0;
};

struct __declspec(uuid("02b5cbf8-5104-41f7-901d-a4dcba547029"))
IRefPlaneFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_type (
        long * type ) = 0;
    virtual HRESULT __stdcall put_type (
        long type ) = 0;
    virtual HRESULT __stdcall get_autoSize (
        VARIANT_BOOL * autoSize ) = 0;
    virtual HRESULT __stdcall put_autoSize (
        VARIANT_BOOL autoSize ) = 0;
    virtual HRESULT __stdcall get_angle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_angle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_distance (
        double * dist ) = 0;
    virtual HRESULT __stdcall put_distance (
        double dist ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * flip ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL flip ) = 0;
    virtual HRESULT __stdcall get_OriginOnCurve (
        VARIANT_BOOL * dist ) = 0;
    virtual HRESULT __stdcall put_OriginOnCurve (
        VARIANT_BOOL dist ) = 0;
    virtual HRESULT __stdcall get_Selections (
        VARIANT * Entities ) = 0;
    virtual HRESULT __stdcall put_Selections (
        VARIANT Entities ) = 0;
    virtual HRESULT __stdcall GetSelectionsCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetSelections (
        long count,
        IDispatch * * Entities ) = 0;
    virtual HRESULT __stdcall ISetSelections (
        long count,
        IDispatch * * Entities ) = 0;
    virtual HRESULT __stdcall get_ProjectionType (
        long * type ) = 0;
    virtual HRESULT __stdcall put_ProjectionType (
        long type ) = 0;
    virtual HRESULT __stdcall get_UseNormalPlane (
        VARIANT_BOOL * normalPlane ) = 0;
    virtual HRESULT __stdcall put_UseNormalPlane (
        VARIANT_BOOL normalPlane ) = 0;
    virtual HRESULT __stdcall get_SolutionIndex (
        long * index ) = 0;
    virtual HRESULT __stdcall put_SolutionIndex (
        long index ) = 0;
};

struct __declspec(uuid("619dee3d-3398-48fe-8818-edd4169fddb8"))
ILoftedBendsFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetProfileCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetProfiles (
        long count,
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall ISetProfiles (
        long count,
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall get_Profiles (
        VARIANT * pDisp ) = 0;
    virtual HRESULT __stdcall put_Profiles (
        VARIANT pDisp ) = 0;
    virtual HRESULT __stdcall get_thickness (
        double * thickness ) = 0;
    virtual HRESULT __stdcall put_thickness (
        double thickness ) = 0;
    virtual HRESULT __stdcall get_direction (
        VARIANT_BOOL * direction ) = 0;
    virtual HRESULT __stdcall put_direction (
        VARIANT_BOOL direction ) = 0;
};

struct __declspec(uuid("8066432c-1376-4d6b-aa64-46b2d3cc5d60"))
IReferencePointCurveFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_ClosedCurve (
        VARIANT_BOOL * ret ) = 0;
    virtual HRESULT __stdcall put_ClosedCurve (
        VARIANT_BOOL ret ) = 0;
    virtual HRESULT __stdcall GetThroughPointCount (
        long * count ) = 0;
    virtual HRESULT __stdcall GetThroughPoints (
        VARIANT * type,
        VARIANT * pts ) = 0;
    virtual HRESULT __stdcall SetThroughPoints (
        VARIANT pts ) = 0;
    virtual HRESULT __stdcall IGetThroughPoints (
        long count,
        long * type,
        IDispatch * * pts ) = 0;
    virtual HRESULT __stdcall ISetThroughPoints (
        long count,
        IDispatch * * pts ) = 0;
};

struct __declspec(uuid("c11527fa-e833-4453-80dd-229f6bacc5d9"))
IFreePointCurveFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_pointArray (
        VARIANT * ArrayOut ) = 0;
    virtual HRESULT __stdcall put_pointArray (
        VARIANT ArrayOut ) = 0;
    virtual HRESULT __stdcall GetPointCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetPointArray (
        double * ArrayOut ) = 0;
    virtual HRESULT __stdcall ISetPointArray (
        long featCount,
        double * ArrayDataIn ) = 0;
    virtual HRESULT __stdcall SavePointsToFile (
        BSTR fileName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall LoadPointsFromFile (
        BSTR fileName,
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("8d5cfab8-a9f9-4b7f-9275-27e2062c324e"))
ICompositeCurveFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetEntitiesToJoinCount (
        long * count ) = 0;
    virtual HRESULT __stdcall GetEntitiesToJoin (
        VARIANT * type,
        VARIANT * entVar ) = 0;
    virtual HRESULT __stdcall SetEntitiesToJoin (
        VARIANT entVar ) = 0;
    virtual HRESULT __stdcall IGetEntitiesToJoin (
        long count,
        long * type,
        IDispatch * * ents ) = 0;
    virtual HRESULT __stdcall ISetEntitiesToJoin (
        long count,
        IDispatch * * ents ) = 0;
};

struct __declspec(uuid("70e634ee-890a-421f-abce-5208a563423c"))
IHelixFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_DefinedBy (
        long * type ) = 0;
    virtual HRESULT __stdcall put_DefinedBy (
        long type ) = 0;
    virtual HRESULT __stdcall get_height (
        double * ht ) = 0;
    virtual HRESULT __stdcall put_height (
        double ht ) = 0;
    virtual HRESULT __stdcall get_pitch (
        double * pitch ) = 0;
    virtual HRESULT __stdcall put_pitch (
        double pitch ) = 0;
    virtual HRESULT __stdcall get_revolution (
        double * rev ) = 0;
    virtual HRESULT __stdcall put_revolution (
        double rev ) = 0;
    virtual HRESULT __stdcall get_StartingAngle (
        double * ang ) = 0;
    virtual HRESULT __stdcall put_StartingAngle (
        double ang ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * dir ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL dir ) = 0;
    virtual HRESULT __stdcall get_Clockwise (
        VARIANT_BOOL * dir ) = 0;
    virtual HRESULT __stdcall put_Clockwise (
        VARIANT_BOOL dir ) = 0;
    virtual HRESULT __stdcall get_Taper (
        VARIANT_BOOL * Taper ) = 0;
    virtual HRESULT __stdcall put_Taper (
        VARIANT_BOOL Taper ) = 0;
    virtual HRESULT __stdcall get_taperangle (
        double * ang ) = 0;
    virtual HRESULT __stdcall put_taperangle (
        double ang ) = 0;
    virtual HRESULT __stdcall get_TaperOutward (
        VARIANT_BOOL * outward ) = 0;
    virtual HRESULT __stdcall put_TaperOutward (
        VARIANT_BOOL outward ) = 0;
};

struct __declspec(uuid("6dc71ec8-09f6-4d6f-ac3f-19d8ea258e0b"))
IImportedCurveFeatureData : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_curves (
        VARIANT * curveVar ) = 0;
    virtual HRESULT __stdcall put_curves (
        VARIANT curveVar ) = 0;
    virtual HRESULT __stdcall GetCurveCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetCurves (
        long count,
        IDispatch * * dispArr ) = 0;
    virtual HRESULT __stdcall ISetCurves (
        long count,
        IDispatch * * dispArr ) = 0;
    virtual HRESULT __stdcall SetBody (
        struct IBody2 * dispBody ) = 0;
};

struct __declspec(uuid("eb53b511-e23d-4b6a-b48d-21828af5f151"))
ISketchRegion : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_sketch (
        struct ISketch * * retval ) = 0;
    virtual HRESULT __stdcall GetEdgesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall GetEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEdges (
        long count,
        struct IEdge * * edgeArr ) = 0;
    virtual HRESULT __stdcall Select (
        VARIANT_BOOL Append,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("eb53b513-e23d-4b6a-b48d-21828af5f151"))
ISketchContour : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_sketch (
        struct ISketch * * retval ) = 0;
    virtual HRESULT __stdcall GetEdgesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall GetEdges (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetEdges (
        long count,
        struct IEdge * * edgeArr ) = 0;
    virtual HRESULT __stdcall GetSketchSegmentsCount (
        long * count ) = 0;
    virtual HRESULT __stdcall GetSketchSegments (
        VARIANT * retval ) = 0;
    virtual HRESULT __stdcall IGetSketchSegments (
        long count,
        struct ISketchSegment * * sketchSegmentArr ) = 0;
    virtual HRESULT __stdcall Select (
        VARIANT_BOOL Append,
        long mark,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeSelect (
        VARIANT_BOOL * retval ) = 0;
};

struct __declspec(uuid("83a33d22-37c5-11ce-bfd4-00400513bb57"))
DSldWorksEvents : IDispatch
{};

struct __declspec(uuid("0788198d-f83c-43f5-a41b-75847673f6d3"))
SldWorks;
    // [ default ] interface ISldWorks
    // [ default, source ] dispinterface DSldWorksEvents

struct __declspec(uuid("83a33d32-37c5-11ce-bfd4-00400513bb57"))
DPartDocEvents : IDispatch
{};

struct __declspec(uuid("83a33d30-27c5-11ce-bfd4-00400513bb57"))
PartDoc;
    // [ default ] interface IPartDoc
    // [ default, source ] dispinterface DPartDocEvents

struct __declspec(uuid("83a33d34-37c5-11ce-bfd4-00400513bb57"))
DDrawingDocEvents : IDispatch
{};

struct __declspec(uuid("83a33d34-27c5-11ce-bfd4-00400513bb57"))
DrawingDoc;
    // [ default ] interface IDrawingDoc
    // [ default, source ] dispinterface DDrawingDocEvents

struct __declspec(uuid("83a33d35-37c5-11ce-bfd4-00400513bb57"))
DAssemblyDocEvents : IDispatch
{};

struct __declspec(uuid("83a33d36-27c5-11ce-bfd4-00400513bb57"))
AssemblyDoc;
    // [ default ] interface IAssemblyDoc
    // [ default, source ] dispinterface DAssemblyDocEvents

struct __declspec(uuid("83a33d37-27c5-11ce-bfd4-00400513bb57"))
feature;
    // [ default ] interface IFeature

struct __declspec(uuid("83a33d39-27c5-11ce-bfd4-00400513bb57"))
Dimension;
    // [ default ] interface IDimension

struct __declspec(uuid("83a33d3b-27c5-11ce-bfd4-00400513bb57"))
Body;
    // [ default ] interface IBody

struct __declspec(uuid("83a33d3d-27c5-11ce-bfd4-00400513bb57"))
face;
    // [ default ] interface IFace

struct __declspec(uuid("83a33d3f-27c5-11ce-bfd4-00400513bb57"))
surface;
    // [ default ] interface ISurface

struct __declspec(uuid("83a33d41-27c5-11ce-bfd4-00400513bb57"))
Edge;
    // [ default ] interface IEdge

struct __declspec(uuid("83a33d43-27c5-11ce-bfd4-00400513bb57"))
Curve;
    // [ default ] interface ICurve

struct __declspec(uuid("83a33d45-27c5-11ce-bfd4-00400513bb57"))
modelDoc;
    // [ default ] interface IModelDoc

struct __declspec(uuid("83a33d47-27c5-11ce-bfd4-00400513bb57"))
Frame;
    // [ default ] interface IFrame

struct __declspec(uuid("83a33d49-27c5-11ce-bfd4-00400513bb57"))
Gtol;
    // [ default ] interface IGtol

struct __declspec(uuid("83a33d4c-37c5-11ce-bfd4-00400513bb57"))
DModelViewEvents : IDispatch
{};

struct __declspec(uuid("83a33d4b-27c5-11ce-bfd4-00400513bb57"))
ModelView;
    // [ default ] interface IModelView
    // [ default, source ] dispinterface DModelViewEvents

struct __declspec(uuid("83a33d4d-27c5-11ce-bfd4-00400513bb57"))
Member;
    // [ default ] interface IMember

struct __declspec(uuid("83a33d4f-27c5-11ce-bfd4-00400513bb57"))
view;
    // [ default ] interface IView

struct __declspec(uuid("83a33d52-27c5-11ce-bfd4-00400513bb57"))
sketch;
    // [ default ] interface ISketch

struct __declspec(uuid("83a33d54-27c5-11ce-bfd4-00400513bb57"))
loop;
    // [ default ] interface ILoop

struct __declspec(uuid("83a33d56-27c5-11ce-bfd4-00400513bb57"))
note;
    // [ default ] interface INote

struct __declspec(uuid("83a33d58-27c5-11ce-bfd4-00400513bb57"))
CoEdge;
    // [ default ] interface ICoEdge

struct __declspec(uuid("83a33d64-27c5-11ce-bfd4-00400513bb57"))
Vertex;
    // [ default ] interface IVertex

struct __declspec(uuid("83a33d5a-27c5-11ce-bfd4-00400513bb57"))
SelectionMgr;
    // [ default ] interface ISelectionMgr

struct __declspec(uuid("83a33d5c-27c5-11ce-bfd4-00400513bb57"))
EnumFaces;
    // [ default ] interface IEnumFaces

struct __declspec(uuid("5f269d24-e7a6-45b4-8850-15983215b0fe"))
EnumFaces2;
    // [ default ] interface IEnumFaces2

struct __declspec(uuid("83a33d5e-27c5-11ce-bfd4-00400513bb57"))
EnumLoops;
    // [ default ] interface IEnumLoops

struct __declspec(uuid("baa5c9a5-cce2-44d7-979a-88c1720f82aa"))
EnumLoops2;
    // [ default ] interface IEnumLoops2

struct __declspec(uuid("83a33d60-27c5-11ce-bfd4-00400513bb57"))
EnumEdges;
    // [ default ] interface IEnumEdges

struct __declspec(uuid("83a33d62-27c5-11ce-bfd4-00400513bb57"))
EnumCoEdges;
    // [ default ] interface IEnumCoEdges

struct __declspec(uuid("83a33d97-27c5-11ce-bfd4-00400513bb57"))
EnumBodies;
    // [ default ] interface IEnumBodies

struct __declspec(uuid("f5519211-91ac-4234-8c2f-42725bc6b3fe"))
EnumBodies2;
    // [ default ] interface IEnumBodies2

struct __declspec(uuid("83a33d66-27c5-11ce-bfd4-00400513bb57"))
entity;
    // [ default ] interface IEntity

struct __declspec(uuid("83a33d68-27c5-11ce-bfd4-00400513bb57"))
attributeDef;
    // [ default ] interface IAttributeDef

struct __declspec(uuid("83a33d70-27c5-11ce-bfd4-00400513bb57"))
Parameter;
    // [ default ] interface IParameter

struct __declspec(uuid("83a33d72-27c5-11ce-bfd4-00400513bb57"))
Attribute;
    // [ default ] interface IAttribute

struct __declspec(uuid("83a33d74-27c5-11ce-bfd4-00400513bb57"))
Modeler;
    // [ default ] interface IModeler

struct __declspec(uuid("83a33d76-27c5-11ce-bfd4-00400513bb57"))
DFeatMgrViewEvents : IDispatch
{};

struct __declspec(uuid("83a33d77-27c5-11ce-bfd4-00400513bb57"))
FeatMgrView;
    // [ default ] interface IFeatMgrView
    // [ default, source ] dispinterface DFeatMgrViewEvents

struct __declspec(uuid("83a33d79-27c5-11ce-bfd4-00400513bb57"))
Environment;
    // [ default ] interface IEnvironment

struct __declspec(uuid("83a33d81-27c5-11ce-bfd4-00400513bb57"))
Sheet;
    // [ default ] interface ISheet

struct __declspec(uuid("83a33d83-27c5-11ce-bfd4-00400513bb57"))
BomTable;
    // [ default ] interface IBomTable

struct __declspec(uuid("83a33d85-27c5-11ce-bfd4-00400513bb57"))
refPlane;
    // [ default ] interface IRefPlane

struct __declspec(uuid("83a33d87-27c5-11ce-bfd4-00400513bb57"))
refAxis;
    // [ default ] interface IRefAxis

struct __declspec(uuid("83a33d89-27c5-11ce-bfd4-00400513bb57"))
MidSurface;
    // [ default ] interface IMidSurface

struct __declspec(uuid("83a33d8b-27c5-11ce-bfd4-00400513bb57"))
Mate;
    // [ default ] interface IMate

struct __declspec(uuid("83a33d8d-27c5-11ce-bfd4-00400513bb57"))
MateEntity;
    // [ default ] interface IMateEntity

struct __declspec(uuid("83a33d8f-27c5-11ce-bfd4-00400513bb57"))
SFSymbol;
    // [ default ] interface ISFSymbol

struct __declspec(uuid("83a33d91-27c5-11ce-bfd4-00400513bb57"))
DatumTag;
    // [ default ] interface IDatumTag

struct __declspec(uuid("83a33d93-27c5-11ce-bfd4-00400513bb57"))
DatumTargetSym;
    // [ default ] interface IDatumTargetSym

struct __declspec(uuid("83a33d95-27c5-11ce-bfd4-00400513bb57"))
WeldSymbol;
    // [ default ] interface IWeldSymbol

struct __declspec(uuid("83a33d99-27c5-11ce-bfd4-00400513bb57"))
configuration;
    // [ default ] interface IConfiguration

struct __declspec(uuid("83a33d9b-27c5-11ce-bfd4-00400513bb57"))
component;
    // [ default ] interface IComponent

struct __declspec(uuid("83a33d9d-27c5-11ce-bfd4-00400513bb57"))
DisplayData;
    // [ default ] interface IDisplayData

struct __declspec(uuid("83a33d9f-27c5-11ce-bfd4-00400513bb57"))
CThread;
    // [ default ] interface ICThread

struct __declspec(uuid("83a33da2-27c5-11ce-bfd4-00400513bb57"))
DisplayDimension;
    // [ default ] interface IDisplayDimension

struct __declspec(uuid("83a33da4-27c5-11ce-bfd4-00400513bb57"))
ReferenceCurve;
    // [ default ] interface IReferenceCurve

struct __declspec(uuid("83a33da6-27c5-11ce-bfd4-00400513bb57"))
ColorTable;
    // [ default ] interface IColorTable

struct __declspec(uuid("e05ff9e0-fc82-11d2-9395-00c04f79bffe"))
DSWPropertySheetEvents : IDispatch
{};

struct __declspec(uuid("83a33da8-27c5-11ce-bfd4-00400513bb57"))
SWPropertySheet;
    // [ default ] interface ISWPropertySheet
    // [ default, source ] dispinterface DSWPropertySheetEvents

struct __declspec(uuid("83a33daa-27c5-11ce-bfd4-00400513bb57"))
Annotation;
    // [ default ] interface IAnnotation

struct __declspec(uuid("83a33dac-27c5-11ce-bfd4-00400513bb57"))
EnumDisplayDimensions;
    // [ default ] interface IEnumDisplayDimensions

struct __declspec(uuid("83a33dae-27c5-11ce-bfd4-00400513bb57"))
RibFeatureData;
    // [ default ] interface IRibFeatureData

struct __declspec(uuid("83a33db0-27c5-11ce-bfd4-00400513bb57"))
DomeFeatureData;
    // [ default ] interface IDomeFeatureData

struct __declspec(uuid("83a33db2-27c5-11ce-bfd4-00400513bb57"))
EnumModelViews;
    // [ default ] interface IEnumModelViews

struct __declspec(uuid("83a33db4-27c5-11ce-bfd4-00400513bb57"))
EnumDocuments;
    // [ default ] interface IEnumDocuments

struct __declspec(uuid("fce9fe1b-a6b2-4ab9-817d-d49f14e7f783"))
EnumDocuments2;
    // [ default ] interface IEnumDocuments2

struct __declspec(uuid("83a33db6-27c5-11ce-bfd4-00400513bb57"))
CustomSymbol;
    // [ default ] interface ICustomSymbol

struct __declspec(uuid("83a33db8-27c5-11ce-bfd4-00400513bb57"))
DetailingDefaults;
    // [ default ] interface IDetailingDefaults

struct __declspec(uuid("83a33dba-27c5-11ce-bfd4-00400513bb57"))
textFormat;
    // [ default ] interface ITextFormat

struct __declspec(uuid("83a33dbe-27c5-11ce-bfd4-00400513bb57"))
SketchPoint;
    // [ default ] interface ISketchPoint

struct __declspec(uuid("83a33dc0-27c5-11ce-bfd4-00400513bb57"))
SketchSegment;
    // [ default ] interface ISketchSegment

struct __declspec(uuid("83a33dc2-27c5-11ce-bfd4-00400513bb57"))
SketchLine;
    // [ default ] interface ISketchLine

struct __declspec(uuid("83a33dc4-27c5-11ce-bfd4-00400513bb57"))
SketchArc;
    // [ default ] interface ISketchArc

struct __declspec(uuid("83a33dc6-27c5-11ce-bfd4-00400513bb57"))
SketchText;
    // [ default ] interface ISketchText

struct __declspec(uuid("83a33dc8-27c5-11ce-bfd4-00400513bb57"))
SketchEllipse;
    // [ default ] interface ISketchEllipse

struct __declspec(uuid("83a33dca-27c5-11ce-bfd4-00400513bb57"))
SketchParabola;
    // [ default ] interface ISketchParabola

struct __declspec(uuid("83a33dcc-27c5-11ce-bfd4-00400513bb57"))
SketchSpline;
    // [ default ] interface ISketchSpline

struct __declspec(uuid("83a33dce-27c5-11ce-bfd4-00400513bb57"))
EnumSketchPoints;
    // [ default ] interface IEnumSketchPoints

struct __declspec(uuid("83a33df0-27c5-11ce-bfd4-00400513bb57"))
EnumSketchSegments;
    // [ default ] interface IEnumSketchSegments

struct __declspec(uuid("83a33df2-27c5-11ce-bfd4-00400513bb57"))
LightDialog;
    // [ default ] interface ILightDialog

struct __declspec(uuid("04b7287d-f19d-11d2-b8e9-00c04f8ef738"))
Layer;
    // [ default ] interface ILayer

struct __declspec(uuid("75173e31-f19e-11d2-b8e9-00c04f8ef738"))
LayerMgr;
    // [ default ] interface ILayerMgr

struct __declspec(uuid("ce1eaa89-25ad-11d3-ae91-00c04f683cba"))
DesignTable;
    // [ default ] interface IDesignTable

struct __declspec(uuid("c3d00927-4068-11d3-ae9b-00c04f683cba"))
SketchHatch;
    // [ default ] interface ISketchHatch

struct __declspec(uuid("54729b8f-4086-11d3-ae9b-00c04f683cba"))
EnumSketchHatches;
    // [ default ] interface IEnumSketchHatches

struct __declspec(uuid("5b57e3bd-7139-11d3-aea2-00c04f683cba"))
EnumCurves;
    // [ default ] interface IEnumCurves

struct __declspec(uuid("1d06fd55-96dd-11d3-aeaa-00c04f683cba"))
SimpleHoleFeatureData;
    // [ default ] interface ISimpleHoleFeatureData

struct __declspec(uuid("887ab458-a739-11d3-b97f-001083029a97"))
WizardHoleFeatureData;
    // [ default ] interface IWizardHoleFeatureData

struct __declspec(uuid("7271d7c8-acc9-11d3-b97f-001083029a97"))
ChamferFeatureData;
    // [ default ] interface IChamferFeatureData

struct __declspec(uuid("bc633ce2-b367-11d3-b981-001083029a97"))
DraftFeatureData;
    // [ default ] interface IDraftFeatureData

struct __declspec(uuid("cc929f0c-b404-11d3-b981-001083029a97"))
SimpleFilletFeatureData;
    // [ default ] interface ISimpleFilletFeatureData

struct __declspec(uuid("cc929f0e-b404-11d3-b981-001083029a97"))
VariableFilletFeatureData;
    // [ default ] interface IVariableFilletFeatureData

struct __declspec(uuid("908a7176-b72c-11d3-b981-001083029a97"))
ExtrudeFeatureData;
    // [ default ] interface IExtrudeFeatureData

struct __declspec(uuid("b7fff614-b735-11d3-b981-001083029a97"))
RevolveFeatureData;
    // [ default ] interface IRevolveFeatureData

struct __declspec(uuid("ac048cea-ae93-11d3-aea7-00c04f60f02a"))
ISdmDoc : IDispatch
{};

struct __declspec(uuid("ac048ce8-ae93-11d3-aea7-00c04f60f02a"))
SdmDoc;
    // [ default ] dispinterface ISdmDoc

struct __declspec(uuid("f183a340-d4db-11d3-aeb2-00c04f603faf"))
DrSection;
    // [ default ] interface IDrSection

struct __declspec(uuid("51efb945-d449-11d3-aebe-00c04f683cba"))
EnumComponents;
    // [ default ] interface IEnumComponents

struct __declspec(uuid("fd27da22-03e0-4db9-82da-fcf94b11a2fe"))
EnumComponents2;
    // [ default ] interface IEnumComponents2

struct __declspec(uuid("585a6a16-e95b-11d3-aebc-00c04f603faf"))
EnumDrSections;
    // [ default ] interface IEnumDrSections

struct __declspec(uuid("7241680c-0bc6-11d4-aeee-00c04f61025c"))
ExplodeStep;
    // [ default ] interface IExplodeStep

struct __declspec(uuid("f7d97f81-162e-11d4-aeab-00c04fa0ac51"))
MathUtility;
    // [ default ] interface IMathUtility

struct __declspec(uuid("f7d97f83-162e-11d4-aeab-00c04fa0ac51"))
MathTransform;
    // [ default ] interface IMathTransform

struct __declspec(uuid("f7d97f85-162e-11d4-aeab-00c04fa0ac51"))
MathPoint;
    // [ default ] interface IMathPoint

struct __declspec(uuid("f7d97f87-162e-11d4-aeab-00c04fa0ac51"))
MathVector;
    // [ default ] interface IMathVector

struct __declspec(uuid("414f4f1f-30ec-11d4-aeeb-00c04f683cba"))
MirrorPatternFeatureData;
    // [ default ] interface IMirrorPatternFeatureData

struct __declspec(uuid("4b65a34b-4c44-11d4-aef6-00c04f683cba"))
DetailCircle;
    // [ default ] interface IDetailCircle

struct __declspec(uuid("dbbf39df-7ab5-11d4-aeb6-00c04fa0ac51"))
CircularPatternFeatureData;
    // [ default ] interface ICircularPatternFeatureData

struct __declspec(uuid("f86d1e95-7de8-11d4-aeb7-00c04fa0ac51"))
LinearPatternFeatureData;
    // [ default ] interface ILinearPatternFeatureData

struct __declspec(uuid("e5d1af7d-7f5d-11d4-aeb7-00c04fa0ac51"))
TablePatternFeatureData;
    // [ default ] interface ITablePatternFeatureData

struct __declspec(uuid("ae998465-8050-11d4-aeb7-00c04fa0ac51"))
SketchPatternFeatureData;
    // [ default ] interface ISketchPatternFeatureData

struct __declspec(uuid("e9172719-836b-11d4-aeb7-00c04fa0ac51"))
MirrorSolidFeatureData;
    // [ default ] interface IMirrorSolidFeatureData

struct __declspec(uuid("e981b4fb-7e86-11d4-aef2-00c04f603faf"))
PropertyManagerPage;
    // [ default ] interface IPropertyManagerPage

struct __declspec(uuid("a2227e66-a3a7-11d4-aeff-00c04f603faf"))
ProjectionArrow;
    // [ default ] interface IProjectionArrow

struct __declspec(uuid("699c7493-db56-4cc2-b7a2-9ffd56698434"))
Tessellation;
    // [ default ] interface ITessellation

struct __declspec(uuid("2f6c1e89-f2d6-11d4-aed5-00c04fa0ac51"))
SheetMetalFeatureData;
    // [ default ] interface ISheetMetalFeatureData

struct __declspec(uuid("0c02ad41-f6e6-11d4-aed6-00c04fa0ac51"))
OneBendFeatureData;
    // [ default ] interface IOneBendFeatureData

struct __declspec(uuid("f3bdb64f-f7c6-11d4-aed6-00c04fa0ac51"))
BendsFeatureData;
    // [ default ] interface IBendsFeatureData

struct __declspec(uuid("3cc0bc03-541f-40c3-866b-8bac502db4eb"))
UserUnit;
    // [ default ] interface IUserUnit

struct __declspec(uuid("c61e9dd7-0813-11d5-aedd-00c04fa0ac51"))
BaseFlangeFeatureData;
    // [ default ] interface IBaseFlangeFeatureData

struct __declspec(uuid("b58e432b-09c8-11d5-aedd-00c04fa0ac51"))
EdgeFlangeFeatureData;
    // [ default ] interface IEdgeFlangeFeatureData

struct __declspec(uuid("e6194f73-0cec-11d5-aedd-00c04fa0ac52"))
MiterFlangeFeatureData;
    // [ default ] interface IMiterFlangeFeatureData

struct __declspec(uuid("a4d90a71-0da5-11d5-aedd-00c04fa0ac51"))
SketchedBendFeatureData;
    // [ default ] interface ISketchedBendFeatureData

struct __declspec(uuid("2134cbfd-0dda-11d5-aedd-00c04fa0ac51"))
ClosedCornerFeatureData;
    // [ default ] interface IClosedCornerFeatureData

struct __declspec(uuid("32700a63-0e5c-11d5-aedd-00c04fa0ac51"))
FoldsFeatureData;
    // [ default ] interface IFoldsFeatureData

struct __declspec(uuid("00644209-0e6c-11d5-aedd-00c04fa0ac51"))
FlatPatternFeatureData;
    // [ default ] interface IFlatPatternFeatureData

struct __declspec(uuid("9890c04d-1196-11d5-aede-00c04fa0ac51"))
LocalLinearPatternFeatureData;
    // [ default ] interface ILocalLinearPatternFeatureData

struct __declspec(uuid("f2e81435-13fb-11d5-aede-00c04fa0ac51"))
LocalCircularPatternFeatureData;
    // [ default ] interface ILocalCircularPatternFeatureData

struct __declspec(uuid("98eadb33-141a-11d5-aede-00c04fa0ac51"))
DerivedPatternFeatureData;
    // [ default ] interface IDerivedPatternFeatureData

struct __declspec(uuid("cb928817-2a89-446e-a1bb-a6eee181359e"))
body2;
    // [ default ] interface IBody2

struct __declspec(uuid("545470a9-ef3c-4fc0-aa89-9676ee0bf318"))
face2;
    // [ default ] interface IFace2

struct __declspec(uuid("27526253-6119-4b38-a1f9-2dc877e72334"))
ModelDoc2;
    // [ default ] interface IModelDoc2

struct __declspec(uuid("071b4d3e-0cd5-4c4b-b6e7-674363a18f4b"))
Loop2;
    // [ default ] interface ILoop2

struct __declspec(uuid("285fd964-4ba2-40d3-89e5-0d7b4236597f"))
MidSurface2;
    // [ default ] interface IMidSurface2

struct __declspec(uuid("ae61a94d-e228-4ac0-8e2a-f000244e3c8b"))
Component2;
    // [ default ] interface IComponent2

struct __declspec(uuid("b92e624b-0dc3-11d5-af1e-00c04f603faf"))
PropertyManagerPage2;
    // [ default ] interface IPropertyManagerPage2

struct __declspec(uuid("2e23d2ef-0f57-11d5-af1f-00c04f603faf"))
PropertyManagerPageGroup;
    // [ default ] interface IPropertyManagerPageGroup

struct __declspec(uuid("ced9caf5-16fa-11d5-af24-00c04f603faf"))
PropertyManagerPageControl;
    // [ default ] interface IPropertyManagerPageControl

struct __declspec(uuid("ebbd7b59-170d-11d5-af24-00c04f603faf"))
PropertyManagerPageLabel;
    // [ default ] interface IPropertyManagerPageLabel

struct __declspec(uuid("ebbd7b5b-170d-11d5-af24-00c04f603faf"))
PropertyManagerPageCheckbox;
    // [ default ] interface IPropertyManagerPageCheckbox

struct __declspec(uuid("3a66c295-17ce-11d5-af24-00c04f603faf"))
PropertyManagerPageButton;
    // [ default ] interface IPropertyManagerPageButton

struct __declspec(uuid("3a66c297-17ce-11d5-af24-00c04f603faf"))
PropertyManagerPageOption;
    // [ default ] interface IPropertyManagerPageOption

struct __declspec(uuid("eb18a469-1800-11d5-af24-00c04f603faf"))
PropertyManagerPageTextbox;
    // [ default ] interface IPropertyManagerPageTextbox

struct __declspec(uuid("cdb49982-1a18-11d5-af24-00c04f603faf"))
IPropertyManagerPageListbox : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddItems (
        VARIANT Texts ) = 0;
    virtual HRESULT __stdcall IAddItems (
        short TextCount,
        BSTR * Texts ) = 0;
    virtual HRESULT __stdcall Clear ( ) = 0;
    virtual HRESULT __stdcall get_CurrentSelection (
        short * Item ) = 0;
    virtual HRESULT __stdcall put_CurrentSelection (
        short Item ) = 0;
    virtual HRESULT __stdcall get_height (
        short * height ) = 0;
    virtual HRESULT __stdcall put_height (
        short height ) = 0;
    virtual HRESULT __stdcall get_ItemText (
        short Item,
        BSTR * text ) = 0;
    virtual HRESULT __stdcall get_Style (
        long * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        long Style ) = 0;
};

struct __declspec(uuid("cdb49983-1a18-11d5-af24-00c04f603faf"))
PropertyManagerPageListbox;
    // [ default ] interface IPropertyManagerPageListbox

struct __declspec(uuid("0bd2ba63-18c5-11d5-af24-00c04f603faf"))
PropertyManagerPageCombobox;
    // [ default ] interface IPropertyManagerPageCombobox

struct __declspec(uuid("96567554-1eda-11d5-af25-00c04f603faf"))
IPropertyManagerPageNumberbox : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Value (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_Value (
        double Value ) = 0;
    virtual HRESULT __stdcall SetRange (
        long units,
        double Minimum,
        double Maximum,
        double Increment,
        VARIANT_BOOL Inclusive ) = 0;
};

struct __declspec(uuid("96567555-1eda-11d5-af25-00c04f603faf"))
PropertyManagerPageNumberbox;
    // [ default ] interface IPropertyManagerPageNumberbox

struct __declspec(uuid("96567556-1eda-11d5-af25-00c04f603faf"))
IPropertyManagerPageSelectionbox : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_height (
        short * height ) = 0;
    virtual HRESULT __stdcall put_height (
        short height ) = 0;
    virtual HRESULT __stdcall get_mark (
        long * mark ) = 0;
    virtual HRESULT __stdcall put_mark (
        long mark ) = 0;
    virtual HRESULT __stdcall get_SingleEntityOnly (
        VARIANT_BOOL * Single ) = 0;
    virtual HRESULT __stdcall put_SingleEntityOnly (
        VARIANT_BOOL Single ) = 0;
    virtual HRESULT __stdcall SetSelectionFilters (
        VARIANT Filters ) = 0;
    virtual HRESULT __stdcall ISetSelectionFilters (
        short FilterCount,
        long * Filters ) = 0;
    virtual HRESULT __stdcall GetSelectionFocus (
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetSelectionFocus ( ) = 0;
    virtual HRESULT __stdcall SetSelectionColor (
        VARIANT_BOOL Special,
        long Color,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetCalloutLabel (
        BSTR Label,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall get_Callout (
        struct ICallout * * retval ) = 0;
    virtual HRESULT __stdcall get_Style (
        long * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        long Style ) = 0;
};

struct __declspec(uuid("96567557-1eda-11d5-af25-00c04f603faf"))
PropertyManagerPageSelectionbox;
    // [ default ] interface IPropertyManagerPageSelectionbox

struct __declspec(uuid("06df8fe1-1344-4e69-9519-535d0160d295"))
MultiJogLeader;
    // [ default ] interface IMultiJogLeader

struct __declspec(uuid("459f4b5d-7f8c-4a7e-8aa0-fcfb6ed2d286"))
ProjectionCurveFeatureData;
    // [ default ] interface IProjectionCurveFeatureData

struct __declspec(uuid("d335d62b-acba-4b09-9631-8b53d57f86c9"))
ScaleFeatureData;
    // [ default ] interface IScaleFeatureData

struct __declspec(uuid("d4c512b3-a169-40ac-83c6-a8f0222a8381"))
ShellFeatureData;
    // [ default ] interface IShellFeatureData

struct __declspec(uuid("d45b744b-dfdc-405c-ae88-6991fbbc44d2"))
SweepFeatureData;
    // [ default ] interface ISweepFeatureData

struct __declspec(uuid("6fda5236-ac50-480e-aa3f-a5681d373abd"))
LoftFeatureData;
    // [ default ] interface ILoftFeatureData

struct __declspec(uuid("97c75b25-7466-44ca-9e0a-31caa7f928f0"))
ThickenFeatureData;
    // [ default ] interface IThickenFeatureData

struct __declspec(uuid("0e16c025-301f-414b-92d3-53833f9998d6"))
SurfCutFeatureData;
    // [ default ] interface ISurfaceCutFeatureData

struct __declspec(uuid("489f09c4-02db-4e6b-a787-094baf521ee3"))
ReplaceFaceFeatureData;
    // [ default ] interface IReplaceFaceFeatureData

struct __declspec(uuid("efe4958e-b373-4849-a93c-01bfdebc830d"))
IRibFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_IsTwoSided (
        VARIANT_BOOL * twoSided ) = 0;
    virtual HRESULT __stdcall put_IsTwoSided (
        VARIANT_BOOL twoSided ) = 0;
    virtual HRESULT __stdcall get_reverseThicknessDir (
        VARIANT_BOOL * reverse ) = 0;
    virtual HRESULT __stdcall put_reverseThicknessDir (
        VARIANT_BOOL reverse ) = 0;
    virtual HRESULT __stdcall get_thickness (
        double * thickness ) = 0;
    virtual HRESULT __stdcall put_thickness (
        double thickness ) = 0;
    virtual HRESULT __stdcall get_RefSketchIndex (
        int * index ) = 0;
    virtual HRESULT __stdcall put_RefSketchIndex (
        int index ) = 0;
    virtual HRESULT __stdcall NextReference (
        int * index ) = 0;
    virtual HRESULT __stdcall get_FlipSide (
        VARIANT_BOOL * FlipSide ) = 0;
    virtual HRESULT __stdcall put_FlipSide (
        VARIANT_BOOL FlipSide ) = 0;
    virtual HRESULT __stdcall get_EnableDraft (
        VARIANT_BOOL * EnableDraft ) = 0;
    virtual HRESULT __stdcall put_EnableDraft (
        VARIANT_BOOL EnableDraft ) = 0;
    virtual HRESULT __stdcall get_draftOutward (
        VARIANT_BOOL * draftOutward ) = 0;
    virtual HRESULT __stdcall put_draftOutward (
        VARIANT_BOOL draftOutward ) = 0;
    virtual HRESULT __stdcall get_draftAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_draftAngle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_ExtrusionDirection (
        long * dir ) = 0;
    virtual HRESULT __stdcall put_ExtrusionDirection (
        long dir ) = 0;
    virtual HRESULT __stdcall get_type (
        long * typ ) = 0;
    virtual HRESULT __stdcall put_type (
        long typ ) = 0;
};

struct __declspec(uuid("dddbaed3-db70-4037-ac91-45265cb3e084"))
RibFeatureData2;
    // [ default ] interface IRibFeatureData2

struct __declspec(uuid("6e8fab36-9e1c-4a84-a160-1e68b703431c"))
IDomeFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_height (
        double * height ) = 0;
    virtual HRESULT __stdcall put_height (
        double height ) = 0;
    virtual HRESULT __stdcall get_reverseDir (
        VARIANT_BOOL * reverse ) = 0;
    virtual HRESULT __stdcall put_reverseDir (
        VARIANT_BOOL reverse ) = 0;
    virtual HRESULT __stdcall get_Elliptical (
        VARIANT_BOOL * Elliptical ) = 0;
    virtual HRESULT __stdcall put_Elliptical (
        VARIANT_BOOL Elliptical ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_face (
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall put_face (
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall get_IFace (
        struct IFace2 * * face ) = 0;
    virtual HRESULT __stdcall put_IFace (
        struct IFace2 * face ) = 0;
};

struct __declspec(uuid("b27af2df-2fd2-4f54-9130-1a79c1305c18"))
DomeFeatureData2;
    // [ default ] interface IDomeFeatureData2

struct __declspec(uuid("d98e9f26-73db-4bd2-a967-31bf7ef35b5b"))
ISimpleHoleFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_DraftWhileExtruding (
        VARIANT_BOOL * draftWhileExtrude ) = 0;
    virtual HRESULT __stdcall put_DraftWhileExtruding (
        VARIANT_BOOL draftWhileExtrude ) = 0;
    virtual HRESULT __stdcall get_draftOutward (
        VARIANT_BOOL * draftOutward ) = 0;
    virtual HRESULT __stdcall put_draftOutward (
        VARIANT_BOOL draftOutward ) = 0;
    virtual HRESULT __stdcall get_ReverseOffset (
        VARIANT_BOOL * draftOutward ) = 0;
    virtual HRESULT __stdcall put_ReverseOffset (
        VARIANT_BOOL draftOutward ) = 0;
    virtual HRESULT __stdcall get_type (
        int * type ) = 0;
    virtual HRESULT __stdcall put_type (
        int type ) = 0;
    virtual HRESULT __stdcall get_diameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_diameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_depth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_depth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_draftAngle (
        double * draftAngle ) = 0;
    virtual HRESULT __stdcall put_draftAngle (
        double draftAngle ) = 0;
    virtual HRESULT __stdcall get_SurfaceOffset (
        double * SurfaceOffset ) = 0;
    virtual HRESULT __stdcall put_SurfaceOffset (
        double SurfaceOffset ) = 0;
    virtual HRESULT __stdcall get_face (
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall put_face (
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall get_IFace (
        struct IFace2 * * face ) = 0;
    virtual HRESULT __stdcall put_IFace (
        struct IFace2 * face ) = 0;
    virtual HRESULT __stdcall get_Vertex (
        IDispatch * * Vertex ) = 0;
    virtual HRESULT __stdcall put_Vertex (
        IDispatch * Vertex ) = 0;
    virtual HRESULT __stdcall get_IVertex (
        struct IVertex * * Vertex ) = 0;
    virtual HRESULT __stdcall put_IVertex (
        struct IVertex * Vertex ) = 0;
};

struct __declspec(uuid("dc8795e8-8fe0-4837-8328-70165844de95"))
SimpleHoleFeatureData2;
    // [ default ] interface ISimpleHoleFeatureData2

struct __declspec(uuid("7a472c09-437c-4c4b-b34c-a144d0e2546c"))
IWizardHoleFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_type (
        int * hole_type ) = 0;
    virtual HRESULT __stdcall put_type (
        int hole_type ) = 0;
    virtual HRESULT __stdcall get_diameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_diameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_CounterBoreDiameter (
        double * cbore_dia ) = 0;
    virtual HRESULT __stdcall put_CounterBoreDiameter (
        double cbore_dia ) = 0;
    virtual HRESULT __stdcall get_CounterDrillDiameter (
        double * cdrill_dia ) = 0;
    virtual HRESULT __stdcall put_CounterDrillDiameter (
        double cdrill_dia ) = 0;
    virtual HRESULT __stdcall get_CounterSinkDiameter (
        double * csunk_dia ) = 0;
    virtual HRESULT __stdcall put_CounterSinkDiameter (
        double csunk_dia ) = 0;
    virtual HRESULT __stdcall get_MinorDiameter (
        double * minor_dia ) = 0;
    virtual HRESULT __stdcall put_MinorDiameter (
        double minor_dia ) = 0;
    virtual HRESULT __stdcall get_MajorDiameter (
        double * major_dia ) = 0;
    virtual HRESULT __stdcall put_MajorDiameter (
        double major_dia ) = 0;
    virtual HRESULT __stdcall get_HoleDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_HoleDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_ThruHoleDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_ThruHoleDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_TapDrillDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_TapDrillDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_ThruTapDrillDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_ThruTapDrillDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_NearCounterSinkDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_NearCounterSinkDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_MidCounterSinkDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_MidCounterSinkDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_FarCounterSinkDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_FarCounterSinkDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_ThreadDiameter (
        double * diameter ) = 0;
    virtual HRESULT __stdcall put_ThreadDiameter (
        double diameter ) = 0;
    virtual HRESULT __stdcall get_depth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_depth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_CounterBoreDepth (
        double * cbore_depth ) = 0;
    virtual HRESULT __stdcall put_CounterBoreDepth (
        double cbore_depth ) = 0;
    virtual HRESULT __stdcall get_CounterDrillDepth (
        double * cdrill_depth ) = 0;
    virtual HRESULT __stdcall put_CounterDrillDepth (
        double cdrill_depth ) = 0;
    virtual HRESULT __stdcall get_HoleDepth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_HoleDepth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_ThruHoleDepth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_ThruHoleDepth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_TapDrillDepth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_TapDrillDepth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_ThruTapDrillDepth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_ThruTapDrillDepth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_ThreadDepth (
        double * depth ) = 0;
    virtual HRESULT __stdcall put_ThreadDepth (
        double depth ) = 0;
    virtual HRESULT __stdcall get_CounterDrillAngle (
        double * cdrill_angle ) = 0;
    virtual HRESULT __stdcall put_CounterDrillAngle (
        double cdrill_angle ) = 0;
    virtual HRESULT __stdcall get_CounterSinkAngle (
        double * csunk_angle ) = 0;
    virtual HRESULT __stdcall put_CounterSinkAngle (
        double csunk_angle ) = 0;
    virtual HRESULT __stdcall get_DrillAngle (
        double * drill_angle ) = 0;
    virtual HRESULT __stdcall put_DrillAngle (
        double drill_angle ) = 0;
    virtual HRESULT __stdcall get_NearCounterSinkAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_NearCounterSinkAngle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_MidCounterSinkAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_MidCounterSinkAngle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_FarCounterSinkAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_FarCounterSinkAngle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_ThreadAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_ThreadAngle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_HeadClearance (
        double * HeadClearance ) = 0;
    virtual HRESULT __stdcall put_HeadClearance (
        double HeadClearance ) = 0;
    virtual HRESULT __stdcall get_face (
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall put_face (
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall get_IFace (
        struct IFace2 * * face ) = 0;
    virtual HRESULT __stdcall put_IFace (
        struct IFace2 * face ) = 0;
    virtual HRESULT __stdcall get_Vertex (
        IDispatch * * Vertex ) = 0;
    virtual HRESULT __stdcall put_Vertex (
        IDispatch * Vertex ) = 0;
    virtual HRESULT __stdcall get_IVertex (
        struct IVertex * * Vertex ) = 0;
    virtual HRESULT __stdcall put_IVertex (
        struct IVertex * Vertex ) = 0;
    virtual HRESULT __stdcall get_endCondition (
        int * endCondition ) = 0;
    virtual HRESULT __stdcall put_endCondition (
        int endCondition ) = 0;
    virtual HRESULT __stdcall get_Standard (
        BSTR * Standard ) = 0;
    virtual HRESULT __stdcall put_Standard (
        BSTR Standard ) = 0;
    virtual HRESULT __stdcall get_FastenerType (
        BSTR * FastenerType ) = 0;
    virtual HRESULT __stdcall put_FastenerType (
        BSTR FastenerType ) = 0;
    virtual HRESULT __stdcall get_FastenerSize (
        BSTR * FastenerSize ) = 0;
    virtual HRESULT __stdcall put_FastenerSize (
        BSTR FastenerSize ) = 0;
    virtual HRESULT __stdcall get_HeadClearanceType (
        long * hcType ) = 0;
    virtual HRESULT __stdcall put_HeadClearanceType (
        long hcType ) = 0;
    virtual HRESULT __stdcall get_CosmeticThreadType (
        long * ctType ) = 0;
    virtual HRESULT __stdcall put_CosmeticThreadType (
        long ctType ) = 0;
};

struct __declspec(uuid("a9da797d-2303-486b-beb1-6f80b765bfb5"))
WizardHoleFeatureData2;
    // [ default ] interface IWizardHoleFeatureData2

struct __declspec(uuid("8427d092-a1fc-49c9-b1ed-ec52d2389e9a"))
IChamferFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetEdgeChamferDistance (
        int side,
        double * distance ) = 0;
    virtual HRESULT __stdcall SetEdgeChamferDistance (
        int side,
        double distance ) = 0;
    virtual HRESULT __stdcall GetVertexChamferDistance (
        int side,
        double * distance ) = 0;
    virtual HRESULT __stdcall SetVertexChamferDistance (
        int side,
        double distance ) = 0;
    virtual HRESULT __stdcall get_type (
        int * chamfer_type ) = 0;
    virtual HRESULT __stdcall put_type (
        int chamfer_type ) = 0;
    virtual HRESULT __stdcall get_EdgeChamferAngle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_EdgeChamferAngle (
        double angle ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetFaceCount (
        long * num ) = 0;
    virtual HRESULT __stdcall IGetFaces (
        long faceCount,
        struct IFace2 * * FaceList ) = 0;
    virtual HRESULT __stdcall ISetFaces (
        long count,
        struct IFace2 * * FaceList ) = 0;
    virtual HRESULT __stdcall get_faces (
        VARIANT * FaceList ) = 0;
    virtual HRESULT __stdcall put_faces (
        VARIANT FaceList ) = 0;
    virtual HRESULT __stdcall GetEdgeCount (
        long * num ) = 0;
    virtual HRESULT __stdcall IGetEdges (
        long count,
        struct IEdge * * EdgeList ) = 0;
    virtual HRESULT __stdcall ISetEdges (
        long count,
        struct IEdge * * EdgeList ) = 0;
    virtual HRESULT __stdcall get_edges (
        VARIANT * EdgeList ) = 0;
    virtual HRESULT __stdcall put_edges (
        VARIANT EdgeList ) = 0;
    virtual HRESULT __stdcall get_Vertex (
        IDispatch * * Vertex ) = 0;
    virtual HRESULT __stdcall put_Vertex (
        IDispatch * Vertex ) = 0;
    virtual HRESULT __stdcall get_LoopCount (
        long * num ) = 0;
    virtual HRESULT __stdcall IGetLoops (
        long count,
        struct ILoop * * loopList ) = 0;
    virtual HRESULT __stdcall ISetLoops (
        long count,
        struct ILoop * * loopList ) = 0;
    virtual HRESULT __stdcall get_Loops (
        VARIANT * loopList ) = 0;
    virtual HRESULT __stdcall put_Loops (
        VARIANT loopList ) = 0;
    virtual HRESULT __stdcall get_EqualDistance (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_EqualDistance (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_IVertex (
        struct IVertex * * Vertex ) = 0;
    virtual HRESULT __stdcall put_IVertex (
        struct IVertex * Vertex ) = 0;
    virtual HRESULT __stdcall get_KeepFeatures (
        VARIANT_BOOL * keep ) = 0;
    virtual HRESULT __stdcall put_KeepFeatures (
        VARIANT_BOOL keep ) = 0;
    virtual HRESULT __stdcall GetIsFlipped (
        IDispatch * entity,
        VARIANT_BOOL * flip ) = 0;
    virtual HRESULT __stdcall SetIsFlipped (
        IDispatch * entity,
        VARIANT_BOOL flip ) = 0;
};

struct __declspec(uuid("5c97a73f-b200-4d1b-a83c-76227ece5877"))
ChamferFeatureData2;
    // [ default ] interface IChamferFeatureData2

struct __declspec(uuid("fd9b0999-d519-41ab-acaa-4f2adedd7015"))
IDraftFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_type (
        int * type ) = 0;
    virtual HRESULT __stdcall put_type (
        int type ) = 0;
    virtual HRESULT __stdcall get_angle (
        double * angle ) = 0;
    virtual HRESULT __stdcall put_angle (
        double angle ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetFacesToDraftCount (
        short * count ) = 0;
    virtual HRESULT __stdcall IGetFacesToDraft (
        short count,
        struct IFace2 * * faceArray ) = 0;
    virtual HRESULT __stdcall ISetFacesToDraft (
        short count,
        struct IFace2 * * faceArray ) = 0;
    virtual HRESULT __stdcall get_FacesToDraft (
        VARIANT * faceArray ) = 0;
    virtual HRESULT __stdcall put_FacesToDraft (
        VARIANT faceArray ) = 0;
    virtual HRESULT __stdcall GetPartingLinesCount (
        short * count ) = 0;
    virtual HRESULT __stdcall IGetPartingLines (
        short count,
        struct IEdge * * lineArray ) = 0;
    virtual HRESULT __stdcall ISetPartingLines (
        short count,
        struct IEdge * * lineArray ) = 0;
    virtual HRESULT __stdcall get_PartingLines (
        VARIANT * faceArray ) = 0;
    virtual HRESULT __stdcall put_PartingLines (
        VARIANT faceArray ) = 0;
    virtual HRESULT __stdcall get_NeutralPlane (
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall put_NeutralPlane (
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall get_DirectionPull (
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall put_DirectionPull (
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall get_FacePropagation (
        short * faceProp ) = 0;
    virtual HRESULT __stdcall put_FacePropagation (
        short faceProp ) = 0;
    virtual HRESULT __stdcall GetOtherFacesFlagAtIndex (
        short index,
        VARIANT_BOOL * flag ) = 0;
    virtual HRESULT __stdcall SetOtherFacesFlagAtIndex (
        short index,
        VARIANT_BOOL flag ) = 0;
    virtual HRESULT __stdcall GetDraftedEntityCount (
        short * count ) = 0;
    virtual HRESULT __stdcall IGetDraftedEntities (
        short count,
        struct IEntity * * entityArray ) = 0;
    virtual HRESULT __stdcall GetDraftedEntities (
        VARIANT * entityArray ) = 0;
    virtual HRESULT __stdcall get_StepType (
        short * StepType ) = 0;
    virtual HRESULT __stdcall put_StepType (
        short StepType ) = 0;
};

struct __declspec(uuid("06c757d2-4e1a-4455-9518-8a5a90218abb"))
DraftFeatureData2;
    // [ default ] interface IDraftFeatureData2

struct __declspec(uuid("9fe7c8db-8a4c-41bb-8e3b-7600692dbc92"))
ISimpleFilletFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_type (
        int * type ) = 0;
    virtual HRESULT __stdcall get_DefaultRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall put_DefaultRadius (
        double radius ) = 0;
    virtual HRESULT __stdcall get_overFlowType (
        int * overflow_type ) = 0;
    virtual HRESULT __stdcall put_overFlowType (
        int overflow_type ) = 0;
    virtual HRESULT __stdcall get_IsMultipleRadius (
        VARIANT_BOOL * IsMultipleRadius ) = 0;
    virtual HRESULT __stdcall put_IsMultipleRadius (
        VARIANT_BOOL IsMultipleRadius ) = 0;
    virtual HRESULT __stdcall get_RoundCorners (
        VARIANT_BOOL * RoundCorners ) = 0;
    virtual HRESULT __stdcall put_RoundCorners (
        VARIANT_BOOL RoundCorners ) = 0;
    virtual HRESULT __stdcall get_PropagateToTangentFaces (
        VARIANT_BOOL * propTgtFaces ) = 0;
    virtual HRESULT __stdcall put_PropagateToTangentFaces (
        VARIANT_BOOL propTgtFaces ) = 0;
    virtual HRESULT __stdcall get_FilletItemsCount (
        int * count ) = 0;
    virtual HRESULT __stdcall GetFilletItemAtIndex (
        int index,
        IDispatch * * pFilletItem ) = 0;
    virtual HRESULT __stdcall IGetFilletItemAtIndex (
        int index,
        IUnknown * * pFilletItem ) = 0;
    virtual HRESULT __stdcall GetRadius (
        IDispatch * pFilletItem,
        double * radius ) = 0;
    virtual HRESULT __stdcall IGetRadius (
        IUnknown * pFilletItem,
        double * radius ) = 0;
    virtual HRESULT __stdcall SetRadius (
        IDispatch * pFilletItem,
        double radius ) = 0;
    virtual HRESULT __stdcall ISetRadius (
        IUnknown * pFilletItem,
        double radius ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_KeepFeatures (
        VARIANT_BOOL * keep ) = 0;
    virtual HRESULT __stdcall put_KeepFeatures (
        VARIANT_BOOL keep ) = 0;
    virtual HRESULT __stdcall GetEdgeCount (
        long * num ) = 0;
    virtual HRESULT __stdcall IGetEdges (
        long count,
        struct IEdge * * EdgeList ) = 0;
    virtual HRESULT __stdcall ISetEdges (
        long count,
        struct IEdge * * EdgeList ) = 0;
    virtual HRESULT __stdcall get_edges (
        VARIANT * EdgeList ) = 0;
    virtual HRESULT __stdcall put_edges (
        VARIANT EdgeList ) = 0;
    virtual HRESULT __stdcall GetFaceCount (
        long whichFaceList,
        long * num ) = 0;
    virtual HRESULT __stdcall IGetFaces (
        long whichFaceList,
        long count,
        struct IFace2 * * FaceList ) = 0;
    virtual HRESULT __stdcall ISetFaces (
        long whichFaceList,
        long count,
        struct IFace2 * * FaceList ) = 0;
    virtual HRESULT __stdcall GetFaces (
        long whichFaceList,
        VARIANT * FaceList ) = 0;
    virtual HRESULT __stdcall SetFaces (
        long whichFaceList,
        VARIANT FaceList ) = 0;
    virtual HRESULT __stdcall GetLoopCount (
        long * num ) = 0;
    virtual HRESULT __stdcall IGetLoops (
        long count,
        struct ILoop2 * * loopList ) = 0;
    virtual HRESULT __stdcall ISetLoops (
        long count,
        struct ILoop2 * * loopList ) = 0;
    virtual HRESULT __stdcall get_Loops (
        VARIANT * loopList ) = 0;
    virtual HRESULT __stdcall put_Loops (
        VARIANT loopList ) = 0;
    virtual HRESULT __stdcall GetFeatureCount (
        long * num ) = 0;
    virtual HRESULT __stdcall IGetFeatures (
        long count,
        struct IFeature * * featList ) = 0;
    virtual HRESULT __stdcall ISetFeatures (
        long count,
        struct IFeature * * featList ) = 0;
    virtual HRESULT __stdcall get_Features (
        VARIANT * featList ) = 0;
    virtual HRESULT __stdcall put_Features (
        VARIANT featList ) = 0;
    virtual HRESULT __stdcall GetHoldLineCount (
        long * num ) = 0;
    virtual HRESULT __stdcall IGetHoldLines (
        long count,
        IDispatch * * pList ) = 0;
    virtual HRESULT __stdcall ISetHoldLines (
        long count,
        IDispatch * * pList ) = 0;
    virtual HRESULT __stdcall get_HoldLines (
        VARIANT * pVar ) = 0;
    virtual HRESULT __stdcall put_HoldLines (
        VARIANT pVar ) = 0;
    virtual HRESULT __stdcall get_CurvatureContinuous (
        VARIANT_BOOL * curveCont ) = 0;
    virtual HRESULT __stdcall put_CurvatureContinuous (
        VARIANT_BOOL curveCont ) = 0;
    virtual HRESULT __stdcall get_HelpPoint (
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall put_HelpPoint (
        IDispatch * pDisp ) = 0;
};

struct __declspec(uuid("e461d38b-5063-4992-a8ff-fc04a69aabb8"))
SimpleFilletFeatureData2;
    // [ default ] interface ISimpleFilletFeatureData2

struct __declspec(uuid("ffcdc95c-1ba9-423a-877e-cb7aa60de9b4"))
IVariableFilletFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_DefaultRadius (
        double * radius ) = 0;
    virtual HRESULT __stdcall put_DefaultRadius (
        double radius ) = 0;
    virtual HRESULT __stdcall get_overFlowType (
        int * overflow_type ) = 0;
    virtual HRESULT __stdcall put_overFlowType (
        int overflow_type ) = 0;
    virtual HRESULT __stdcall get_TransitionType (
        int * transition_type ) = 0;
    virtual HRESULT __stdcall put_TransitionType (
        int transition_type ) = 0;
    virtual HRESULT __stdcall get_PropagateToTangentFaces (
        VARIANT_BOOL * propTgtFaces ) = 0;
    virtual HRESULT __stdcall put_PropagateToTangentFaces (
        VARIANT_BOOL propTgtFaces ) = 0;
    virtual HRESULT __stdcall get_FilletEdgeCount (
        int * count ) = 0;
    virtual HRESULT __stdcall GetFilletEdgeAtIndex (
        int index,
        IDispatch * * pFilletItem ) = 0;
    virtual HRESULT __stdcall IGetFilletEdgeAtIndex (
        int index,
        struct IEdge * * pFilletItem ) = 0;
    virtual HRESULT __stdcall GetRadius (
        IDispatch * pFilletItem,
        double * radius ) = 0;
    virtual HRESULT __stdcall IGetRadius (
        struct IVertex * pFilletItem,
        double * radius ) = 0;
    virtual HRESULT __stdcall SetRadius (
        IDispatch * pFilletItem,
        double radius ) = 0;
    virtual HRESULT __stdcall ISetRadius (
        struct IVertex * pFilletItem,
        double radius ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetRadius2 (
        struct IVertex * pFilletItem,
        VARIANT_BOOL * isAssigned,
        double * radius ) = 0;
    virtual HRESULT __stdcall GetControlPointsCount (
        long * count ) = 0;
    virtual HRESULT __stdcall GetControlPointRadiusAtIndex (
        long index,
        double * Location,
        struct IEdge * * pEdge,
        double * radius ) = 0;
    virtual HRESULT __stdcall SetControlPointRadiusAtIndex (
        long index,
        double Location,
        double radius ) = 0;
};

struct __declspec(uuid("e3b83840-88c8-4388-bf13-620ad7cddcac"))
VariableFilletFeatureData2;
    // [ default ] interface IVariableFilletFeatureData2

struct __declspec(uuid("931e939e-2fde-49a8-8472-abcf79e9f5cc"))
IExtrudeFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetEndCondition (
        VARIANT_BOOL forward,
        int * endCondition ) = 0;
    virtual HRESULT __stdcall SetEndCondition (
        VARIANT_BOOL forward,
        int endCondition ) = 0;
    virtual HRESULT __stdcall GetDepth (
        VARIANT_BOOL forward,
        double * depth ) = 0;
    virtual HRESULT __stdcall SetDepth (
        VARIANT_BOOL forward,
        double depth ) = 0;
    virtual HRESULT __stdcall GetWallThickness (
        VARIANT_BOOL forward,
        double * wallThickness ) = 0;
    virtual HRESULT __stdcall SetWallThickness (
        VARIANT_BOOL forward,
        double wallThickness ) = 0;
    virtual HRESULT __stdcall GetDraftWhileExtruding (
        VARIANT_BOOL forward,
        VARIANT_BOOL * draftWhileExtrude ) = 0;
    virtual HRESULT __stdcall SetDraftWhileExtruding (
        VARIANT_BOOL forward,
        VARIANT_BOOL draftWhileExtrude ) = 0;
    virtual HRESULT __stdcall GetDraftOutward (
        VARIANT_BOOL forward,
        VARIANT_BOOL * draftOutward ) = 0;
    virtual HRESULT __stdcall SetDraftOutward (
        VARIANT_BOOL forward,
        VARIANT_BOOL draftOutward ) = 0;
    virtual HRESULT __stdcall GetDraftAngle (
        VARIANT_BOOL forward,
        double * draftAngle ) = 0;
    virtual HRESULT __stdcall SetDraftAngle (
        VARIANT_BOOL forward,
        double draftAngle ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall GetFace (
        VARIANT_BOOL forward,
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall SetFace (
        VARIANT_BOOL forward,
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall IGetFace (
        VARIANT_BOOL forward,
        struct IFace2 * * face ) = 0;
    virtual HRESULT __stdcall ISetFace (
        VARIANT_BOOL forward,
        struct IFace2 * face ) = 0;
    virtual HRESULT __stdcall GetVertex (
        VARIANT_BOOL forward,
        IDispatch * * face ) = 0;
    virtual HRESULT __stdcall SetVertex (
        VARIANT_BOOL forward,
        IDispatch * face ) = 0;
    virtual HRESULT __stdcall IGetVertex (
        VARIANT_BOOL forward,
        struct IVertex * * face ) = 0;
    virtual HRESULT __stdcall ISetVertex (
        VARIANT_BOOL forward,
        struct IVertex * face ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall get_bothDirections (
        VARIANT_BOOL * bothDirections ) = 0;
    virtual HRESULT __stdcall put_bothDirections (
        VARIANT_BOOL bothDirections ) = 0;
    virtual HRESULT __stdcall get_FlipSideToCut (
        VARIANT_BOOL * flip ) = 0;
    virtual HRESULT __stdcall put_FlipSideToCut (
        VARIANT_BOOL flip ) = 0;
    virtual HRESULT __stdcall IsBossFeature (
        VARIANT_BOOL * IsBossFeature ) = 0;
    virtual HRESULT __stdcall IsThinFeature (
        VARIANT_BOOL * IsThinFeature ) = 0;
    virtual HRESULT __stdcall IsBaseExtrude (
        VARIANT_BOOL * IsBaseExtrude ) = 0;
    virtual HRESULT __stdcall get_ThinWallType (
        int * ThinWallType ) = 0;
    virtual HRESULT __stdcall put_ThinWallType (
        int ThinWallType ) = 0;
    virtual HRESULT __stdcall get_capEnds (
        VARIANT_BOOL * capEnds ) = 0;
    virtual HRESULT __stdcall put_capEnds (
        VARIANT_BOOL capEnds ) = 0;
    virtual HRESULT __stdcall get_CapThickness (
        double * CapThickness ) = 0;
    virtual HRESULT __stdcall put_CapThickness (
        double CapThickness ) = 0;
    virtual HRESULT __stdcall get_merge (
        VARIANT_BOOL * merge ) = 0;
    virtual HRESULT __stdcall put_merge (
        VARIANT_BOOL merge ) = 0;
    virtual HRESULT __stdcall get_FeatureScope (
        VARIANT_BOOL * featScope ) = 0;
    virtual HRESULT __stdcall put_FeatureScope (
        VARIANT_BOOL featScope ) = 0;
    virtual HRESULT __stdcall get_AutoSelect (
        VARIANT_BOOL * autoSel ) = 0;
    virtual HRESULT __stdcall put_AutoSelect (
        VARIANT_BOOL autoSel ) = 0;
    virtual HRESULT __stdcall get_FeatureScopeBodies (
        VARIANT * bodyVar ) = 0;
    virtual HRESULT __stdcall put_FeatureScopeBodies (
        VARIANT bodyVar ) = 0;
    virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetFeatureScopeBodies (
        long count,
        struct IBody2 * * bodyArr ) = 0;
    virtual HRESULT __stdcall ISetFeatureScopeBodies (
        long count,
        struct IBody2 * * bodyArr ) = 0;
    virtual HRESULT __stdcall GetReverseOffset (
        VARIANT_BOOL fwd,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetReverseOffset (
        VARIANT_BOOL fwd,
        VARIANT_BOOL valIn ) = 0;
    virtual HRESULT __stdcall GetTranslateSurface (
        VARIANT_BOOL fwd,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall SetTranslateSurface (
        VARIANT_BOOL fwd,
        VARIANT_BOOL valIn ) = 0;
    virtual HRESULT __stdcall GetEndConditionReference (
        VARIANT_BOOL forward,
        long * referenceType,
        IDispatch * * pDisp ) = 0;
    virtual HRESULT __stdcall SetEndConditionReference (
        VARIANT_BOOL forward,
        IDispatch * pDisp ) = 0;
    virtual HRESULT __stdcall get_Contours (
        VARIANT * Contours ) = 0;
    virtual HRESULT __stdcall put_Contours (
        VARIANT Contours ) = 0;
    virtual HRESULT __stdcall GetContoursCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetContours (
        long count,
        IDispatch * * Contours ) = 0;
    virtual HRESULT __stdcall ISetContours (
        long count,
        IDispatch * * Contours ) = 0;
};

struct __declspec(uuid("0aa8ade4-a503-4d79-a209-69d3dbd6e725"))
ExtrudeFeatureData2;
    // [ default ] interface IExtrudeFeatureData2

struct __declspec(uuid("e055f0ed-db3e-4528-a982-d66d289190a0"))
IRevolveFeatureData2 : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall GetRevolutionAngle (
        VARIANT_BOOL forward,
        double * angle ) = 0;
    virtual HRESULT __stdcall SetRevolutionAngle (
        VARIANT_BOOL forward,
        double angle ) = 0;
    virtual HRESULT __stdcall GetWallThickness (
        VARIANT_BOOL forward,
        double * wallThickness ) = 0;
    virtual HRESULT __stdcall SetWallThickness (
        VARIANT_BOOL forward,
        double wallThickness ) = 0;
    virtual HRESULT __stdcall get_type (
        int * revolveCut_type ) = 0;
    virtual HRESULT __stdcall put_type (
        int revolveCut_type ) = 0;
    virtual HRESULT __stdcall get_ReverseDirection (
        VARIANT_BOOL * ReverseDirection ) = 0;
    virtual HRESULT __stdcall put_ReverseDirection (
        VARIANT_BOOL ReverseDirection ) = 0;
    virtual HRESULT __stdcall IsBossFeature (
        VARIANT_BOOL * IsBossFeature ) = 0;
    virtual HRESULT __stdcall IsThinFeature (
        VARIANT_BOOL * IsThinFeature ) = 0;
    virtual HRESULT __stdcall get_ThinWallType (
        long * ThinWallType ) = 0;
    virtual HRESULT __stdcall put_ThinWallType (
        long ThinWallType ) = 0;
    virtual HRESULT __stdcall get_merge (
        VARIANT_BOOL * merge ) = 0;
    virtual HRESULT __stdcall put_merge (
        VARIANT_BOOL merge ) = 0;
    virtual HRESULT __stdcall get_FeatureScope (
        VARIANT_BOOL * featScope ) = 0;
    virtual HRESULT __stdcall put_FeatureScope (
        VARIANT_BOOL featScope ) = 0;
    virtual HRESULT __stdcall get_AutoSelect (
        VARIANT_BOOL * autoSel ) = 0;
    virtual HRESULT __stdcall put_AutoSelect (
        VARIANT_BOOL autoSel ) = 0;
    virtual HRESULT __stdcall get_FeatureScopeBodies (
        VARIANT * bodyVar ) = 0;
    virtual HRESULT __stdcall put_FeatureScopeBodies (
        VARIANT bodyVar ) = 0;
    virtual HRESULT __stdcall GetFeatureScopeBodiesCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetFeatureScopeBodies (
        long count,
        struct IBody2 * * bodyArr ) = 0;
    virtual HRESULT __stdcall ISetFeatureScopeBodies (
        long count,
        struct IBody2 * * bodyArr ) = 0;
    virtual HRESULT __stdcall AccessSelections (
        IDispatch * topDoc,
        IDispatch * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall IAccessSelections (
        struct IModelDoc2 * topDoc,
        struct IComponent2 * component,
        VARIANT_BOOL * accessGained ) = 0;
    virtual HRESULT __stdcall ReleaseSelectionAccess ( ) = 0;
    virtual HRESULT __stdcall get_Contours (
        VARIANT * Contours ) = 0;
    virtual HRESULT __stdcall put_Contours (
        VARIANT Contours ) = 0;
    virtual HRESULT __stdcall GetContoursCount (
        long * count ) = 0;
    virtual HRESULT __stdcall IGetContours (
        long count,
        IDispatch * * Contours ) = 0;
    virtual HRESULT __stdcall ISetContours (
        long count,
        IDispatch * * Contours ) = 0;
};

struct __declspec(uuid("ac3a7d68-1ea5-4fc8-a726-effd2319593b"))
RevolveFeatureData2;
    // [ default ] interface IRevolveFeatureData2

struct __declspec(uuid("739ac7cf-9017-11d5-af07-0002b34143e5"))
MacroFeatureData;
    // [ default ] interface IMacroFeatureData

struct __declspec(uuid("55aacd8c-97c5-11d5-af4b-00c04f603faf"))
DowelSymbol;
    // [ default ] interface IDowelSymbol

struct __declspec(uuid("2f8be28e-f829-40f7-b568-7f461572ce41"))
DragOperator;
    // [ default ] interface IDragOperator

struct __declspec(uuid("f67412a3-febf-4319-9e8d-323b6ee62c5a"))
CurveDrivenPatternFeatureData;
    // [ default ] interface ICurveDrivenPatternFeatureData

struct __declspec(uuid("4944f9e7-bf50-11d5-af56-00c04f603faf"))
BalloonStack;
    // [ default ] interface IBalloonStack

struct __declspec(uuid("95b8a1aa-1977-46ad-b944-7d525dd76d65"))
StatusBarPane;
    // [ default ] interface IStatusBarPane

struct __declspec(uuid("9015e438-c504-4e9f-a4fa-a03d578fe21f"))
EquationMgr;
    // [ default ] interface IEquationMgr

struct __declspec(uuid("931374cd-ce0e-11d5-af59-00c04f603faf"))
PageSetup;
    // [ default ] interface IPageSetup

struct __declspec(uuid("ab3b9122-1208-4ed3-b53f-fa5c06fcbe1d"))
RipFeatureData;
    // [ default ] interface IRipFeatureData

struct __declspec(uuid("59675115-a0f0-4aa1-9fed-89b10eb36d12"))
HemFeatureData;
    // [ default ] interface IHemFeatureData

struct __declspec(uuid("bf2347c1-cf5f-4168-b203-7b1e544d4697"))
BreakCornerFeatureData;
    // [ default ] interface IBreakCornerFeatureData

struct __declspec(uuid("cd1ce2ae-a4bb-4280-a193-d8a9d0d73117"))
JogFeatureData;
    // [ default ] interface IJogFeatureData

struct __declspec(uuid("acddd04c-a393-462a-be52-dcc9f78851f0"))
SurfExtrudeFeatureData;
    // [ default ] interface ISurfExtrudeFeatureData

struct __declspec(uuid("69c9d6e8-3b00-48dd-bb69-5ad59c6d33e2"))
SurfRevolveFeatureData;
    // [ default ] interface ISurfRevolveFeatureData

struct __declspec(uuid("ae587c54-9cec-43e8-9a9b-318274b7d35f"))
SurfaceOffsetFeatureData;
    // [ default ] interface ISurfaceOffsetFeatureData

struct __declspec(uuid("b32901e5-1a5d-4c16-98c6-2a3d7602f723"))
SurfaceKnitFeatureData;
    // [ default ] interface ISurfaceKnitFeatureData

struct __declspec(uuid("79ee057d-be92-4557-b679-e04824a26c3f"))
SurfaceExtendFeatureData;
    // [ default ] interface ISurfaceExtendFeatureData

struct __declspec(uuid("467c984e-df2d-4644-b4cf-0ac4a722323b"))
SurfacePlanarFeatureData;
    // [ default ] interface ISurfacePlanarFeatureData

struct __declspec(uuid("6beb0424-eda4-11d5-af64-00c04f603faf"))
CenterMark;
    // [ default ] interface ICenterMark

struct __declspec(uuid("2fb4b7b6-87b4-4b10-8961-9ebf65eac73f"))
SurfaceTrimFeatureData;
    // [ default ] interface ISurfaceTrimFeatureData

struct __declspec(uuid("678dcddd-c6ec-4e81-8948-f9fb5c79f3e4"))
SurfaceRadiateFeatureData;
    // [ default ] interface ISurfaceRadiateFeatureData

struct __declspec(uuid("5ee2bf86-c159-4dcb-944a-99acc772679e"))
RefPlaneFeatureData;
    // [ default ] interface IRefPlaneFeatureData

struct __declspec(uuid("9caaa1ab-f2fc-11d5-af66-00c04f603faf"))
Callout;
    // [ default ] interface ICallout

struct __declspec(uuid("fd7c6301-1942-41fb-8036-d9f8ceaac8f9"))
CustomBendAllowance;
    // [ default ] interface ICustomBendAllowance

struct __declspec(uuid("992a14b7-15cf-11d6-af6e-00c04f603faf"))
BlockInstance;
    // [ default ] interface IBlockInstance

struct __declspec(uuid("8cd8314b-1677-11d6-af6e-00c04f603faf"))
BlockDefinition;
    // [ default ] interface IBlockDefinition

struct __declspec(uuid("0d789448-973b-4411-b2d6-a90a1675276d"))
BreakLine;
    // [ default ] interface IBreakLine

struct __declspec(uuid("51440e4b-7ff5-4806-b852-dc238634a160"))
FaceHatch;
    // [ default ] interface IFaceHatch

struct __declspec(uuid("b02f9e06-fc39-422b-9801-27b897ecafa9"))
PropertyManagerPageActiveX;
    // [ default ] interface IPropertyManagerPageActiveX

struct __declspec(uuid("cbd8bea9-e41e-4ef3-884c-dca3c7bef1d8"))
LoftedBendsFeatureData;
    // [ default ] interface ILoftedBendsFeatureData

struct __declspec(uuid("b322a200-3015-467c-b429-dce99445d75b"))
FeatureManager;
    // [ default ] interface IFeatureManager

struct __declspec(uuid("acf23730-ed2c-410f-8f9d-94277db7db4e"))
ModelViewManager;
    // [ default ] interface IModelViewManager

struct __declspec(uuid("d192049a-49a7-4819-9c2e-f7e0f98a0431"))
ModelDocExtension;
    // [ default ] interface IModelDocExtension

struct __declspec(uuid("64ebf95d-ba6f-47cb-8558-ac9487625ed6"))
ConfigurationManager;
    // [ default ] interface IConfigurationManager

struct __declspec(uuid("1f440727-3a73-4128-8da9-d20baf341bbc"))
ReferencePointCurveFeatureData;
    // [ default ] interface IReferencePointCurveFeatureData

struct __declspec(uuid("830fc5d2-05ef-48ef-adab-bf0ff2b4c677"))
FreePointCurveFeatureData;
    // [ default ] interface IFreePointCurveFeatureData

struct __declspec(uuid("96eb4aa2-167f-4a41-9fae-2f88ecec6f92"))
CompositeCurveFeatureData;
    // [ default ] interface ICompositeCurveFeatureData

struct __declspec(uuid("5118f2bc-a0e6-4205-a96d-09e998190030"))
HelixFeatureData;
    // [ default ] interface IHelixFeatureData

struct __declspec(uuid("d50c4a6e-4cbc-4ea9-b6b8-1062baa697d2"))
ImportedCurveFeatureData;
    // [ default ] interface IImportedCurveFeatureData

struct __declspec(uuid("eb53b512-e23d-4b6a-b48d-21828af5f151"))
SketchRegion;
    // [ default ] interface ISketchRegion

struct __declspec(uuid("eb53b514-e23d-4b6a-b48d-21828af5f151"))
SketchContour;
    // [ default ] interface ISketchContour

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_SldWorks =
    {0x83a33d31,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISldWorks =
    {0x83a33d22,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IModelDoc =
    {0x83a33d46,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISelectionMgr =
    {0x83a33d59,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IComponent =
    {0x83a33d9a,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IBody =
    {0x83a33d3c,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IFace =
    {0x83a33d3e,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISurface =
    {0x83a33d40,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ICurve =
    {0x83a33d44,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IBody2 =
    {0x3a075bfd,0x9962,0x4431,{0x83,0x21,0x7a,0xf4,0x90,0x3c,0x55,0xad}};
extern "C" const GUID __declspec(selectany) IID_IFace2 =
    {0x4a8ba4d8,0xda25,0x4b75,{0x8e,0x2d,0x49,0x22,0xb7,0x4d,0x81,0xed}};
extern "C" const GUID __declspec(selectany) IID_IEdge =
    {0x83a33d42,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumCoEdges =
    {0x83a33d61,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ICoEdge =
    {0x83a33d57,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ILoop =
    {0x83a33d53,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumEdges =
    {0x83a33d5f,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ILoop2 =
    {0x9350ca6e,0x0adb,0x485a,{0x89,0x41,0x94,0x07,0xdd,0x7b,0x3b,0x8e}};
extern "C" const GUID __declspec(selectany) IID_IVertex =
    {0x83a33d63,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IFeature =
    {0x83a33d38,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDimension =
    {0x83a33d3a,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IModelDoc2 =
    {0xb90793fb,0xef3d,0x4b80,{0xa5,0xc4,0x99,0x95,0x9c,0xdb,0x6c,0xeb}};
extern "C" const GUID __declspec(selectany) IID_IModelView =
    {0x83a33d4c,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IMathTransform =
    {0xf7d97f82,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IMathVector =
    {0xf7d97f86,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IMathPoint =
    {0xf7d97f84,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ISketch =
    {0x83a33d51,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumSketchPoints =
    {0x83a33dcd,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchPoint =
    {0x83a33dbd,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ICallout =
    {0x9caaa1aa,0xf2fc,0x11d5,{0xaf,0x66,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IEnumSketchSegments =
    {0x83a33dcf,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchSegment =
    {0x83a33dbf,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumSketchHatches =
    {0x54729b8e,0x4086,0x11d3,{0xae,0x9b,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_ISketchHatch =
    {0xc3d00926,0x4068,0x11d3,{0xae,0x9b,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_IMidSurface2 =
    {0x5b6e8476,0x461f,0x43af,{0xb7,0x84,0x90,0xd3,0xcd,0x74,0x33,0x7c}};
extern "C" const GUID __declspec(selectany) IID_IFeatMgrView =
    {0x83a33d75,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IConfiguration =
    {0x83a33d98,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IExplodeStep =
    {0x7241680b,0x0bc6,0x11d4,{0xae,0xee,0x00,0xc0,0x4f,0x61,0x02,0x5c}};
extern "C" const GUID __declspec(selectany) IID_IComponent2 =
    {0x655d6f2a,0x5441,0x45d1,{0x8c,0xba,0xd3,0x5f,0xb2,0x69,0x88,0xe4}};
extern "C" const GUID __declspec(selectany) IID_IEnumBodies2 =
    {0x97a9befa,0x6814,0x4fa6,{0xac,0xb4,0x8c,0xc8,0x4f,0x76,0xfb,0x99}};
extern "C" const GUID __declspec(selectany) IID_IAttributeDef =
    {0x83a33d67,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEntity =
    {0x83a33d65,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IAttribute =
    {0x83a33d71,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IParameter =
    {0x83a33d69,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IReferenceCurve =
    {0x83a33da3,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IColorTable =
    {0x83a33da5,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IAnnotation =
    {0x83a33da9,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDisplayData =
    {0x83a33d9c,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ITextFormat =
    {0x83a33db9,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumModelViews =
    {0x83a33db1,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDetailingDefaults =
    {0x83a33db7,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ILayerMgr =
    {0x75173e30,0xf19e,0x11d2,{0xb8,0xe9,0x00,0xc0,0x4f,0x8e,0xf7,0x38}};
extern "C" const GUID __declspec(selectany) IID_ILayer =
    {0x04b7287c,0xf19d,0x11d2,{0xb8,0xe9,0x00,0xc0,0x4f,0x8e,0xf7,0x38}};
extern "C" const GUID __declspec(selectany) IID_IDesignTable =
    {0xce1eaa88,0x25ad,0x11d3,{0xae,0x91,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_IRefPlane =
    {0x83a33d84,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDatumTag =
    {0x83a33d90,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IGtol =
    {0x83a33d4a,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_INote =
    {0x83a33d55,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IBalloonStack =
    {0x4944f9e6,0xbf50,0x11d5,{0xaf,0x56,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPage =
    {0xe981b4fa,0x7e86,0x11d4,{0xae,0xf2,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IDisplayDimension =
    {0x83a33da1,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IUserUnit =
    {0x82071121,0x8b32,0x4f51,{0x89,0x83,0x93,0x04,0x75,0x65,0x03,0xe7}};
extern "C" const GUID __declspec(selectany) IID_IWeldSymbol =
    {0x83a33d94,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchText =
    {0x83a33dc5,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEquationMgr =
    {0x02272ce8,0xfe52,0x4b94,{0xb1,0x20,0x6d,0x18,0x26,0xfd,0xbe,0x32}};
extern "C" const GUID __declspec(selectany) IID_IPageSetup =
    {0x931374cc,0xce0e,0x11d5,{0xaf,0x59,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IFeatureManager =
    {0x6b39655e,0x381b,0x4bd0,{0x89,0xf5,0x64,0x0d,0x48,0x59,0x3f,0x15}};
extern "C" const GUID __declspec(selectany) IID_ICustomBendAllowance =
    {0x442b6462,0x0350,0x4f5c,{0xa1,0x68,0x3f,0x75,0x3f,0x6c,0xa7,0x92}};
extern "C" const GUID __declspec(selectany) IID_IModelViewManager =
    {0x1aa249ff,0xb758,0x440a,{0x8b,0x88,0x26,0x51,0x2f,0x38,0x5b,0xf3}};
extern "C" const GUID __declspec(selectany) IID_IModelDocExtension =
    {0x99f4d4af,0xf268,0x4ee1,{0x8c,0x55,0x04,0x1f,0x7b,0xec,0xf8,0x79}};
extern "C" const GUID __declspec(selectany) IID_IConfigurationManager =
    {0x8db64337,0xf36e,0x47cc,{0xbb,0xbc,0xb4,0xb9,0x79,0xd3,0x15,0x05}};
extern "C" const GUID __declspec(selectany) IID_IEnumDisplayDimensions =
    {0x83a33dab,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumLoops2 =
    {0x9a6ad388,0x3fc9,0x48de,{0xbf,0xa5,0xb8,0x95,0x34,0x33,0xab,0x36}};
extern "C" const GUID __declspec(selectany) IID_IEnumFaces2 =
    {0x61ecff18,0xac2c,0x405e,{0xb9,0xb8,0x30,0xd8,0x5f,0xdb,0x50,0x87}};
extern "C" const GUID __declspec(selectany) IID_IPartDoc =
    {0x83a33d32,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumBodies =
    {0x83a33d96,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ITessellation =
    {0x699c7492,0xdb56,0x4cc2,{0xb7,0xa2,0x9f,0xfd,0x56,0x69,0x84,0x34}};
extern "C" const GUID __declspec(selectany) IID_IEnumLoops =
    {0x83a33d5d,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumFaces =
    {0x83a33d5b,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IView =
    {0x83a33d50,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISFSymbol =
    {0x83a33d8e,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDatumTargetSym =
    {0x83a33d92,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ICThread =
    {0x83a33d9e,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IBomTable =
    {0x83a33d82,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ICustomSymbol =
    {0x83a33db5,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDrSection =
    {0xf183a33f,0xd4db,0x11d3,{0xae,0xb2,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IEnumComponents =
    {0x51efb944,0xd449,0x11d3,{0xae,0xbe,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_IEnumComponents2 =
    {0xf6804d12,0xb73a,0x49af,{0x81,0xc6,0x05,0xba,0xbb,0x58,0xb8,0x12}};
extern "C" const GUID __declspec(selectany) IID_IEnumDrSections =
    {0x585a6a15,0xe95b,0x11d3,{0xae,0xbc,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IDetailCircle =
    {0x4b65a34a,0x4c44,0x11d4,{0xae,0xf6,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_IProjectionArrow =
    {0xa2227e65,0xa3a7,0x11d4,{0xae,0xff,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IMultiJogLeader =
    {0x01eb5266,0x6ca9,0x4f59,{0xb0,0xb4,0xa0,0x40,0xdd,0x1c,0xcf,0xb6}};
extern "C" const GUID __declspec(selectany) IID_IDowelSymbol =
    {0x55aacd8b,0x97c5,0x11d5,{0xaf,0x4b,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IBlockInstance =
    {0x992a14b6,0x15cf,0x11d6,{0xaf,0x6e,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IBlockDefinition =
    {0x8cd8314a,0x1677,0x11d6,{0xaf,0x6e,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IBreakLine =
    {0x54e1ffbc,0xd989,0x437f,{0xa7,0x01,0x62,0xbd,0xa3,0x9f,0xd1,0x95}};
extern "C" const GUID __declspec(selectany) IID_IFaceHatch =
    {0xe0a98a37,0x8780,0x4e5f,{0xa2,0x8a,0xc7,0xc6,0xaf,0x25,0x23,0x1c}};
extern "C" const GUID __declspec(selectany) IID_ICenterMark =
    {0x6beb0423,0xeda4,0x11d5,{0xaf,0x64,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IMidSurface =
    {0x83a33d88,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IFrame =
    {0x83a33d48,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IStatusBarPane =
    {0x931f2702,0x3257,0x4372,{0xbb,0xcc,0xcb,0xd4,0xa7,0xfb,0xbc,0x41}};
extern "C" const GUID __declspec(selectany) IID_IAssemblyDoc =
    {0x83a33d35,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IMember =
    {0x83a33d4e,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDragOperator =
    {0xe0aace0f,0x3a47,0x437e,{0x99,0xb4,0x93,0x30,0xcd,0x61,0x86,0xba}};
extern "C" const GUID __declspec(selectany) IID_IDrawingDoc =
    {0x83a33d33,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISheet =
    {0x83a33d80,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IModeler =
    {0x83a33d73,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnvironment =
    {0x83a33d78,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumDocuments =
    {0x83a33db3,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IMathUtility =
    {0xf7d97f80,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IEnumDocuments2 =
    {0x76d82d71,0x339a,0x4d1c,{0x91,0xa1,0xf6,0xac,0x0c,0xf9,0xb6,0x25}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPage2 =
    {0xb92e624a,0x0dc3,0x11d5,{0xaf,0x1e,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageGroup =
    {0x2e23d2ee,0x0f57,0x11d5,{0xaf,0x1f,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageControl =
    {0xced9caf4,0x16fa,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IRefAxis =
    {0x83a33d86,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IMate =
    {0x83a33d8a,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IMateEntity =
    {0x83a33d8c,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISWPropertySheet =
    {0x83a33da7,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IRibFeatureData =
    {0x83a33dad,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IDomeFeatureData =
    {0x83a33daf,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchLine =
    {0x83a33dc1,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchArc =
    {0x83a33dc3,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchEllipse =
    {0x83a33dc7,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchParabola =
    {0x83a33dc9,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ISketchSpline =
    {0x83a33dcb,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_ILightDialog =
    {0x83a33df1,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) IID_IEnumCurves =
    {0x5b57e3bc,0x7139,0x11d3,{0xae,0xa2,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_ISimpleHoleFeatureData =
    {0x1d06fd54,0x96dd,0x11d3,{0xae,0xaa,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_IWizardHoleFeatureData =
    {0x887ab457,0xa739,0x11d3,{0xb9,0x7f,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IChamferFeatureData =
    {0x7271d7c7,0xacc9,0x11d3,{0xb9,0x7f,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IDraftFeatureData =
    {0xbc633ce1,0xb367,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_ISimpleFilletFeatureData =
    {0xcc929f0b,0xb404,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IVariableFilletFeatureData =
    {0xcc929f0d,0xb404,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IExtrudeFeatureData =
    {0x908a7175,0xb72c,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IRevolveFeatureData =
    {0xb7fff613,0xb735,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) IID_IMirrorPatternFeatureData =
    {0x414f4f1e,0x30ec,0x11d4,{0xae,0xeb,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) IID_ICircularPatternFeatureData =
    {0xdbbf39de,0x7ab5,0x11d4,{0xae,0xb6,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ILinearPatternFeatureData =
    {0xf86d1e94,0x7de8,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ITablePatternFeatureData =
    {0xe5d1af7c,0x7f5d,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ISketchPatternFeatureData =
    {0xae998464,0x8050,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IMirrorSolidFeatureData =
    {0xe9172718,0x836b,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ISheetMetalFeatureData =
    {0x2f6c1e88,0xf2d6,0x11d4,{0xae,0xd5,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IOneBendFeatureData =
    {0x0c02ad40,0xf6e6,0x11d4,{0xae,0xd6,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IBendsFeatureData =
    {0xf3bdb64e,0xf7c6,0x11d4,{0xae,0xd6,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IBaseFlangeFeatureData =
    {0xc61e9dd6,0x0813,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IEdgeFlangeFeatureData =
    {0xb58e432a,0x09c8,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IMiterFlangeFeatureData =
    {0xe6194f72,0x0cec,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ISketchedBendFeatureData =
    {0xa4d90a70,0x0da5,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IClosedCornerFeatureData =
    {0x2134cbfc,0x0dda,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IFoldsFeatureData =
    {0x32700a62,0x0e5c,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IFlatPatternFeatureData =
    {0x00644208,0x0e6c,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ILocalLinearPatternFeatureData =
    {0x9890c04c,0x1196,0x11d5,{0xae,0xde,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_ILocalCircularPatternFeatureData =
    {0xf2e81434,0x13fb,0x11d5,{0xae,0xde,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IDerivedPatternFeatureData =
    {0x98eadb32,0x141a,0x11d5,{0xae,0xde,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageLabel =
    {0xebbd7b58,0x170d,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageCheckbox =
    {0xebbd7b5a,0x170d,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageButton =
    {0x3a66c294,0x17ce,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageOption =
    {0x3a66c296,0x17ce,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageTextbox =
    {0xeb18a468,0x1800,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageCombobox =
    {0x0bd2ba62,0x18c5,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageActiveX =
    {0xff956369,0xae71,0x4643,{0xaf,0xa8,0x83,0xd7,0x54,0x8f,0x75,0x8a}};
extern "C" const GUID __declspec(selectany) IID_IProjectionCurveFeatureData =
    {0x459f4b5c,0x7f8c,0x4a7e,{0x8a,0xa0,0xfc,0xfb,0x6e,0xd2,0xd2,0x86}};
extern "C" const GUID __declspec(selectany) IID_IScaleFeatureData =
    {0xe7631115,0xf299,0x4852,{0x9d,0x37,0xfc,0x95,0x08,0xa0,0x0b,0xc1}};
extern "C" const GUID __declspec(selectany) IID_IShellFeatureData =
    {0x58252a5a,0x82af,0x49ef,{0xa2,0xfe,0xe8,0xc9,0x95,0x13,0x2f,0x84}};
extern "C" const GUID __declspec(selectany) IID_ISweepFeatureData =
    {0x07799f9d,0x7e4f,0x40de,{0x87,0xae,0xae,0xba,0xab,0xa6,0xa3,0xbc}};
extern "C" const GUID __declspec(selectany) IID_ILoftFeatureData =
    {0xee8d87fe,0x5202,0x45e9,{0x8e,0x5c,0x91,0x08,0x4c,0x13,0x41,0x68}};
extern "C" const GUID __declspec(selectany) IID_IThickenFeatureData =
    {0x85f4dd78,0x9430,0x4937,{0x85,0x04,0x55,0xd2,0x4f,0x2c,0xee,0x41}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceCutFeatureData =
    {0xdfb6c63b,0x287c,0x4141,{0xa6,0x10,0x08,0xd9,0x4c,0xec,0xe9,0x76}};
extern "C" const GUID __declspec(selectany) IID_IReplaceFaceFeatureData =
    {0xd7792e79,0x5983,0x45c7,{0xae,0x7d,0x96,0x6f,0xcb,0x66,0x04,0xd8}};
extern "C" const GUID __declspec(selectany) IID_IMacroFeatureData =
    {0x739ac7ce,0x9017,0x11d5,{0xaf,0x07,0x00,0x02,0xb3,0x41,0x43,0xe5}};
extern "C" const GUID __declspec(selectany) IID_ICurveDrivenPatternFeatureData =
    {0x496a6d86,0x2180,0x46d8,{0xa9,0x73,0x78,0x85,0x55,0x4e,0xfa,0xf3}};
extern "C" const GUID __declspec(selectany) IID_IRipFeatureData =
    {0xd3352f26,0x3333,0x455e,{0x91,0x0b,0xe0,0xf3,0xa4,0x4e,0x76,0xfd}};
extern "C" const GUID __declspec(selectany) IID_IHemFeatureData =
    {0xd1e54427,0x2421,0x413f,{0x9e,0xb3,0xf5,0x68,0xa6,0xbf,0x82,0x6d}};
extern "C" const GUID __declspec(selectany) IID_IBreakCornerFeatureData =
    {0xdf91cd7f,0xf4d5,0x471a,{0x83,0x1b,0xe2,0x01,0xb2,0xc0,0x20,0x90}};
extern "C" const GUID __declspec(selectany) IID_IJogFeatureData =
    {0xc75ca537,0x4aba,0x44f3,{0xac,0x3b,0x73,0xd5,0xdc,0xd0,0xc8,0x34}};
extern "C" const GUID __declspec(selectany) IID_ISurfExtrudeFeatureData =
    {0x157ce6b0,0x16bc,0x49a3,{0xb2,0x07,0x95,0x15,0x9b,0x02,0x30,0x6c}};
extern "C" const GUID __declspec(selectany) IID_ISurfRevolveFeatureData =
    {0x38d7f138,0x4403,0x4eb0,{0x8e,0x9e,0x7d,0xaf,0x6b,0xa3,0x85,0xcf}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceOffsetFeatureData =
    {0x214152e2,0x2f73,0x42e3,{0xab,0x88,0x69,0x0c,0x2e,0xd9,0x91,0x0d}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceKnitFeatureData =
    {0x6ce5bd99,0x0769,0x4daf,{0x82,0x06,0x07,0x51,0x3b,0x6c,0x00,0x05}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceExtendFeatureData =
    {0x72249e3d,0xb571,0x416d,{0x90,0x34,0xde,0x3b,0xe1,0xd9,0x93,0x7c}};
extern "C" const GUID __declspec(selectany) IID_ISurfacePlanarFeatureData =
    {0x6a0860dc,0xbc79,0x4dfd,{0x8a,0x06,0x25,0x2e,0xfc,0xcf,0xcd,0x37}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceTrimFeatureData =
    {0xc9943dee,0x40de,0x4eb9,{0xa3,0xc5,0x7d,0x5c,0xab,0xee,0x3e,0x85}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceRadiateFeatureData =
    {0x82f0509d,0x402b,0x4d79,{0xab,0x6b,0xaa,0x28,0x88,0xfc,0x1e,0x81}};
extern "C" const GUID __declspec(selectany) IID_IRefPlaneFeatureData =
    {0x02b5cbf8,0x5104,0x41f7,{0x90,0x1d,0xa4,0xdc,0xba,0x54,0x70,0x29}};
extern "C" const GUID __declspec(selectany) IID_ILoftedBendsFeatureData =
    {0x619dee3d,0x3398,0x48fe,{0x88,0x18,0xed,0xd4,0x16,0x9f,0xdd,0xb8}};
extern "C" const GUID __declspec(selectany) IID_IReferencePointCurveFeatureData =
    {0x8066432c,0x1376,0x4d6b,{0xaa,0x64,0x46,0xb2,0xd3,0xcc,0x5d,0x60}};
extern "C" const GUID __declspec(selectany) IID_IFreePointCurveFeatureData =
    {0xc11527fa,0xe833,0x4453,{0x80,0xdd,0x22,0x9f,0x6b,0xac,0xc5,0xd9}};
extern "C" const GUID __declspec(selectany) IID_ICompositeCurveFeatureData =
    {0x8d5cfab8,0xa9f9,0x4b7f,{0x92,0x75,0x27,0xe2,0x06,0x2c,0x32,0x4e}};
extern "C" const GUID __declspec(selectany) IID_IHelixFeatureData =
    {0x70e634ee,0x890a,0x421f,{0xab,0xce,0x52,0x08,0xa5,0x63,0x42,0x3c}};
extern "C" const GUID __declspec(selectany) IID_IImportedCurveFeatureData =
    {0x6dc71ec8,0x09f6,0x4d6f,{0xac,0x3f,0x19,0xd8,0xea,0x25,0x8e,0x0b}};
extern "C" const GUID __declspec(selectany) IID_ISketchRegion =
    {0xeb53b511,0xe23d,0x4b6a,{0xb4,0x8d,0x21,0x82,0x8a,0xf5,0xf1,0x51}};
extern "C" const GUID __declspec(selectany) IID_ISketchContour =
    {0xeb53b513,0xe23d,0x4b6a,{0xb4,0x8d,0x21,0x82,0x8a,0xf5,0xf1,0x51}};
extern "C" const GUID __declspec(selectany) DIID_DSldWorksEvents =
    {0x83a33d22,0x37c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SldWorks =
    {0x0788198d,0xf83c,0x43f5,{0xa4,0x1b,0x75,0x84,0x76,0x73,0xf6,0xd3}};
extern "C" const GUID __declspec(selectany) DIID_DPartDocEvents =
    {0x83a33d32,0x37c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_PartDoc =
    {0x83a33d30,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) DIID_DDrawingDocEvents =
    {0x83a33d34,0x37c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DrawingDoc =
    {0x83a33d34,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) DIID_DAssemblyDocEvents =
    {0x83a33d35,0x37c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_AssemblyDoc =
    {0x83a33d36,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_feature =
    {0x83a33d37,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Dimension =
    {0x83a33d39,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Body =
    {0x83a33d3b,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_face =
    {0x83a33d3d,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_surface =
    {0x83a33d3f,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Edge =
    {0x83a33d41,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Curve =
    {0x83a33d43,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_modelDoc =
    {0x83a33d45,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Frame =
    {0x83a33d47,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Gtol =
    {0x83a33d49,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) DIID_DModelViewEvents =
    {0x83a33d4c,0x37c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_ModelView =
    {0x83a33d4b,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Member =
    {0x83a33d4d,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_view =
    {0x83a33d4f,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_sketch =
    {0x83a33d52,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_loop =
    {0x83a33d54,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_note =
    {0x83a33d56,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_CoEdge =
    {0x83a33d58,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Vertex =
    {0x83a33d64,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SelectionMgr =
    {0x83a33d5a,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumFaces =
    {0x83a33d5c,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumFaces2 =
    {0x5f269d24,0xe7a6,0x45b4,{0x88,0x50,0x15,0x98,0x32,0x15,0xb0,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_EnumLoops =
    {0x83a33d5e,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumLoops2 =
    {0xbaa5c9a5,0xcce2,0x44d7,{0x97,0x9a,0x88,0xc1,0x72,0x0f,0x82,0xaa}};
extern "C" const GUID __declspec(selectany) CLSID_EnumEdges =
    {0x83a33d60,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumCoEdges =
    {0x83a33d62,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumBodies =
    {0x83a33d97,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumBodies2 =
    {0xf5519211,0x91ac,0x4234,{0x8c,0x2f,0x42,0x72,0x5b,0xc6,0xb3,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_entity =
    {0x83a33d66,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_attributeDef =
    {0x83a33d68,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Parameter =
    {0x83a33d70,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Attribute =
    {0x83a33d72,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Modeler =
    {0x83a33d74,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) DIID_DFeatMgrViewEvents =
    {0x83a33d76,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_FeatMgrView =
    {0x83a33d77,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Environment =
    {0x83a33d79,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Sheet =
    {0x83a33d81,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_BomTable =
    {0x83a33d83,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_refPlane =
    {0x83a33d85,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_refAxis =
    {0x83a33d87,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_MidSurface =
    {0x83a33d89,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Mate =
    {0x83a33d8b,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_MateEntity =
    {0x83a33d8d,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SFSymbol =
    {0x83a33d8f,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DatumTag =
    {0x83a33d91,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DatumTargetSym =
    {0x83a33d93,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_WeldSymbol =
    {0x83a33d95,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_configuration =
    {0x83a33d99,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_component =
    {0x83a33d9b,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DisplayData =
    {0x83a33d9d,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_CThread =
    {0x83a33d9f,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DisplayDimension =
    {0x83a33da2,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_ReferenceCurve =
    {0x83a33da4,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_ColorTable =
    {0x83a33da6,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) DIID_DSWPropertySheetEvents =
    {0xe05ff9e0,0xfc82,0x11d2,{0x93,0x95,0x00,0xc0,0x4f,0x79,0xbf,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_SWPropertySheet =
    {0x83a33da8,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Annotation =
    {0x83a33daa,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumDisplayDimensions =
    {0x83a33dac,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_RibFeatureData =
    {0x83a33dae,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DomeFeatureData =
    {0x83a33db0,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumModelViews =
    {0x83a33db2,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumDocuments =
    {0x83a33db4,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumDocuments2 =
    {0xfce9fe1b,0xa6b2,0x4ab9,{0x81,0x7d,0xd4,0x9f,0x14,0xe7,0xf7,0x83}};
extern "C" const GUID __declspec(selectany) CLSID_CustomSymbol =
    {0x83a33db6,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_DetailingDefaults =
    {0x83a33db8,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_textFormat =
    {0x83a33dba,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchPoint =
    {0x83a33dbe,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchSegment =
    {0x83a33dc0,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchLine =
    {0x83a33dc2,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchArc =
    {0x83a33dc4,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchText =
    {0x83a33dc6,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchEllipse =
    {0x83a33dc8,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchParabola =
    {0x83a33dca,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_SketchSpline =
    {0x83a33dcc,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumSketchPoints =
    {0x83a33dce,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_EnumSketchSegments =
    {0x83a33df0,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_LightDialog =
    {0x83a33df2,0x27c5,0x11ce,{0xbf,0xd4,0x00,0x40,0x05,0x13,0xbb,0x57}};
extern "C" const GUID __declspec(selectany) CLSID_Layer =
    {0x04b7287d,0xf19d,0x11d2,{0xb8,0xe9,0x00,0xc0,0x4f,0x8e,0xf7,0x38}};
extern "C" const GUID __declspec(selectany) CLSID_LayerMgr =
    {0x75173e31,0xf19e,0x11d2,{0xb8,0xe9,0x00,0xc0,0x4f,0x8e,0xf7,0x38}};
extern "C" const GUID __declspec(selectany) CLSID_DesignTable =
    {0xce1eaa89,0x25ad,0x11d3,{0xae,0x91,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_SketchHatch =
    {0xc3d00927,0x4068,0x11d3,{0xae,0x9b,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_EnumSketchHatches =
    {0x54729b8f,0x4086,0x11d3,{0xae,0x9b,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_EnumCurves =
    {0x5b57e3bd,0x7139,0x11d3,{0xae,0xa2,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleHoleFeatureData =
    {0x1d06fd55,0x96dd,0x11d3,{0xae,0xaa,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_WizardHoleFeatureData =
    {0x887ab458,0xa739,0x11d3,{0xb9,0x7f,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_ChamferFeatureData =
    {0x7271d7c8,0xacc9,0x11d3,{0xb9,0x7f,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_DraftFeatureData =
    {0xbc633ce2,0xb367,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleFilletFeatureData =
    {0xcc929f0c,0xb404,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_VariableFilletFeatureData =
    {0xcc929f0e,0xb404,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_ExtrudeFeatureData =
    {0x908a7176,0xb72c,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_RevolveFeatureData =
    {0xb7fff614,0xb735,0x11d3,{0xb9,0x81,0x00,0x10,0x83,0x02,0x9a,0x97}};
extern "C" const GUID __declspec(selectany) DIID_ISdmDoc =
    {0xac048cea,0xae93,0x11d3,{0xae,0xa7,0x00,0xc0,0x4f,0x60,0xf0,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_SdmDoc =
    {0xac048ce8,0xae93,0x11d3,{0xae,0xa7,0x00,0xc0,0x4f,0x60,0xf0,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_DrSection =
    {0xf183a340,0xd4db,0x11d3,{0xae,0xb2,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_EnumComponents =
    {0x51efb945,0xd449,0x11d3,{0xae,0xbe,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_EnumComponents2 =
    {0xfd27da22,0x03e0,0x4db9,{0x82,0xda,0xfc,0xf9,0x4b,0x11,0xa2,0xfe}};
extern "C" const GUID __declspec(selectany) CLSID_EnumDrSections =
    {0x585a6a16,0xe95b,0x11d3,{0xae,0xbc,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_ExplodeStep =
    {0x7241680c,0x0bc6,0x11d4,{0xae,0xee,0x00,0xc0,0x4f,0x61,0x02,0x5c}};
extern "C" const GUID __declspec(selectany) CLSID_MathUtility =
    {0xf7d97f81,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MathTransform =
    {0xf7d97f83,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MathPoint =
    {0xf7d97f85,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MathVector =
    {0xf7d97f87,0x162e,0x11d4,{0xae,0xab,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MirrorPatternFeatureData =
    {0x414f4f1f,0x30ec,0x11d4,{0xae,0xeb,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_DetailCircle =
    {0x4b65a34b,0x4c44,0x11d4,{0xae,0xf6,0x00,0xc0,0x4f,0x68,0x3c,0xba}};
extern "C" const GUID __declspec(selectany) CLSID_CircularPatternFeatureData =
    {0xdbbf39df,0x7ab5,0x11d4,{0xae,0xb6,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_LinearPatternFeatureData =
    {0xf86d1e95,0x7de8,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_TablePatternFeatureData =
    {0xe5d1af7d,0x7f5d,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_SketchPatternFeatureData =
    {0xae998465,0x8050,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MirrorSolidFeatureData =
    {0xe9172719,0x836b,0x11d4,{0xae,0xb7,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPage =
    {0xe981b4fb,0x7e86,0x11d4,{0xae,0xf2,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_ProjectionArrow =
    {0xa2227e66,0xa3a7,0x11d4,{0xae,0xff,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_Tessellation =
    {0x699c7493,0xdb56,0x4cc2,{0xb7,0xa2,0x9f,0xfd,0x56,0x69,0x84,0x34}};
extern "C" const GUID __declspec(selectany) CLSID_SheetMetalFeatureData =
    {0x2f6c1e89,0xf2d6,0x11d4,{0xae,0xd5,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_OneBendFeatureData =
    {0x0c02ad41,0xf6e6,0x11d4,{0xae,0xd6,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_BendsFeatureData =
    {0xf3bdb64f,0xf7c6,0x11d4,{0xae,0xd6,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_UserUnit =
    {0x3cc0bc03,0x541f,0x40c3,{0x86,0x6b,0x8b,0xac,0x50,0x2d,0xb4,0xeb}};
extern "C" const GUID __declspec(selectany) CLSID_BaseFlangeFeatureData =
    {0xc61e9dd7,0x0813,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_EdgeFlangeFeatureData =
    {0xb58e432b,0x09c8,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MiterFlangeFeatureData =
    {0xe6194f73,0x0cec,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x52}};
extern "C" const GUID __declspec(selectany) CLSID_SketchedBendFeatureData =
    {0xa4d90a71,0x0da5,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_ClosedCornerFeatureData =
    {0x2134cbfd,0x0dda,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_FoldsFeatureData =
    {0x32700a63,0x0e5c,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_FlatPatternFeatureData =
    {0x00644209,0x0e6c,0x11d5,{0xae,0xdd,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_LocalLinearPatternFeatureData =
    {0x9890c04d,0x1196,0x11d5,{0xae,0xde,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_LocalCircularPatternFeatureData =
    {0xf2e81435,0x13fb,0x11d5,{0xae,0xde,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_DerivedPatternFeatureData =
    {0x98eadb33,0x141a,0x11d5,{0xae,0xde,0x00,0xc0,0x4f,0xa0,0xac,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_body2 =
    {0xcb928817,0x2a89,0x446e,{0xa1,0xbb,0xa6,0xee,0xe1,0x81,0x35,0x9e}};
extern "C" const GUID __declspec(selectany) CLSID_face2 =
    {0x545470a9,0xef3c,0x4fc0,{0xaa,0x89,0x96,0x76,0xee,0x0b,0xf3,0x18}};
extern "C" const GUID __declspec(selectany) CLSID_ModelDoc2 =
    {0x27526253,0x6119,0x4b38,{0xa1,0xf9,0x2d,0xc8,0x77,0xe7,0x23,0x34}};
extern "C" const GUID __declspec(selectany) CLSID_Loop2 =
    {0x071b4d3e,0x0cd5,0x4c4b,{0xb6,0xe7,0x67,0x43,0x63,0xa1,0x8f,0x4b}};
extern "C" const GUID __declspec(selectany) CLSID_MidSurface2 =
    {0x285fd964,0x4ba2,0x40d3,{0x89,0xe5,0x0d,0x7b,0x42,0x36,0x59,0x7f}};
extern "C" const GUID __declspec(selectany) CLSID_Component2 =
    {0xae61a94d,0xe228,0x4ac0,{0x8e,0x2a,0xf0,0x00,0x24,0x4e,0x3c,0x8b}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPage2 =
    {0xb92e624b,0x0dc3,0x11d5,{0xaf,0x1e,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageGroup =
    {0x2e23d2ef,0x0f57,0x11d5,{0xaf,0x1f,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageControl =
    {0xced9caf5,0x16fa,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageLabel =
    {0xebbd7b59,0x170d,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageCheckbox =
    {0xebbd7b5b,0x170d,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageButton =
    {0x3a66c295,0x17ce,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageOption =
    {0x3a66c297,0x17ce,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageTextbox =
    {0xeb18a469,0x1800,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageListbox =
    {0xcdb49982,0x1a18,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageListbox =
    {0xcdb49983,0x1a18,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageCombobox =
    {0x0bd2ba63,0x18c5,0x11d5,{0xaf,0x24,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageNumberbox =
    {0x96567554,0x1eda,0x11d5,{0xaf,0x25,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageNumberbox =
    {0x96567555,0x1eda,0x11d5,{0xaf,0x25,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IPropertyManagerPageSelectionbox =
    {0x96567556,0x1eda,0x11d5,{0xaf,0x25,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageSelectionbox =
    {0x96567557,0x1eda,0x11d5,{0xaf,0x25,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_MultiJogLeader =
    {0x06df8fe1,0x1344,0x4e69,{0x95,0x19,0x53,0x5d,0x01,0x60,0xd2,0x95}};
extern "C" const GUID __declspec(selectany) CLSID_ProjectionCurveFeatureData =
    {0x459f4b5d,0x7f8c,0x4a7e,{0x8a,0xa0,0xfc,0xfb,0x6e,0xd2,0xd2,0x86}};
extern "C" const GUID __declspec(selectany) CLSID_ScaleFeatureData =
    {0xd335d62b,0xacba,0x4b09,{0x96,0x31,0x8b,0x53,0xd5,0x7f,0x86,0xc9}};
extern "C" const GUID __declspec(selectany) CLSID_ShellFeatureData =
    {0xd4c512b3,0xa169,0x40ac,{0x83,0xc6,0xa8,0xf0,0x22,0x2a,0x83,0x81}};
extern "C" const GUID __declspec(selectany) CLSID_SweepFeatureData =
    {0xd45b744b,0xdfdc,0x405c,{0xae,0x88,0x69,0x91,0xfb,0xbc,0x44,0xd2}};
extern "C" const GUID __declspec(selectany) CLSID_LoftFeatureData =
    {0x6fda5236,0xac50,0x480e,{0xaa,0x3f,0xa5,0x68,0x1d,0x37,0x3a,0xbd}};
extern "C" const GUID __declspec(selectany) CLSID_ThickenFeatureData =
    {0x97c75b25,0x7466,0x44ca,{0x9e,0x0a,0x31,0xca,0xa7,0xf9,0x28,0xf0}};
extern "C" const GUID __declspec(selectany) CLSID_SurfCutFeatureData =
    {0x0e16c025,0x301f,0x414b,{0x92,0xd3,0x53,0x83,0x3f,0x99,0x98,0xd6}};
extern "C" const GUID __declspec(selectany) CLSID_ReplaceFaceFeatureData =
    {0x489f09c4,0x02db,0x4e6b,{0xa7,0x87,0x09,0x4b,0xaf,0x52,0x1e,0xe3}};
extern "C" const GUID __declspec(selectany) IID_IRibFeatureData2 =
    {0xefe4958e,0xb373,0x4849,{0xa9,0x3c,0x01,0xbf,0xde,0xbc,0x83,0x0d}};
extern "C" const GUID __declspec(selectany) CLSID_RibFeatureData2 =
    {0xdddbaed3,0xdb70,0x4037,{0xac,0x91,0x45,0x26,0x5c,0xb3,0xe0,0x84}};
extern "C" const GUID __declspec(selectany) IID_IDomeFeatureData2 =
    {0x6e8fab36,0x9e1c,0x4a84,{0xa1,0x60,0x1e,0x68,0xb7,0x03,0x43,0x1c}};
extern "C" const GUID __declspec(selectany) CLSID_DomeFeatureData2 =
    {0xb27af2df,0x2fd2,0x4f54,{0x91,0x30,0x1a,0x79,0xc1,0x30,0x5c,0x18}};
extern "C" const GUID __declspec(selectany) IID_ISimpleHoleFeatureData2 =
    {0xd98e9f26,0x73db,0x4bd2,{0xa9,0x67,0x31,0xbf,0x7e,0xf3,0x5b,0x5b}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleHoleFeatureData2 =
    {0xdc8795e8,0x8fe0,0x4837,{0x83,0x28,0x70,0x16,0x58,0x44,0xde,0x95}};
extern "C" const GUID __declspec(selectany) IID_IWizardHoleFeatureData2 =
    {0x7a472c09,0x437c,0x4c4b,{0xb3,0x4c,0xa1,0x44,0xd0,0xe2,0x54,0x6c}};
extern "C" const GUID __declspec(selectany) CLSID_WizardHoleFeatureData2 =
    {0xa9da797d,0x2303,0x486b,{0xbe,0xb1,0x6f,0x80,0xb7,0x65,0xbf,0xb5}};
extern "C" const GUID __declspec(selectany) IID_IChamferFeatureData2 =
    {0x8427d092,0xa1fc,0x49c9,{0xb1,0xed,0xec,0x52,0xd2,0x38,0x9e,0x9a}};
extern "C" const GUID __declspec(selectany) CLSID_ChamferFeatureData2 =
    {0x5c97a73f,0xb200,0x4d1b,{0xa8,0x3c,0x76,0x22,0x7e,0xce,0x58,0x77}};
extern "C" const GUID __declspec(selectany) IID_IDraftFeatureData2 =
    {0xfd9b0999,0xd519,0x41ab,{0xac,0xaa,0x4f,0x2a,0xde,0xdd,0x70,0x15}};
extern "C" const GUID __declspec(selectany) CLSID_DraftFeatureData2 =
    {0x06c757d2,0x4e1a,0x4455,{0x95,0x18,0x8a,0x5a,0x90,0x21,0x8a,0xbb}};
extern "C" const GUID __declspec(selectany) IID_ISimpleFilletFeatureData2 =
    {0x9fe7c8db,0x8a4c,0x41bb,{0x8e,0x3b,0x76,0x00,0x69,0x2d,0xbc,0x92}};
extern "C" const GUID __declspec(selectany) CLSID_SimpleFilletFeatureData2 =
    {0xe461d38b,0x5063,0x4992,{0xa8,0xff,0xfc,0x04,0xa6,0x9a,0xab,0xb8}};
extern "C" const GUID __declspec(selectany) IID_IVariableFilletFeatureData2 =
    {0xffcdc95c,0x1ba9,0x423a,{0x87,0x7e,0xcb,0x7a,0xa6,0x0d,0xe9,0xb4}};
extern "C" const GUID __declspec(selectany) CLSID_VariableFilletFeatureData2 =
    {0xe3b83840,0x88c8,0x4388,{0xbf,0x13,0x62,0x0a,0xd7,0xcd,0xdc,0xac}};
extern "C" const GUID __declspec(selectany) IID_IExtrudeFeatureData2 =
    {0x931e939e,0x2fde,0x49a8,{0x84,0x72,0xab,0xcf,0x79,0xe9,0xf5,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_ExtrudeFeatureData2 =
    {0x0aa8ade4,0xa503,0x4d79,{0xa2,0x09,0x69,0xd3,0xdb,0xd6,0xe7,0x25}};
extern "C" const GUID __declspec(selectany) IID_IRevolveFeatureData2 =
    {0xe055f0ed,0xdb3e,0x4528,{0xa9,0x82,0xd6,0x6d,0x28,0x91,0x90,0xa0}};
extern "C" const GUID __declspec(selectany) CLSID_RevolveFeatureData2 =
    {0xac3a7d68,0x1ea5,0x4fc8,{0xa7,0x26,0xef,0xfd,0x23,0x19,0x59,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_MacroFeatureData =
    {0x739ac7cf,0x9017,0x11d5,{0xaf,0x07,0x00,0x02,0xb3,0x41,0x43,0xe5}};
extern "C" const GUID __declspec(selectany) CLSID_DowelSymbol =
    {0x55aacd8c,0x97c5,0x11d5,{0xaf,0x4b,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_DragOperator =
    {0x2f8be28e,0xf829,0x40f7,{0xb5,0x68,0x7f,0x46,0x15,0x72,0xce,0x41}};
extern "C" const GUID __declspec(selectany) CLSID_CurveDrivenPatternFeatureData =
    {0xf67412a3,0xfebf,0x4319,{0x9e,0x8d,0x32,0x3b,0x6e,0xe6,0x2c,0x5a}};
extern "C" const GUID __declspec(selectany) CLSID_BalloonStack =
    {0x4944f9e7,0xbf50,0x11d5,{0xaf,0x56,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_StatusBarPane =
    {0x95b8a1aa,0x1977,0x46ad,{0xb9,0x44,0x7d,0x52,0x5d,0xd7,0x6d,0x65}};
extern "C" const GUID __declspec(selectany) CLSID_EquationMgr =
    {0x9015e438,0xc504,0x4e9f,{0xa4,0xfa,0xa0,0x3d,0x57,0x8f,0xe2,0x1f}};
extern "C" const GUID __declspec(selectany) CLSID_PageSetup =
    {0x931374cd,0xce0e,0x11d5,{0xaf,0x59,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_RipFeatureData =
    {0xab3b9122,0x1208,0x4ed3,{0xb5,0x3f,0xfa,0x5c,0x06,0xfc,0xbe,0x1d}};
extern "C" const GUID __declspec(selectany) CLSID_HemFeatureData =
    {0x59675115,0xa0f0,0x4aa1,{0x9f,0xed,0x89,0xb1,0x0e,0xb3,0x6d,0x12}};
extern "C" const GUID __declspec(selectany) CLSID_BreakCornerFeatureData =
    {0xbf2347c1,0xcf5f,0x4168,{0xb2,0x03,0x7b,0x1e,0x54,0x4d,0x46,0x97}};
extern "C" const GUID __declspec(selectany) CLSID_JogFeatureData =
    {0xcd1ce2ae,0xa4bb,0x4280,{0xa1,0x93,0xd8,0xa9,0xd0,0xd7,0x31,0x17}};
extern "C" const GUID __declspec(selectany) CLSID_SurfExtrudeFeatureData =
    {0xacddd04c,0xa393,0x462a,{0xbe,0x52,0xdc,0xc9,0xf7,0x88,0x51,0xf0}};
extern "C" const GUID __declspec(selectany) CLSID_SurfRevolveFeatureData =
    {0x69c9d6e8,0x3b00,0x48dd,{0xbb,0x69,0x5a,0xd5,0x9c,0x6d,0x33,0xe2}};
extern "C" const GUID __declspec(selectany) CLSID_SurfaceOffsetFeatureData =
    {0xae587c54,0x9cec,0x43e8,{0x9a,0x9b,0x31,0x82,0x74,0xb7,0xd3,0x5f}};
extern "C" const GUID __declspec(selectany) CLSID_SurfaceKnitFeatureData =
    {0xb32901e5,0x1a5d,0x4c16,{0x98,0xc6,0x2a,0x3d,0x76,0x02,0xf7,0x23}};
extern "C" const GUID __declspec(selectany) CLSID_SurfaceExtendFeatureData =
    {0x79ee057d,0xbe92,0x4557,{0xb6,0x79,0xe0,0x48,0x24,0xa2,0x6c,0x3f}};
extern "C" const GUID __declspec(selectany) CLSID_SurfacePlanarFeatureData =
    {0x467c984e,0xdf2d,0x4644,{0xb4,0xcf,0x0a,0xc4,0xa7,0x22,0x32,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_CenterMark =
    {0x6beb0424,0xeda4,0x11d5,{0xaf,0x64,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_SurfaceTrimFeatureData =
    {0x2fb4b7b6,0x87b4,0x4b10,{0x89,0x61,0x9e,0xbf,0x65,0xea,0xc7,0x3f}};
extern "C" const GUID __declspec(selectany) CLSID_SurfaceRadiateFeatureData =
    {0x678dcddd,0xc6ec,0x4e81,{0x89,0x48,0xf9,0xfb,0x5c,0x79,0xf3,0xe4}};
extern "C" const GUID __declspec(selectany) CLSID_RefPlaneFeatureData =
    {0x5ee2bf86,0xc159,0x4dcb,{0x94,0x4a,0x99,0xac,0xc7,0x72,0x67,0x9e}};
extern "C" const GUID __declspec(selectany) CLSID_Callout =
    {0x9caaa1ab,0xf2fc,0x11d5,{0xaf,0x66,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_CustomBendAllowance =
    {0xfd7c6301,0x1942,0x41fb,{0x80,0x36,0xd9,0xf8,0xce,0xaa,0xc8,0xf9}};
extern "C" const GUID __declspec(selectany) CLSID_BlockInstance =
    {0x992a14b7,0x15cf,0x11d6,{0xaf,0x6e,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_BlockDefinition =
    {0x8cd8314b,0x1677,0x11d6,{0xaf,0x6e,0x00,0xc0,0x4f,0x60,0x3f,0xaf}};
extern "C" const GUID __declspec(selectany) CLSID_BreakLine =
    {0x0d789448,0x973b,0x4411,{0xb2,0xd6,0xa9,0x0a,0x16,0x75,0x27,0x6d}};
extern "C" const GUID __declspec(selectany) CLSID_FaceHatch =
    {0x51440e4b,0x7ff5,0x4806,{0xb8,0x52,0xdc,0x23,0x86,0x34,0xa1,0x60}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyManagerPageActiveX =
    {0xb02f9e06,0xfc39,0x422b,{0x98,0x01,0x27,0xb8,0x97,0xec,0xaf,0xa9}};
extern "C" const GUID __declspec(selectany) CLSID_LoftedBendsFeatureData =
    {0xcbd8bea9,0xe41e,0x4ef3,{0x88,0x4c,0xdc,0xa3,0xc7,0xbe,0xf1,0xd8}};
extern "C" const GUID __declspec(selectany) CLSID_FeatureManager =
    {0xb322a200,0x3015,0x467c,{0xb4,0x29,0xdc,0xe9,0x94,0x45,0xd7,0x5b}};
extern "C" const GUID __declspec(selectany) CLSID_ModelViewManager =
    {0xacf23730,0xed2c,0x410f,{0x8f,0x9d,0x94,0x27,0x7d,0xb7,0xdb,0x4e}};
extern "C" const GUID __declspec(selectany) CLSID_ModelDocExtension =
    {0xd192049a,0x49a7,0x4819,{0x9c,0x2e,0xf7,0xe0,0xf9,0x8a,0x04,0x31}};
extern "C" const GUID __declspec(selectany) CLSID_ConfigurationManager =
    {0x64ebf95d,0xba6f,0x47cb,{0x85,0x58,0xac,0x94,0x87,0x62,0x5e,0xd6}};
extern "C" const GUID __declspec(selectany) CLSID_ReferencePointCurveFeatureData =
    {0x1f440727,0x3a73,0x4128,{0x8d,0xa9,0xd2,0x0b,0xaf,0x34,0x1b,0xbc}};
extern "C" const GUID __declspec(selectany) CLSID_FreePointCurveFeatureData =
    {0x830fc5d2,0x05ef,0x48ef,{0xad,0xab,0xbf,0x0f,0xf2,0xb4,0xc6,0x77}};
extern "C" const GUID __declspec(selectany) CLSID_CompositeCurveFeatureData =
    {0x96eb4aa2,0x167f,0x4a41,{0x9f,0xae,0x2f,0x88,0xec,0xec,0x6f,0x92}};
extern "C" const GUID __declspec(selectany) CLSID_HelixFeatureData =
    {0x5118f2bc,0xa0e6,0x4205,{0xa9,0x6d,0x09,0xe9,0x98,0x19,0x00,0x30}};
extern "C" const GUID __declspec(selectany) CLSID_ImportedCurveFeatureData =
    {0xd50c4a6e,0x4cbc,0x4ea9,{0xb6,0xb8,0x10,0x62,0xba,0xa6,0x97,0xd2}};
extern "C" const GUID __declspec(selectany) CLSID_SketchRegion =
    {0xeb53b512,0xe23d,0x4b6a,{0xb4,0x8d,0x21,0x82,0x8a,0xf5,0xf1,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_SketchContour =
    {0xeb53b514,0xe23d,0x4b6a,{0xb4,0x8d,0x21,0x82,0x8a,0xf5,0xf1,0x51}};

#pragma pack(pop)
